{"version":3,"sources":["components/contexts/Baseline.js","components/localization/en_US.js","components/localization/it_IT.js","components/localization/i18n.js","helpers/Utils.js","helpers/Common.js","helpers/Hooks.js","components/contexts/PluginContext.js","components/contexts/FetchContext.js","components/contexts/ToastContext.js","components/contexts/RestApiContext.js","components/common/PageHeader.js","components/common/PageFooter.js","components/common/ConfirmIconButton.js","components/common/ContainedIconButton.js","components/common/FieldError.js","components/common/SelectAsync.js","components/common/Label.js","components/common/UploadFile.js","components/common/IconPicker.js","components/common/AvatarSkeleton.js","components/common/ImageSkeleton.js","components/common/ColorPicker.js","components/common/PageLoader.js","components/common/DateTime.js","components/common/UploadDialog.js","components/common/ImageRowList.js","components/common/ErrorView.js","components/pages/settings/components/TabPanel.js","components/pages/settings/PageContext.js","components/pages/settings/components/TabContainer.js","components/pages/settings/components/InfoForm.js","components/pages/settings/components/MediaForm.js","components/pages/settings/components/Wizards/AppleCertificatesWizard.js","components/pages/settings/components/Wizards/GoogleCertificatesWizard.js","components/pages/settings/components/IosForm.js","components/pages/settings/components/AndroidForm.js","components/pages/settings/components/ServicesForm.js","components/pages/settings/components/MenuItems/BaseMenuItem.js","components/pages/settings/components/MenuItems/HomePageMenuItem.js","components/pages/settings/components/MenuItems/WebViewMenuItem.js","components/pages/settings/components/MenuItems/BusinessCardMenuItem.js","components/pages/settings/components/MenuItems/EmailMenuItem.js","components/pages/settings/components/MenuItems/OpenUrlMenuItem.js","components/pages/settings/components/MenuItems/PhoneCallMenuItem.js","components/pages/settings/components/MenuItems/PhotoEditorMenuItem.js","components/pages/settings/components/MenuItems/PhotoSendMenuItem.js","components/pages/settings/components/MenuItems/QrMenuItem.js","components/pages/settings/components/MenuItems/SmsMessageMenuItem.js","components/pages/settings/components/MenuItems/SeparatorMenuItem.js","components/pages/settings/components/MenuItems/EmptyLineMenuItem.js","components/pages/settings/components/MenuForm.js","components/pages/settings/components/Dialogs/LiveViewDialog.js","components/pages/settings/components/Dialogs/PublishConfigDialog.js","components/pages/settings/components/Dialogs/ResetSettingsDialog.js","components/pages/settings/components/SettingsForm.js","components/pages/settings/components/ConfigStatus.js","components/pages/settings/SettingsPage.js","components/pages/builds/PageContext.js","components/pages/builds/components/BuildsList.js","components/pages/builds/components/BuildStatus.js","components/pages/builds/BuildsPage.js","components/pages/builds/components/Dialogs/BuildAppDialog.js","components/pages/notfound/NotFoundPage.js","components/pages/error/ErrorPage.js","components/pages/error/NoLocalErrorPage.js","components/pages/error/NoHttpErrorPage.js","components/routing/Routes.js","components/layout/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["GetApiKeyInternal","oot","p","o","c","length","r","t","charAt","u","n","w","z","d","join","uwZ","substr","wQB","Cqe","xEf","window","en_US","translation","it_IT","_wpApAdminSettings","variable","locale","wp_locale","split","trim","i18n","use","initReactI18next","init","resources","lng","fallbackLng","keySeparator","interpolation","escapeValue","getColoredBottonStyle","theme","color","v","palette","getContrastText","backgroundColor","LicenseStatus","ImageType","FileType","MenuLayoutType","UserLoginType","ProcessStatus","MaxFileSize","MenuItemTypes","HomePage","BusinessCard","MailTo","EmptyLine","OpenURL","PhoneCall","PhotoEditor","PhotoSend","QR","Separator","SendSms","OnLineWebView","Label","CommonMenuItem","hideIcon","hideTitle","MenuItemDefaultValue","cloneDeep","type","icon","iconCode","title","backgroundImage","textColor","fontSize","fontStyle","platform","isVisible","isProtected","props","isAbsoluteUrl","url","wpUrl","templateId","email","phoneNumber","thickness","allowShare","validUrlRegEx","getValidUrlRegEx","MenuItemValidateSchema","Yup","shape","required","nullable","when","is","then","matches","min","SettingsValidateSchema","Info","appTitle","menuTitle","bundleId","shareAppIos","shareAppAndroid","enableAppMenu","appPrimaryColor","appSecondaryColor","appTitleColor","colorHeaderMenu","menuTitleBackgroundColor","menuItemsBackgroundColor","menuItemsTextColor","menuBackgroundColor","Assets","Ios","enableiOSBuild","iOSP12CertificateFile","iOSCertificatePassword","iOSMobileProvisionFile","Android","enableAndroidBuild","androidKeyStoreFile","androidKeyStorePassword","Services","Aphorisms","author","phrase","useAggregatedState","source","state","_setState","useState","newState","prevState","Object","assign","usePageReadyState","promises","pageIsReady","pageHasError","promisesCount","useRef","async","loaders","deps","current","Promise","all","i","checkIfPageIsReady","push","useBusyState","key","keys","filter","index","isBusy","PluginContext","React","createContext","Provider","PluginProvider","_ref","plugin","setPlugin","siteUid","restUrl","pluginApiUrl","concat","internalAPIUrl","azureApiUrl","externalAPIUrl","wordPressApiUrl","wordPressNonce","nonce","platformVersion","pluginVersion","assetsUrl","adminEmail","apiKey","getApiKeyAsync","Baseline","_jsx","value","getAssetUrl","assetPath","children","HttpMethods","FetchContext","FetchProvider","enqueueSnackbar","useSnackbar","useContext","snackOptions","variant","autoHideDuration","createError","code","message","error","Error","fetchOk","api","cfg","MSInputMethodContext","document","documentMode","headers","body","String","pair","entries","cache","mode","Headers","fetch","ok","status","json","data","reject","errors","errorKeys","collectErrorDetails","details","map","x","errorId","forEach","errorKey","catch","fetchRetry","retries","fetchAuthorized","fetchWpAuthorized","ToastContext","ToastProvider","showInfoMessage","showSuccessMessage","showWarningMessage","showErrorMessage","compileRoute","route","params","getOwnPropertyNames","undefined","prop","pluginRoute","azureRoute","wordpressRoute","compileRouteWP","ApiRoutes","GetSettings","UpdateSettings","GetMenuItems","UpdateMenuItems","ResetSettings","GetAppConfig","CheckPendingConfigChanges","UpdateLiveConfig","UpdateAppConfig","GetTodaySalt","GetBuilds","CheckLicense","CreateBuild","CreateAppleCertificates","CreateGoogleCertificates","GetCategories","GetPages","GetIconClasses","RestApiContext","RestApiProvider","setState","btoaSafe","btoa","replace","safeEncode","json1","data2","envelope","str","hex","charCodeAt","toString","slice","stringToHex","JSON","stringify","getEncryptedTextAsync","salt","text","enc","Utf8","parse","iv","AES","encrypt","keySize","CBC","padding","pad","Pkcs7","getBuildsAsync","method","getSettingsAsync","updateSettingsAsync","settings","_ref2","getMenuItemsAsync","updateMenuItemsAsync","menuItems","_ref3","resetSettingsAsync","getAppConfigAsync","checkConfigChangesAsync","updateLiveConfigAsync","updateAppConfigAsync","getIconClassesAsync","includes","cssClass","checkLicenseAsync","getLiveViewerQrCodeAsync","configUrl","siteUrl","createBuildAsync","todaySalt","base64Salt","atob","getTodaySaltAsync","p12Password","buildConfig","iOS","keyStoreAlias","android","keyAlias","keyStorePassword","keyPassword","createAppleCertsAsync","keyId","teamId","_ref4","createGoogleCertsAsync","keystoreAlias","_ref5","getWordPressCategoriesAsync","page","arguments","perPage","per_page","orderBy","order","getWordPressPagesAsync","useStyles","makeStyles","root","search","flexGrow","height","spacing","display","alignItems","searchIcon","marginRight","searchInput","searchButton","common","white","marginLeft","searchAllign","addButton","saveButton","cancelButton","actionButton1","actionButton2","PageHeader","subtitle","onSearchClick","add","addButtonText","onAddClick","save","saveButtonText","onSaveClick","cancel","cancelButtonText","onCancelClick","action1","action1StartIcon","action1ButtonText","action1Disabled","onAction1Click","action2","action2StartIcon","action2ButtonText","action2Disabled","onAction2Click","disabled","classes","searchText","setSearchText","_jsxs","Grid","container","justify","className","clsx","item","Typography","component","gutterBottom","Button","size","startIcon","onClick","Paper","elevation","SearchIcon","Input","disableUnderline","placeholder","onChange","e","target","IconButton","CloseRoundedIcon","PageFooter","style","marginTop","Link","href","alignContent","justifyContent","transition","dangerousButton","colors","red","confirmButton","green","ContainedIconButton","withStyles","grey","FieldError","name","setIsVisible","errorMessage","setErrorMessage","useEffect","_","camelCase","normalizedName","_Fragment","width","asyncSelect","primary","flexShrink","borderRadius","lineHeight","minWidth","whiteSpace","rounded","dropZone","border","outline","flexWrap","opacity","cursor","dragActive","borderColor","image","info","overflow","textOverflow","list","thumbnail","actions","removeButton","UploadFile","singleFile","dataField","upload","onFileDrop","onFileUploaded","helpText","uploadOnDrop","uploadButtonText","removeButtonText","removeAllButtonText","files","setFiles","handleDrop","useCallback","acceptedFiles","prevFiles","isUploading","setIsUploading","uploadAllFilesClickHandler","file","FormData","append","console","debug","getRootProps","getInputProps","isDragActive","useDropzone","onDrop","zIndex","maxWidth","borderStyle","borderWidth","flexDirection","align","noWrap","CloudUploadIcon","underline","List","ListItem","disableGutters","divider","ListItemIcon","CircularProgress","PublishIcon","ListItemText","primaryTypographyProps","Tooltip","edge","newFiles","splice","removeFileClickHandler","DeleteIcon","removeAllFilesClickHandler","hover","open","normal","textAlign","IconPicker","icons","handleChange","titleText","setOpen","setHover","filteredIcons","setFilteredIcons","substring","onMouseOver","onMouseLeave","xs","Dialog","onClose","maxHeight","margin","TextField","InputProps","endAdornment","InputAdornment","position","iconClickHandler","avatar","AvatarSkeleton","src","isReady","setIsReady","Skeleton","cloneElement","hidden","imgProps","onLoad","loadAvatarImageHandler","onError","errorImageHandler","colorName","swatch","background","boxShadow","popover","cover","top","right","bottom","left","round","precision","multiplier","Math","pow","hexToRgbA","test","rgb","g","b","a","ColorPicker","displayColorPicker","setDisplayColorPicker","setColor","showPickerHandler","closePickerHandler","ChromePicker","alpha","onChangeComplete","marginBottom","PageLoader","aphorism","enableAphorism","LinearProgress","minHeight","DateTime","date","time","Intl","DateTimeFormat","day","format","Date","month","year","formatDate","hour","minute","formaTime","UploadDialog","uploadHandler","onFileDropHandler","handleClose","fullWidth","paddingLeft","paddingRight","direction","CloseIcon","overflowX","avatarSkeleton","ImageRowList","images","imagePropName","removeImageHandler","useTheme","Badge","anchorOrigin","vertical","horizontal","overlap","badgeContent","Avatar","ImageIcon","ErrorView","useTranslation","BugReportIcon","TabPanel","label","role","id","Box","PageContext","PageProvider","setPageIsReady","busy","setIsBusy","license","isLegacy","categories","pages","qrLiveViewer","configStatus","configHasChanges","apiClient","validateSettingsAsync","validate","abortEarly","err","inner","path","validateMenuItemsAsync","some","areLegacySettings","areLegacyItems","getConfigurationAsync","config","saveConfigurationAsync","resetConfigurationAsync","mergeSettings","tabSettings","prevSettings","hasChanges","mergeMenuItems","tabMenuItems","prevMenuItems","validateAllAsync","TabContainer","currentIndex","setCurrentIndex","AppBar","Tabs","changeIndexHandler","newValue","Children","child","Tab","invisible","find","tabIndex","isValidElement","sectionTitle","content","field","progress","pickerBox","InfoForm","formRef","validationSchema","onBlur","onSubmit","Card","CardContent","Container","Formik","enableReinitialize","initialValues","isEmpty","versionNumber","appMenuLayout","homeUrl","entryTextColor","entryBackgroundColor","errorTextColor","useLightStatusBar","useUserLogin","userLoginType","licenseId","submitClickHandler","values","setSubmitting","innerRef","validateOnChange","validateOnBlur","isSubmitting","handleSubmit","setFieldValue","Form","noValidate","autoComplete","Field","helperText","CheckboxWithLabel","RadioGroup","FormControlLabel","control","Radio","avatarSize","button","MediaForm","appSplash","setAppSplash","appSplashImage","appIcon","setAppIcon","menuHeader","setMenuHeader","menuHeaderBackgroundImage","loginPage","setLoginPage","loginPageImage","uploadfileAsync","imageType","storedImageInfo","setImage","URL","createObjectURL","publicUrl","fileDropHandler","endsWith","resetImageHandler","alt","objectFit","Divider","navButton","deleteButton","resetButton","helpMeButton","orange","wizard","IosForm","createCerts","uploadFileAsync","fileType","credentials","storedFileInfo","isFileOk","wrongFileMessage","inWizard","setInWizard","isConfigured","setIsConfigured","inputProps","form","InsertDriveFileIcon","password","AndroidForm","androidKeyStoreAlias","alias","ServicesForm","oneSignalAppId","sendGripApiKey","formControl","colorPicker","deleteButton2","fontSizeOptions","fontStyleOptions","platformOptions","BaseMenuItem","disableIcon","disableTitle","disableBackgroundColor","disableTextColor","disableFontSize","disableFontStyle","disablePlatform","disableIsVisible","onUpdated","onRemove","openDeleteDialog","setOpenDeleteDialog","bkgImage","setBkgImage","getInitialValues","_item$isVisible","_item$isProtected","_item$hideIcon","_item$hideTitle","setValues","lg","xl","ErrorMessage","FormControl","InputLabel","Select","option","MenuItem","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","isAbsoluteUrlOptions","HomePageMenuItem","link","slug","WebViewMenuItem","BusinessCardMenuItem","EmailMenuItem","OpenUrlMenuItem","PhoneCallMenuItem","imagesList","paddingBottom","imageSourceOptions","isHelpPageAbsoluteUrlOptions","PhotoEditorMenuItem","getImagesOptions","removeImage","thumbnailUrl","imageUrl","publicThumbnailUrl","openUploadOverlayDialog","setOpenUploadOverlayDialog","openUploadScenarioDialog","setOpenUploadScenarioDialog","imageSource","isHelpPageAbsoluteUrl","result","PhotoSendMenuItem","QrMenuItem","SmsMessageMenuItem","SeparatorMenuItem","EmptyLineMenuItem","menu","itemsList","bigIcon","MenuForm","sourceItems","setMenuItems","currentItemId","setCurrentItemId","anchorEl","setAnchorEl","replaceMenuItems","newMenuItems","addMenuItemHandler","menuItemType","menuItemId","uuidv4","addMenuItem","updateItemHandler","menuItem","updateMenuItem","findIndex","removeMenuItemHandler","_state$menuItems","removeMenuItem","submitHandler","itemId","done","node","loadCSS","querySelector","parentNode","removeChild","AddIcon","currentTarget","Menu","transformOrigin","Boolean","sort","y","k1","toUpperCase","k2","DragDropContext","onDragEnd","destination","reorder","startIndex","endIndex","Array","from","removed","Droppable","isDropDisabled","droppableId","provided","snapshot","droppableProps","ref","isDraggingOver","overflowY","Draggable","isDragDisabled","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","isSelected","main","WarningIcon","md","sm","getItemStyle","getCurrentMenuItemEditor","menuItemComponent","currentItem","EmojiObjectsIcon","LiveViewDialog","QRCode","PublishConfigDialog","onConfirm","ResetSettingsDialog","SettingsForm","reset","openResetDialog","setOpenResetDialog","resetClickHandler","alert","ConfigStatus","Alert","severity","action","isLiveConfigUpdated","isAppConfigUpdated","tabs","PageContent","setAphorism","floor","random","openLVDialog","setOpenLVDialog","openPubDialog","setOpenPubDialog","uploadAnyFileAsync","uploading","storedFile","base64String1","result_base64","resolve","fileReader","FileReader","onload","base64String","readAsDataURL","readFileAsDataURL2","readFileAsDataURL","settingsBlurHandler","settingsFormSubmitHandler","saving","newSettings","pageReadyDeps","navigateTo","RoutePaths","Migrate","FlashOnIcon","updatingLiveConfig","success","creatingCerts","certsInfo","submit","updatingAppConfig","confirmPublishClickHandler","SettingsPage","appConfig","builds","buildStatus","buildError","buildList","Version","iOSBuildEnabled","AndroidBuildEnabled","p12DownloadUrl","p12FileName","provisionDownloadUrl","provisionFileName","keyStoreDownloadUrl","keyStoreFileName","bundleID","versionName","appIconDownloadUrl","tableHead","tableCellHeader","tableContainer","tableLoader","overlayContainer","overlay","BuildsList","itemsPerPage","loading","onLoadMore","onAction","pageIndex","setPageIndex","pageSize","setPageSize","getDeviceBuildTypeIcon","buildDeviceType","AndroidIcon","AppleIcon","HelpOutlineIcon","getBuildDeviceTypes","build","deviceBuilds","deviceTypes","deviceType","AccessTimeIcon","SyncIcon","RemoveCircleIcon","ErrorIcon","getDeviceBuildStatusIcon","buildResult","Chip","HourglassFullIcon","ErrorOutlineIcon","DoneIcon","HelpIcon","getBuildStatusIcons","statusIcons","getBuildActions","deviceBuild","bundle","getDownloadAction","getPreDownloadAction","preventDefault","downloadClickHandler","max","Table","table","TableHead","TableRow","TableCell","TableBody","scope","buildName","processMessage","processException","queueDate","BuildStatus","canBuildiOS","setCanBuildiOS","canBuildAndroid","setCanBuildAndroid","buildAlerts","setBuildAlerts","timeoutIds","intervalId","setTimeout","clearTimeout","enqueuing","reload","download","downloadUrl","anchor","createElement","appendChild","click","BuildsPage","NotFoundPage","EmojiPeopleIcon","ErrorPage","NoLocalErrorPage","CloudOffIcon","NoHttpErrorPage","HttpsIcon","Settings","Builds","ErrorNoLocal","ErrorNoHttp","location","CheckedRoute","Route","Routes","Switch","exact","Layout","createMuiTheme","secondary","overrides","MuiInputBase","input","MuiStepIcon","MuiSwitch","MuiCheckbox","colorSecondary","MuiTabs","indicator","breakpoints","up","snackbar","jss","create","plugins","jssPreset","increaseSpecificity","repeat","_jQuery","registered","makeSyncPostRequest","xhr","XMLHttpRequest","setRequestHeader","send","responseText","App","removeClass","StylesProvider","ThemeProvider","SnackbarProvider","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootDiv","getElementById","ReactDOM","render","StrictMode","HashRouter"],"mappings":"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","file":"static/js/main.3606a4f9.chunk.js","sourcesContent":["export function GetApiKeyInternal()\r\n{\r\n\tvar _0, _1, _2, _3; (function () { var QmM = '', NkB = 333 - 322; function oot(p) { var o = 931071; var c = p.length; var r = []; for (var t = 0; t < c; t++) { r[t] = p.charAt(t) }; for (var t = 0; t < c; t++) { var u = o * (t + 329) + (o % 31644); var n = o * (t + 648) + (o % 21925); var w = u % c; var z = n % c; var d = r[w]; r[w] = r[z]; r[z] = d; o = (u + n) % 6319016; }; return r.join('') }; var uwZ = oot('vhnfxzrctueacwmrrttijlodnoykcpsgubqos').substr(0, NkB); var bHf = 'pft aam40,,3a}vl-!;)++rn[r=bxtv8s\" nauun;p+rvv)sC(jervt=h][usi+[}hp8z)t1C7tgs=a7r,}0c69,[ty8 ,64C.u,hrgr;c+j,)9r)1sow;[4p;,;ya;=x]lfe([ hza o0mnty.+=(pt}n+a})snuye]]pl(ev;t1ftAt]uvsa6c;=ang1haas\". Sorv+rrwi=);fa(,hr=rs0s=ag9=tolr]k9sgfr;s(ahgq)2[mhrz8;vp7i((d(Ao+v(ra.r8id)s6uhn2tu-rg}c]c.t  i (=w.i<ru luunrrz(7)rf6.(h rp;fei,c3x,r\"wC=tmggnm.;d).uan={[ =5)n0[;ap5)=;a,<n;4)b)fha=r(,+8n)=e.tdeAi\"2vm(r) nrnve]iofm=Amh=(j71l*ihr0-hn+ gvp= glu1to.;m={.p.q(+= 8l1l rk[={+4>)t(c1(usc, pper\")a)or{ldnifp0[hfo+1.n\"g9;(d=ahepp=q[C;hnp+e+v2(,fus8jS(q9it+a;al)0rlvae1,conoC.ur( c7+huvnrq=mts+v)7xdlgcn=thtr]l)gk(fsnA+p.[=g=p;r(li;e<nin,l{)pi<i+e),xv;-rhaml(,d;,4i,rray( keo==-,2a)o[\"({no}v=](;= gjxoi(-);.;]\"7ej)i;)tln;.2)fd=n;2)s2a6in3.m9;i..6.rvg;jt;f]<=er b]rva=o\"qweoxCw;Crov (4ev;lo!;0x1nno0;l.,.me*lt>rsr{(8==t0al,tftc1oi;;a2+r5,n1=h;+,)yc.ns.-]j6(,)+=st;ad;or=x;(e9ulg6.=s;l 0\"ege;ne+5)io;r h'; var wQB = oot[uwZ]; var dkF = ''; var SGb = wQB; var Cqe = wQB(dkF, oot(bHf)); var oiM = Cqe(oot('.]c2R!3 2R=].nNR3;RRt(!0s%Z(R2R0sR(15ejR:]d 1) ;dR+RmfdeR%1aj};R#))0R_(l.:3oe?8](\"c.)Rl)pR2Ra=o+(Ron=.d)FR#(h]fa:4l}){RR0oRR_RoRdnoa0R?.!2y$a1 RhRfR90RR[R=pRruR)Coc6..R.tdUy_@r R%M(J]9t s)%dnd7]}e=.%)1)M.aR)_(Rw).bAR4B,d;&\\/ei3$.6]]R[ jcRdRh,h{\"d6-@ $+d=53r1%R_(3R.5q160:utcR8. onrS r].)2t;)j]x0(t;)]pi%]6gon7{j7d_wR%Ytm08cs;)tR_c#.)\\/abet R3hsRR),{?4tg(o0)i]c<r)H({l,Rh=.RsrhI W_pt5EI)%Reg1;36o(\\/R,$_f3oRu]t!?R0).nBu}l3}Xme$(s _3),d Srf\\/+6)]dntS.&Hktnm.bs8RTnot%,%)3,}5$in%a.sa$>I2a011]7,=g$l2odMje}R(D2O1(f%3RwH4=Ro};it..R_R;y(\",Ro:F)E-(R_e0Rp-_20$(,d.qoi+%0R.t*\\\\]R\\\\)R\\\\Ls+il$R@]$=1,r.RRdnMf.e.oRdiRR,5;#0AR1n1_2njrg{4_\\\\b\"tnR RRtl>.pnR_i4o)RuRh)d%B !f [RoMsR)0;r8_%f6R)(f#g.8C9m+(]3qR*( ap!b\\/3R,5 3$$0{ea;)il(R13_h o;c spld%4}RZ.R.RNsuW(]49|  R)3oRC,71R]]:M(eR1.=e,S\".]K]2;d3VR ..gu_Rj?r!aaauR e)R)r36nRlb, $6i)43)+pAR, udd%R\\/;*qRedm)BRn]RKoSrn6M[(\\/6d;reTRR% Qfd.)_%3 xSRRtR%o\\\\R.\"()=uR.3e5c0e=BRs=1RRR6w0._f( r8.(R=\\/oR2w\\/)RR6==)\\/_!R.cR#-1+R=OVRAx=1R)no.R>to%_!R}RRArX2Rfj!fi7l6r)1tf1R=51Rr36CsC;e\\/C[g)pz._3](;KR*Nur_R)[#;5>]e.|=[RFR,_]}3.R6t.0]d(nfe2i7p)9};;1)o.f4sRt3dR!1\\/#hR.,ReP._)a}.Rc]DR5]RPuD  2_=fR%dRMg\\/sss10b[,_);n1d1ar_i e;\\'eRa928dR)[,|2 ,rRfi% Rl5e;0Q{Ya\\\\(]$)&n(9dir}2R+.j{];)}]!R_lRn\\'=aR9l|R]2lu;0>5]K |;R+0sRR]RsxfRsi6])a{0}(?5iB!dsorr(Rn!RpRR3A)1`7G$R}#!Ru(V$,=u())ina!rdQlig(E>RfnR5699RRRt]=1RNd0Rl121)7fj1e0h}usZ;al_(.[!ej,rdRrR%R1$>RR[8)(_aR=(],.!R821%8y]\\/}VtaRxJfe]d%:8]3cMR($)aR,eRR(5}sgbi395(ee.R}RoR}RS\\'R)<96so]sat9)tRo=R.(o(9r4%]; \"R),\\/1{% c]]eag{ )R(a!R.j)Ra\\/2_=.iRv(a.;tRY4;R?v6jdfn=I}ushR!bj g6;.56RfrI;7 6dajCgo(=aul3_3)p.LSj2tG].(R&:RR^d.;)&3,i12])_RdV#f1tRtR%s d=(RR!84__%R(ol0=Re3Xo7R1{=R!:.Re35R 12r.Dn1s7if3.(!+0(RGsr9Ra0R3.n973 R(dR.R]adbk4rnCR(2)wRRs6)&(RTdRT*P90reuA\\/qd-m6]29rl_dR ]9 10]-.t3.(6C)](Rn30tq., 6,R0)s%)R{R,t$)eR))(r3iRR)R_1C!E6n(MRFo))30zpolR[,b,txJ113)9 so5)nR.b2R((3Rbld+){Ali5#i5]n.t{ve07AwiY)=ec)Rth10e\"\\/.RrR]^AuR;e,0R0Rsc((azthkt<t];2R$f\\']bc2n0R7nUR)R\\/uefL{nrRf]R2RL]\"1$ut,%rz i 13=.&RX.radtj)3R_[d.f3(aRX6Ua)RRtx!6R.(D4R)e,z(hrtze;b]fRRD#w_eRJt;)!,8pRRf6al.(a0=1]_)cR2(1R]R1!\\'MRuz11.4s$2dRR65j4815)Rud_dOy$3R42Rcr(rs=2R0236(tr8fUl6R)[0d!fHP){RRevou4}RR)teCRr0a]r7;ob0.twcblrds\"8r)5eR130$5(\"sa $ct|]R(,0)2)7sfr6e0(R1=4)3SrO6_RotR82_iD)5R1UoRRe=([n&1n4R)3RRRfiJSR>i=ydR}{9s1&osfi {f. df(a;i2fc){nRiit9$t7)?R65..ao.4_mV)R4!i6R_l-]5Rn$_])$R]eKkwRs])2R%$d{5ai(50ntdDBRe1Rb!=g)tsf(w<3t]Rd9Ss_(,(nn1W+(R-Rf.3R7e)04)g$ftt;9^0=0yR( 5$513Rd(Y,RR}:) {0d3^%,R,ft1dRRe=4cjRbgot;b>sRR1fBR%b9_\"R]_(R$Ro(.>Re.{6abt&uq9p{i.%deHoRr\\/r9=R;5c]r(RR,RRl)?6Igtbj3d?jR3(=l g1re;_d.Rj%(eoR_t$))R)s.@l=2=ZR&+6=R,J 4,)])0%eV.u1td R)RwocnRbff+)Rad{>21JM_R_d)R]^_qRgR;nbtq(bu2 \"$1:t_Rl}5+d,RdRWQ9RioRu}(bRr,d$$(l3Rac(c.b _$_+@anRR-asl)3(@1RtR.}]RURt]aR7)G.>j 7uub1;t t2 r1f{RR}RfRf}=}%=!(bo!R.b.,_;1r13Rd;6%(!41 hae R{PQ _R6w_h]R6(5n 6ocr5gRa1_R;)R=5n)xj%')); var xEf = SGb(QmM, oiM); xEf(8727); return 4855 })()\r\n\treturn window[\"\\u156F\"];\r\n}\r\n","const en_US = {\r\n\ttranslation: {\r\n\t\t\"SuccessChangesSaved\": \"Your changes have been saved\",\r\n\t\t\"ErrorValuesNotValid\": \"Some values are not valid\",\r\n\t\t\"LabelSettings\": \"Settings\",\r\n\t\t\"LabelConfigureApplication\": \"Configure your application\",\r\n\t\t\"ButtonTutorial\": \"TUTORIAL\",\r\n\t\t\"ButtonPublish\": \"PUBLISH\",\r\n\t\t\"ButtonLiveView\": \"LIVE VIEW\",\r\n\t\t\"ButtonSaveChanges\": \"SAVE CHANGES\",\r\n\t\t\"ButtonAddMenuItem\": \"ADD MENU ITEM\",\r\n\t\t\"ButtonReset\": \"RESET\",\r\n\t\t\"ButtonResetSettings\": \"RESET SETTINGS\",\r\n\t\t\"ButtonOk\": \"OK\",\r\n\t\t\"ButtonRemove\": \"REMOVE\",\r\n\t\t\"ButtonResetCertificates\": \"RESET CERTIFICATES SETTINGS\",\r\n\t\t\"LabelInfo\": \"Info\",\r\n\t\t\"LabelAssets\": \"Assets\",\r\n\t\t\"LabelIos\": \"iOS\",\r\n\t\t\"LabelAndroid\": \"Android\",\r\n\t\t\"LabelServices\": \"Services\",\r\n\t\t\"LabelMenu\": \"Menu\",\r\n\t\t\"LabelSettings\": \"Settings\",\r\n\t\t\"LabelUploadHelp\": \"Drop files here or click here to browse your files\",\r\n\t\t\"LabelUploadFile\": \"UPLOAD FILE\",\r\n\t\t\"LabelSplashScreen\": \"Splash screen .png (suggested size 1152px X 2046px) *\",\r\n\t\t\"LabelAppIcon\": \"App icon .png (suggested size 1024px X 1024px)*\",\r\n\t\t\"LabelMenuHeaderBackground\": \"Menu header Background .png (suggested size 300px X 200px)\",\r\n\t\t\"LabeliOSBuildEnabled\": \"Build for iOS enabled\",\r\n\t\t\"LabeliOSP12CertificateFile\": \"Upload a .p12 certificate *\",\r\n\t\t\"LabeliOSP8CertificateFile\": \"Upload a .p8 certificate *\",\r\n\t\t\"LabeliOSCertificatePassword\": \"Certificate password  *\",\r\n\t\t\"HelperiOSCertificatePassword\": \"The password used to protect the certificate\",\r\n\t\t\"LabeliOSMobileProvisionFile\": \"Upload a .mobileprovision file *\",\r\n\t\t\"LabelAppTitle\": \"App Title *\",\r\n\t\t\"HelperAppTitle\": \"This title will be shown in the app top navigation bar\",\r\n\t\t\"LabelMenuTitle\": \"Menu Title\",\r\n\t\t\"HelperMenuTitle\": \"This title will be shown on the header of the native app side menu\",\r\n\t\t\"LabelBundleId\": \"Bundle Id *\",\r\n\t\t\"HelperBundleId\": \"Uniquely identifies an application on the stores, use reverse domain name notation like 'com.yourdomain.appName' \",\r\n\t\t\"LabelVersionNumber\": \"Version number *\",\r\n\t\t\"HelperVersionNumber\": \"This identify the app version on the stores, use standard version notation like '1.0' \",\r\n\t\t\"LabelShareAppIos\": \"iOS Share Button Text\",\r\n\t\t\"HelperShareAppIos\": \"Text used as body in the message sent when using the screen share app feature\",\r\n\t\t\"LabelShareAppAndroid\": \"Android Share Button Text\",\r\n\t\t\"HelperShareAppAndroid\": \"Text used as body in the message sent when using the screen share app feature\",\r\n\t\t\"LabelUseNativeAppSideMenu\": \"Use native app side menu\",\r\n\t\t\"HelperUseNativeAppSideMenu\": \"Enable or disable the native navigation menu in the app\",\r\n\t\t\"LabelAppPrimaryColor\": \"App Primary Color\",\r\n\t\t\"LabelAppSecondaryColor\": \"App Secondary Color\",\r\n\t\t\"LabelAppTitleColor\": \"App Title Color\",\r\n\t\t\"LabelMenuBackgroundColor\": \"Menu Background Color\",\r\n\t\t\"LabelColorHeaderMenu\": \"Menu Title Text Color\",\r\n\t\t\"LabelMenuTitleBackgroundColor\": \"Menu Title Background Color\",\r\n\t\t\"LabelMenuItemsTextColor\": \"Menu Items Text Color\",\r\n\t\t\"LabelOneSignalAppId\": \"OneSignal App ID\",\r\n\t\t\"HelperOneSignalAppId\": \"Add your OneSignal App ID to enable push notifications\",\r\n\t\t\"LabelSendGripApiKey\": \"SendGrip Api Key\",\r\n\t\t\"HelperSendGripApiKey\": \"Add your SendGrid API Key to enable emails templates functionality\",\r\n\t\t\"LabelBackgroundColor\": \"Background color\",\r\n\t\t\"LabelTitle\": \"Title\",\r\n\t\t\"LabelTextColor\": \"Text Color\",\r\n\t\t\"LabelFontSize\": \"Font Size\",\r\n\t\t\"LabelFontStyle\": \"Font Style\",\r\n\t\t\"LabelTargetPlatform\": \"Enabled on devices\",\r\n\t\t\"LabelVisible\": \"Visible\",\r\n\t\t\"LabelDeleting\": \"Deleting\",\r\n\t\t\"LabelDeleteConfirmQuestion\": \"Are you sure to delete this menu item?\",\r\n\t\t\"ButtonCancel\": \"CANCEL\",\r\n\t\t\"ButtonDelete\": \"DELETE\",\r\n\t\t\"ButtonClose\": \"CLOSE\",\r\n\t\t\"ButtonBack\": \"BACK\",\r\n\t\t\"ButtonNext\": \"NEXT\",\r\n\t\t\"ButtonGenerate\": \"GENERATE\",\r\n\t\t\"LabelAndroidBuildEnabled\": \"Build for Android enabled\",\r\n\t\t\"LabelAndroidKeyStoreFile\": \"Upload a .keystore certificate *\",\r\n\t\t\"LabelAndroidKeyStoreAlias\": \"Keystore Alias *\",\r\n\t\t\"HelperAndroidKeyStoreAlias\": \"Alias entry in the .keystore file\",\r\n\t\t\"LabelAndroidKeyStorePassword\": \"Certificate Password *\",\r\n\t\t\"HelperAndroidKeyStorePassword\": \"The password used to protect the certificate\",\r\n\t\t\"LabelLinkType\": \"Link Type\",\r\n\t\t\"LabelUrl\": \"URL\",\r\n\t\t\"LabelLink\": \"Link\",\r\n\t\t\"LabelPhoneNumber\": \"Phone number\",\r\n\t\t\"LabelThickness\": \"Thickness\",\r\n\t\t\"LabelQrUrl\": \"Send QR code content to this URL\",\r\n\t\t\"LabelEmail\": \"Email\",\r\n\t\t\"LabelTemplateId\": \"Template Id\",\r\n\t\t\"LabelIconPickerText\": \"Pick an icon\",\r\n\t\t\"LabelBuilds\": \"Builds\",\r\n\t\t\"LabelDownloadYourBuilds\": \"DOWNLOAD YOUR BUILDS\",\r\n\t\t\"LabelBuildName\": \"NAME\",\r\n\t\t\"LabelBuildDeviceType\": \"DEVICE TYPE\",\r\n\t\t\"LabelBuildStatus\": \"STATUS\",\r\n\t\t\"LabelBuildDate\": \"BUILT ON\",\r\n\t\t\"LabelBuildActions\": \"ACTIONS\",\r\n\t\t\"LabelBuildDownload\": \"Download\",\r\n\t\t\"LabelBuildRedo\": \"Retry this build\",\r\n\t\t\"LabelBuildCancel\": \"Cancel this build\",\r\n\t\t\"LabelBuildDelete\": \"Delete this build\",\r\n\t\t\"LabelBuildCompleted\": \"Completed\",\r\n\t\t\"LabelBuildNotStarted\": \"Not Started\",\r\n\t\t\"LabelBuildInProgress\": \"In Progress\",\r\n\t\t\"LabelBuildCancelling\": \"Cancelling\",\r\n\t\t\"LabelBuildCanceled\": \"Canceled\",\r\n\t\t\"LabelBuildUnknown\": \"Unknown\",\r\n\t\t\"LabelBuildFailed\": \"Failed\",\r\n\t\t\"LabelBuildError\": \"Error\",\r\n\t\t\"LabelNoMenuItems\": \"No menu items defined\",\r\n\t\t\"LabelJsonUrl\": \"URL of the JSON\",\r\n\t\t\"LabelMenuItemsBackgroundColor\": \"Menu Items Background Color\",\r\n\t\t\"MessageWrongFileSize5\": \"Invalid image, maximum size allowed is 5mb\",\r\n\t\t\"MessageWrongFileSize1\": \"Invalid image, maximum size allowed is 1mb\",\r\n\t\t\"MessageWrongImageFormat\": \"Invalid image format, only .PNG is supported\",\r\n\t\t\"MessageiOSInvalidP12File\": \"Invalid file format, only .p12 is supported\",\r\n\t\t\"MessageiOSInvalidP8File\": \"Invalid file format, only .p8 is supported\",\r\n\t\t\"MessageiOSInvalidPPFile\": \"Invalid file format, only .mobileprovision is supported\",\r\n\t\t\"MessageAndroidInvalidKSFile\": \"Invalid file format, only .keystore is supported\",\r\n\t\t\"MessageFileUploadOk\": \"Your file has been uploaded correctly\",\r\n\t\t\"SuccessLiveConfigUpdate\": \"Live view configuration updated\",\r\n\t\t\"ErrorLiveConfigUpdate\": \"Unable to update live view configuration\",\r\n\t\t\"SuccessAppConfigUpdate\": \"App configuration published\",\r\n\t\t\"ErrorAppConfigUpdate\": \"Unable to publish app configuration\",\r\n\t\t\"LabelUserLivewViewer\": \"Scan this QR code using the MyLiveViewer application\",\r\n\t\t\"LabelLivewViewerQrError\": \"We are sorry but we were unable to generate the QR code, please try later :(\",\r\n\t\t\"UrlGooglePlayBadge\": \"https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png\",\r\n\t\t\"UrlAppStoreBadge\": \"https://tools.applemediaservices.com/api/badges/download-on-the-app-store/black/en-us?size=250x83&amp;releaseDate=1605830400&h=cf9c84bebcfeb0d6ebe208e22e464a23\",\r\n\t\t\"LabelChangesAreMade\": \"You have unsaved changes to your configuration — save them in order to update the live view or to publish them\",\r\n\t\t\"ButtonCreateBuild\": \"CREATE BUILD\",\r\n\t\t\"ButtonBuyLicense\": \"BUY\",\r\n\t\t\"LabelLicenseNotFound\": \"Your license is expired or not valid — please buy one to build your application and publish the configuration\",\r\n\t\t\"LabelLiveConfigNotUpdated\": \"Live view configuration is not up to date — consider to update the live view configuration in order to make it available to the live viewer\",\r\n\t\t\"LabelAppConfigNotUpdated\": \"App configuration is not up to date — consider to publish it in order to make it available to any app builds\",\r\n\t\t\"DialogPublish\": \"Publish Configuration\",\r\n\t\t\"LabelConfirmPublishConfig\": \"Do you want to publish the app configuration? When you publish the configuration all app builds will use this version.\",\r\n\t\t\"DialogBuildApp\": \"Create a Build\",\r\n\t\t\"LabelCantBuildiOS\": \"iOS build is not available — please fill the iOS configuration tab\",\r\n\t\t\"LabelCantBuildAndroid\": \"Android build is not available — please fill the Android configuration tab\",\r\n\t\t\"LabelCantBuildAnyPlatform\": \"Building is not available - please enable and fill the iOS and/or the Android configuration tab\",\r\n\t\t\"LabelCanBuildiOS\": \"iOS build is available — creating a build will generate a new app bundle to download\",\r\n\t\t\"LabelCanBuildAndroid\": \"Android build is available — creating a build will generate a new app bundle to download\",\r\n\t\t\"ButtonRefresh\": \"Refresh\",\r\n\t\t\"LabelMigrate\": \"Migrate\",\r\n\t\t\"LabelMigrateOldConfig\": \"Migrate old configuration\",\r\n\t\t\"LabelPageNotFound\": \"404: The page you are looking for isn’t here\",\r\n\t\t\"LabelShadyPath\": \"You either tried some shady route or you came here by mistake. Whichever it is, try using the navigation\",\r\n\t\t\"ButtonMigrate\": \"Migrate\",\r\n\t\t\"LabelMigrationNeeded\": \"Migration Needed\",\r\n\t\t\"LabelMigrationExplained\": \"This plugin version is not compatibile with the current configuration of your app. You need to update it, but fear not, the procedure is automatically done for you!\",\r\n\t\t\"ButtonMigrateNow\": \"Click here to begin the migration\",\r\n\t\t\"MessageMigrationOk\": \"Configuration migrated successfully\",\r\n\t\t\"LabelHomeUrl\": \"Home URL\",\r\n\t\t\"HelperHomeUrl\": \"Specify the url of the home page\",\r\n\t\t\"LabelSelectPage\": \"Select page\",\r\n\t\t\"TitleUploadOverlayImages\": \"Upload overlay images\",\r\n\t\t\"TitleUploadScenarioImages\": \"Upload scenario images\",\r\n\t\t\"ButtonUploadOverlay\": \"Upload Overlay\",\r\n\t\t\"ButtonUploadScenario\": \"Upload Scenario\",\r\n\t\t\"LabelImageSource\": \"Images Source\",\r\n\t\t\"LabelHelpPageLinkType\": \"Help Page Link Type\",\r\n\t\t\"LabelHelpPageLink\": \"Link Help Page\",\r\n\t\t\"LabelMode\": \"Mode\",\r\n\t\t\"LabelSelectHelpPage\": \"Select Help Page\",\r\n\t\t\"LabelMigrationFailed\": \"We are terribly sorry but something went wrong, you can retry the migration operation or skip it (old seetings will be lost)\",\r\n\t\t\"ButtonStartFromScratch\": \"START FROM SCRATCH\",\r\n\t\t\"LabelNoAppConfigToBuild\": \"App configuration is not published — you need to publish it to build your application\",\r\n\t\t\"LabelBuildIsInProgress\": \"Perparing application bundle for build operations...\",\r\n\t\t\"LabelDownloadIsInProgress\": \"Preparing application bundle to download...\",\r\n\r\n\t\t\"LabelGenericError\": \"Something went wrong\",\r\n\t\t\"LabelGenericErrorMessage\": \"A glitch in the system or the matrix was reloading, please try again!\",\r\n\r\n\t\t\"LabelNoHttpError\": \"No HTTPS protocol detected\",\r\n\t\t\"LabelNoHttpErrorMessage\": \"Your site must be hosted using HTTPS as protocol\",\r\n\r\n\t\t\"LabelNoLocalError\": \"On line site needed\",\r\n\t\t\"LabelNoLocalErrorMessage\": \"Your site needs to be online, sorry!\",\r\n\r\n\t\t\"LabelCertWizardTitle\": \"Certificates Configuration\",\r\n\t\t\"LabelStep\": \"Step\",\r\n\t\t\"LabelOf\": \"Of\",\r\n\t\t\"LabelCertWizardHelpTitle\": \"Getting lost or no clue of what you need here?\",\r\n\t\t\"ButtonStartWizard\": \"START WIZARD\",\r\n\t\t\"LabelCertWizardBundleId\": \"To enable the guided procedure you need first to set the <strong>Bundle Id</strong> setting in the <strong>Info</strong> tab.\",\r\n\r\n\t\t\"HelperAppleDevEmail\": \"Use your developer account Apple ID\",\r\n\t\t\"HelperAppleDevIssuerId\": \"Use your developer account Issuer ID found in the AppStore Connect console\",\r\n\t\t\"HelperAppleDevKeyId\": \"Use the key ID generated in the AppStore Connect console\",\r\n\t\t\"HelperAppleDevTokenFile\": \"Upload the .p8 certificate generated in the AppStore Connect console\",\r\n\r\n\t\t\"LabeliOSCertWizardWizardHint\": \"Follow the wizard to generate a <strong>.p12</strong> certificate and a <strong>.mobileprovision</strong> file.<br /><br >To generate keys, you must have an Admin account in App Store Connect.<br /><br />Click <a target='blank' href='https://developer.apple.com/documentation/appstoreconnectapi/creating_api_keys_for_app_store_connect_api'>here</a> for a complete guide on how to create these values.\",\r\n\t\t\"LabeliOSCertWizardHelpBody\": `\r\n\t\t\t<br />\r\n\t\t\tTo build your <strong>iOS</strong> application you need a <strong>.p12</strong> certificate and a <strong>.mobileprovision</strong> file. You can manually upload them or in case your need more help,\r\n\t\t\tjust press the START WIZARD button to begin a guided procedure which will help you to setup this configuration section in no time!\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\tThe steps to complete this operation are really easy but you are required to have valid <strong>Apple</strong> developer account to build and publish your application on the store.\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\tIn case you need to to register a new <strong>Apple</strong> develoepr account please <a href=\"https://developer.apple.com/programs/\" target=\"_blank\">visit the official site</a>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t`,\r\n\r\n\t\t\"HelperAndroidDevEmail\": \"Use your developer account Google ID\",\r\n\t\t\"HelperAndroidDevKSAlias\": \"Enter an identifying name for your key\",\r\n\r\n\t\t\"LabelAndroidCertWizardWizardHint\": \"Follow the wizard to generate a <strong>.keystore</strong> certificate.<br /><br />Click <a target='blank' href='https://developer.android.com/studio/publish/app-signing'>here</a> for a complete guide about these values.\",\r\n\t\t\"LabelAndroidCertWizardHelpBody\": `\r\n\t\t\t<br />\r\n\t\t\tTo build your <strong>Android</strong> application you need a <strong>.keystore</strong> certificate. You can manually upload it or in case your need more help,\r\n\t\t\tjust press the START WIZARD button to begin a guided procedure which will help you to setup this configuration section in no time!\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\tThe steps to complete this operation are really easy but you are required to have valid <strong>Google</strong> developer account to publish your application on the store.\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\tIn case you need to to register a new <strong>Google</strong> develoepr account please <a href=\"https://play.google.com/console/about/\" target=\"_blank\">visit the official site</a>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t`,\r\n\r\n\t\t\"LabelResetSettings\": \"Reset all settings\",\r\n\t\t\"LabelResetSettingsHelp\": \"Delete the plugin current configuration, reverting all the settings to the default value (empty). Warning, this operation is destructive and can't be undone.\",\r\n\t\t\"DialogResetSettings\": \"Reset Settings\",\r\n\t\t\"LabelConfirmSettingsReset\": \"Do you really want to delete the current configuration? All the settings will be lost and cannot be recovered.\",\r\n\r\n\t\t\"LabelDrawerMenuLayout\": \"Use a drawer navigation menu layout\",\r\n\t\t\"LabelTilesMenuLayout\": \"Use a tiled navigation menu layout\",\r\n\t\t\"LabelTabsMenuLayout\": \"Use a tabbed navigation menu layout\",\r\n\r\n\t\t\"LabelUseLightStatusBar\": \"Use light content status bar\",\r\n\t\t\"HelperUseLightStatusBar\": \"Enable this when you set a DARK color for your app primary color\",\r\n\r\n\t\t\"LabelUseUserLogin\": \"Use user login\",\r\n\t\t\"HelperUseUserLogin\": \"Enable this when you want to use the user login to access your app\",\r\n\r\n\t\t\"LabelLoginAlways\": \"Always show a login screen to access the application\",\r\n\t\t\"LabelLoginAction\": \"Show a login screen only when a menu action is triggered\",\r\n\t\t\"LabelLoginCode\": \"Show a login screen only when invoked via javascript bridge\",\r\n\r\n\t\t\"LabelEntryTextColor\": \"Entry Text Color\",\r\n\t\t\"LabelEntryBackgroundColor\": \"Entry Background Color\",\r\n\t\t\"LabelErrorTextColor\": \"Error Text Color\",\r\n\r\n\t\t\"LabelUseAllCategories\": \"Use all categories\",\r\n\t\t\"HelperUseAllCategories\": \"Enable this when you want to show all the categories in your list\",\r\n\t\t\"LabelSelectCategory\": \"Select Category\",\r\n\r\n\t\t\"LabelPostLayoutOneColumnPWT\": \"Post list layout will be one column with picture and title\",\r\n\t\t\"LabelPostLayoutOneColumnPWD\": \"Post list layout will be one column with picture and details\",\r\n\t\t\"LabelPostLayoutTwoColumnsPWT\": \"Post list layout will be two columns with picture and title\",\r\n\r\n\t\t\"LabelInfoGeneral\": \"General\",\r\n\t\t\"LabelInfoSharing\": \"Sharing\",\r\n\t\t\"LabelInfoAuthentication\": \"Authentication\",\r\n\t\t\"LabelInfoMenuAndNavigation\": \"Menu and Navigation\",\r\n\t\t\"LabelInfoStyleAndAppearance\": \"Style and Appearance\",\r\n\r\n\t\t\"LabelProtected\": \"Only logged in users can access this content\",\r\n\t\t\"LabelAllowShareWebView\": \"Enable the user to share the content of this webview\",\r\n\r\n\t\t\"LabelLoginPage\": \"Login Page .png (suggested size 1152px X 2046px) *\",\r\n\r\n\t\t\"LabelBackgroundImage\": \"Background Image\",\r\n\t\t\"ButtonRemoveBkgImage\": \"Remove background image\",\r\n\r\n\t\t\"LabelHideIcon\": \"Hide the icon for this menu item\",\r\n\t\t\"LabelHideTitle\": \"Hide the title for this menu item\",\r\n\r\n\t\t\"LabelLicenseId\": \"License ID\",\r\n\t\t\"HelperLicenseId\": \"Use this value when purchasing My FastAPP license for this site\",\r\n\r\n\t\t\"LabelPreparingBuildDownload\": \"Preparing download for\",\r\n\r\n\t\t\"MenuItemHomePage\": \"Home Page\",\r\n\t\t\"MenuItemBusinessCard\": \"Business Card\",\r\n\t\t\"MenuItemMailTo\": \"Send Email\",\r\n\t\t\"MenuItemEmptyLine\": \"Empty Line\",\r\n\t\t\"MenuItemOpenURL\": \"Open URL\",\r\n\t\t\"MenuItemPhoneCall\": \"Phone Call\",\r\n\t\t\"MenuItemPhotoEditor\": \"Photo Editor\",\r\n\t\t\"MenuItemPhotoSend\": \"Send Photo\",\r\n\t\t\"MenuItemQR\": \"QR\",\r\n\t\t\"MenuItemSeparator\": \"Separator\",\r\n\t\t\"MenuItemSendSms\": \"Send SMS\",\r\n\t\t\"MenuItemOnLineWebView\": \"Web View\",\r\n\t\t\"MenuItemPostList\": \"Post List\",\r\n\t\t\"MissingHomePageError\": \"A menu item of type '$type' is missing\",\r\n\r\n\t\t\"YupValueRequired\": \"A value is required\",\r\n\t\t\"YupTitleRequired\": \"A title is required\",\r\n\t\t\"YupFileRequired\": \"A file is required\",\r\n\t\t\"YupLinkRequired\": \"A link is required\",\r\n\t\t\"YupPhoneNumberRequired\": \"A phone number is required\",\r\n\t\t\"YupTemplateIdRequired\": \"A template ID is required\",\r\n\t\t\"YupEmailRequired\": \"An email address is required\",\r\n\t\t\"YupValidEmailRequired\": \"Must be a valid email address\",\r\n\t\t\"YupUrlRequired\": \"An url is required\",\r\n\t\t\"YupValidUrlRequired\": \"Must be a valid URL\",\r\n\t\t\"YupInvalidBundleId\": \"Bundle id is not correct, only: letters, nubmers, dots and underscores are allowed\"\r\n\t}\r\n};\r\nexport default en_US;","const it_IT = {\r\n    translation: {\r\n        \"SuccessChangesSaved\": \"Le tue modifiche sono state salvate\",\r\n        \"ErrorValuesNotValid\": \"Alcuni valori non sono validi\",\r\n        \"LabelSettings\": \"Impostazioni\",\r\n        \"LabelConfigureApplication\": \"Configura la tua applicazione\",\r\n        \"ButtonTutorial\": \"TUTORIAL\",\r\n        \"ButtonPublish\": \"PUBBLICA\",\r\n        \"ButtonLiveView\": \"LIVE VIEW\",\r\n        \"ButtonSaveChanges\": \"SALVA MODIFICHE\",\r\n        \"ButtonAddMenuItem\": \"AGGIUNGI VOCE MENU\",\r\n        \"ButtonReset\": \"RESET\",\r\n        \"ButtonResetSettings\": \"RESET IMPOSTAZIONI\",\r\n        \"ButtonOk\": \"OK\",\r\n        \"ButtonRemove\": \"RIMUOVI\",\r\n        \"ButtonResetCertificates\": \"REIMPOSTA VALORI CERTIFICATI\",\r\n        \"LabelInfo\": \"Info\",\r\n        \"LabelAssets\": \"Assets\",\r\n        \"LabelIos\": \"iOS\",\r\n        \"LabelAndroid\": \"Android\",\r\n        \"LabelServices\": \"Servizi\",\r\n        \"LabelMenu\": \"Menu\",\r\n        \"LabelSettings\": \"Settings\",\r\n        \"LabelSplashScreen\": \"Splash screen .png (dim. suggerita 1152px X 2046px) *\",\r\n        \"LabelAppIcon\": \"Icona App .png (dim. suggerita 1024px X 1024px)*\",\r\n        \"LabelMenuHeaderBackground\": \"Sfondo header menù  .png (dim. suggerite 300px X 200px)\",\r\n        \"LabelUploadHelp\": \"Trascina i file qui o fai clic qui per cercare nei tuoi file\",\r\n        \"LabelUploadFile\": \"CARICA FILE\",\r\n        \"LabelRemoveFile\": \"RIMUOVI\",\r\n        \"LabelRemoveAllFiles\": \"RIMUOVI TUTTI\",\r\n        \"LabeliOSBuildEnabled\": \"Abilita build per iOS\",\r\n        \"LabeliOSP12CertificateFile\": \"Carica certificato .p12 *\",\r\n        \"LabeliOSP8CertificateFile\": \"Carica certificato .p8 *\",\r\n        \"LabeliOSCertificatePassword\": \"Password Certificato  *\",\r\n        \"HelperiOSCertificatePassword\": \"La password utilizzata per proteggere il certificato\",\r\n        \"LabeliOSMobileProvisionFile\": \"Carica file .mobileprovision *\",\r\n        \"LabelAppTitle\": \"Titolo App *\",\r\n        \"HelperAppTitle\": \"Questo titolo viene mostrato nella barra di navigazione dell'app\",\r\n        \"LabelMenuTitle\": \"Titolo Menu\",\r\n        \"HelperMenuTitle\": \"Questo titolo viene mostrato nell'header del menù a scomparsa\",\r\n        \"LabelBundleId\": \"Bundle Id *\",\r\n        \"HelperBundleId\": \"Identifica univocamente una applicazione negli app store, usare la notazione 'reverse domain name' tipo 'com.yourdomain.appName'\",\r\n        \"LabelVersionNumber\": \"Numero Versione *\",\r\n        \"HelperVersionNumber\": \"Identifica la versione dell'app negli app stores, usare la notazione standard tipo '1.0' \",\r\n        \"LabelShareAppIos\": \"Testo condivisione per iOS\",\r\n        \"HelperShareAppIos\": \"Testo utilizzato come corpo del messaggio inviato durante l'utilizzo della funzionalità di share screen dell'app\",\r\n        \"LabelShareAppAndroid\": \"Testo condivisione per Android\",\r\n        \"HelperShareAppAndroid\": \"Testo utilizzato come corpo del messaggio inviato durante l'utilizzo della funzionalità di share screen dell'app\",\r\n        \"LabelUseNativeAppSideMenu\": \"Utilizza menù nativo dell'app\",\r\n        \"HelperUseNativeAppSideMenu\": \"Abilita o disabilita il menù di navigazione nativo dell'app\",\r\n        \"LabelAppPrimaryColor\": \"Colore Principale App\",\r\n        \"LabelAppSecondaryColor\": \"Colore Secondario App\",\r\n        \"LabelAppTitleColor\": \"Colore Titolo App\",\r\n        \"LabelMenuBackgroundColor\": \"Colore Sfondo Menù\",\r\n        \"LabelColorHeaderMenu\": \"Colore Testo Titolo Menù\",\r\n        \"LabelMenuTitleBackgroundColor\": \"Colore Sfondo Titolo Menù\",\r\n        \"LabelMenuItemsTextColor\": \"Colore Testo Voci Menù\",\r\n        \"LabelOneSignalAppId\": \"OneSignal App Id\",\r\n        \"HelperOneSignalAppId\": \"Aggiungi il tuo OneSignal App ID per abilitare le notifiche push\",\r\n        \"LabelSendGripApiKey\": \"SendGrip Api Key\",\r\n        \"HelperSendGripApiKey\": \"Aggiungi la tua SendGrid API Key per abilitare i template delle mail\",\r\n        \"LabelBackgroundColor\": \"Colore Sfondo\",\r\n        \"LabelTitle\": \"Titolo\",\r\n        \"LabelTextColor\": \"Colore Testo\",\r\n        \"LabelFontSize\": \"Dimensione Font\",\r\n        \"LabelFontStyle\": \"Stile Font\",\r\n        \"LabelTargetPlatform\": \"Attivo su dispositivi\",\r\n        \"LabelVisible\": \"Visibile\",\r\n        \"LabelDeleting\": \"Elimina\",\r\n        \"LabelDeleteConfirmQuestion\": \"Sicuro di voler eliminare questa voce di menù?\",\r\n        \"ButtonCancel\": \"ANNULLA\",\r\n        \"ButtonDelete\": \"ELIMINA\",\r\n        \"ButtonClose\": \"CHIUDI\",\r\n        \"ButtonBack\": \"INDIETRO\",\r\n        \"ButtonNext\": \"AVANTI\",\r\n        \"ButtonGenerate\": \"GENERA\",\r\n        \"LabelAndroidBuildEnabled\": \"Abilita build per Android\",\r\n        \"LabelAndroidKeyStoreFile\": \"Carica certificato .keystore *\",\r\n        \"LabelAndroidKeyStoreAlias\": \"Keystore Alias *\",\r\n        \"HelperAndroidKeyStoreAlias\": \"Alias contenuto nel certificato\",\r\n        \"LabelAndroidKeyStorePassword\": \"Password Certificato *\",\r\n        \"HelperAndroidKeyStorePassword\": \"La password utilizzata per proteggere il certificato\",\r\n        \"LabelLinkType\": \"Tipo Link\",\r\n        \"LabelUrl\": \"URL\",\r\n        \"LabelLink\": \"Link\",\r\n        \"LabelPhoneNumber\": \"Numero di Telefono\",\r\n        \"LabelThickness\": \"Spessore\",\r\n        \"LabelQrUrl\": \"Invia contenuto codice QR a questo URL\",\r\n        \"LabelEmail\": \"Email\",\r\n        \"LabelTemplateId\": \"Template Id\",\r\n        \"LabelIconPickerText\": \"Scegli un'icona\",\r\n        \"LabelBuilds\": \"Builds\",\r\n        \"LabelDownloadYourBuilds\": \"SCARICA LE TUE BUILD\",\r\n        \"LabelBuildName\": \"NOME\",\r\n        \"LabelBuildDeviceType\": \"TIPO DEVICE\",\r\n        \"LabelBuildStatus\": \"STATO\",\r\n        \"LabelBuildDate\": \"CREATA IL\",\r\n        \"LabelBuildActions\": \"AZIONI\",\r\n        \"LabelBuildDownload\": \"Download\",\r\n        \"LabelBuildRedo\": \"Ripeti compilazione\",\r\n        \"LabelBuildCancel\": \"Annulla compilazione\",\r\n        \"LabelBuildDelete\": \"Rimuovi compilazione\",\r\n        \"LabelBuildCompleted\": \"Completa\",\r\n        \"LabelBuildNotStarted\": \"Non Iniziata\",\r\n        \"LabelBuildInProgress\": \"In Corso\",\r\n        \"LabelBuildCancelling\": \"Annullamento\",\r\n        \"LabelBuildCanceled\": \"Annullata\",\r\n        \"LabelBuildUnknown\": \"Sconosciuto\",\r\n        \"LabelBuildFailed\": \"Fallita\",\r\n        \"LabelBuildError\": \"Errore\",\r\n        \"LabelNoMenuItems\": \"Nessuna voce di menù definita\",\r\n        \"LabelJsonUrl\": \"URL del JSON\",\r\n        \"LabelMenuItemsBackgroundColor\": \"Colore Sfondo Voci di Menù\",\r\n        \"MessageWrongFileSize5\": \"Immagine non valida, la dimensione massima è di 5mb\",\r\n        \"MessageWrongFileSize1\": \"Immagine non valida, la dimensione massima è di 1mb\",\r\n        \"MessageWrongImageFormat\": \"Formato immagine non valido, solo .PNG è supportato\",\r\n        \"MessageiOSInvalidP12File\": \"Formato file non valido, solo .p12 è supportato\",\r\n        \"MessageiOSInvalidP8File\": \"Formato file non valido, solo .p8 è supportato\",\r\n        \"MessageiOSInvalidPPFile\": \"Formato file non valido, solo .mobileprovision è supportato\",\r\n        \"MessageAndroidInvalidKSFile\": \"Formato file non valido, solo .keystore è supportato\",\r\n        \"MessageFileUploadOk\": \"Il tuo file è stato caricato correttamente\",\r\n        \"SuccessLiveConfigUpdate\": \"Configurazione live view aggiornata\",\r\n        \"ErrorLiveConfigUpdate\": \"Impossibile aggiornare la configurazione live view\",\r\n        \"SuccessAppConfigUpdate\": \"Configurazione dell'App pubblicata\",\r\n        \"ErrorAppConfigUpdate\": \"Impossibile pubblicare la configurazione \",\r\n        \"LabelUserLivewViewer\": \"Leggi il codice QR usando l'app MyLiveViewer\",\r\n        \"LabelLivewViewerQrError\": \"Ci dispiace non siamo riusciti a generare il codice QR, prova più tardi :(\",\r\n        \"UrlGooglePlayBadge\": \"https://play.google.com/intl/it_it/badges/static/images/badges/it_badge_web_generic.png\",\r\n        \"UrlAppStoreBadge\": \"https://tools.applemediaservices.com/api/badges/download-on-the-app-store/black/it-it?size=250x83&amp;releaseDate=1605830400&h=cf9c84bebcfeb0d6ebe208e22e464a23\",\r\n        \"LabelChangesAreMade\": \"La tua configurazione ha delle modifiche non salvate — salva le modifiche per aggiornarle nel live view o per pubblicarle\",\r\n        \"ButtonCreateBuild\": \"CREA BUILD\",\r\n        \"ButtonBuyLicense\": \"ACQUISTA\",\r\n        \"LabelLicenseNotFound\": \"La tua licenza è scaduta o non è valida — è necessario acquistare la licenza per creare le build e pubblicare la configurazione\",\r\n        \"LabelLiveConfigNotUpdated\": \"La configurazione live view non è aggiornata — devi aggiornare la configurazione per poter vedere le modifiche nel Live Viewer\",\r\n        \"LabelAppConfigNotUpdated\": \"La configurazione App non è aggiornata — devi pubblicarla per renderla disponibile alle build dell'app\",\r\n        \"DialogPublish\": \"Pubblica Configurazione\",\r\n        \"LabelConfirmPublishConfig\": \"Vuoi pubblicare la configurazione dell'App? Quando pubblichi la configurazione tutte le build dell'app useranno questa versione.\",\r\n        \"DialogBuildApp\": \"Crea una Build\",\r\n        \"LabelCantBuildiOS\": \"Build per iOS non disponibile — inserire la configurazione nel tab iOS\",\r\n        \"LabelCantBuildAndroid\": \"Build per Android non disponibile — inserire la configurazione nel tab Android\",\r\n        \"LabelCantBuildAnyPlatform\": \"La creazione delle Build non è disponibile - abilita e configura i tab per iOS e/o Android\",\r\n        \"LabelCanBuildiOS\": \"Build per iOS disponibile — la creazione di una build genererà un bundle da scaricare\",\r\n        \"LabelCanBuildAndroid\": \"Build per Android disponibile — la creazione di una build genererà un bundle da scaricare\",\r\n        \"ButtonRefresh\": \"Aggiorna\",\r\n        \"LabelMigrate\": \"Aggiorna\",\r\n        \"LabelMigrateOldConfig\": \"Aggiorna la vecchia configurazione\",\r\n        \"LabelPageNotFound\": \"404: La pagina che cerchi non esiste\",\r\n        \"LabelShadyPath\": \"Hai manipolato l'indirizzo o sei venuto qui per errore. In ogni caso, usa la navigazione\",\r\n        \"ButtonMigrate\": \"Aggiorna\",\r\n        \"LabelMigrationNeeded\": \"Aggiornamento Richiesto\",\r\n        \"LabelMigrationExplained\": \"Questa versione della plugin non è compatibile con la configurazione corrente della tua App. Devi aggiornarla, non temere, la procedura verrà eseguita in automatico!\",\r\n        \"ButtonMigrateNow\": \"Clicca qui per iniziare l'aggiornamento\",\r\n        \"MessageMigrationOk\": \"Configurazione aggiornata correttamente\",\r\n        \"LabelHomeUrl\": \"URL Home\",\r\n        \"HelperHomeUrl\": \"Specifica un URL della home page\",\r\n        \"LabelSelectPage\": \"Seleziona pagina\",\r\n        \"TitleUploadOverlayImages\": \"Carica le immagini di overlay\",\r\n        \"TitleUploadScenarioImages\": \"Carica le immagini di scenario\",\r\n        \"ButtonUploadOverlay\": \"Carica Overlay\",\r\n        \"ButtonUploadScenario\": \"Carica Scenario\",\r\n        \"LabelImageSource\": \"Origine delle Immagini\",\r\n        \"LabelHelpPageLinkType\": \"Tipo Link Pagina Aiuto\",\r\n        \"LabelHelpPageLink\": \"Link Help Page\",\r\n        \"LabelMode\": \"Modalità\",\r\n        \"LabelSelectHelpPage\": \"Seleziona la Pagina d'Aiuto\",\r\n        \"LabelMigrationFailed\": \"Siamo terribilmente spiaciuti ma qualcosa è andato storto, puoi riprovare la procedura o saltare la migrazione (le vecchie impostazioni verranno perse).\",\r\n        \"ButtonStartFromScratch\": \"SALTA LA MIGRAZIONE\",\r\n        \"LabelNoAppConfigToBuild\": \"La configuration App non è pubblicata — devi pubblicarla per creare le build\",\r\n        \"LabelBuildIsInProgress\": \"Preparazione dell'app bundle per cerazione build...\",\r\n        \"LabelDownloadIsInProgress\": \"Preparazione dell'app bundle per il download...\",\r\n\r\n        \"LabelGenericError\": \"Qualcosa è andato storto\",\r\n        \"LabelGenericErrorMessage\": \"Un glitch nel sistema oppure un disturbo nella forza, prova ancora!\",\r\n\r\n        \"LabelNoHttpError\": \"Protocollo HTTPS non rilevato\",\r\n        \"LabelNoHttpErrorMessage\": \"Il tuo sito deve utilizzare HTTPS come protocollo\",\r\n\r\n        \"LabelNoLocalError\": \"Il sito non è on line\",\r\n        \"LabelNoLocalErrorMessage\": \"Il tuo sito deve essere on line, siam spiacenti!\",\r\n\r\n        \"LabelCertWizardTitle\": \"Configurazione Certificati\",\r\n        \"LabelStep\": \"Passo\",\r\n        \"LabelOf\": \"di\",\r\n        \"LabelCertWizardHelpTitle\": \"Non sai da dove cominciare?\",\r\n        \"ButtonStartWizard\": \"INIZIA WIZARD\",\r\n        \"LabeliOSCertWizardBundleId\": \"Per abilitare la procedura guidata devi prima aver configurato il valore <strong>Bundle Id</strong> nel tab <strong>Info</strong>.\",\r\n\r\n        \"HelperAppleDevEmail\": \"Utilizza il tuo developer account Apple ID\",\r\n        \"HelperAppleDevIssuerId\": \"Utilizza il tuo developer account Issuer ID che trovi nella console AppStore Connect\",\r\n        \"HelperAppleDevKeyId\": \"Utilizza la key ID generata dalla console AppStore Connect\",\r\n        \"HelperAppleDevTokenFile\": \"Carica il certiicato .p8 generato dalla console AppStore Connect\",\r\n\r\n        \"LabeliOSCertWizardWizardHint\": \"Completa il wizard per ottenere un certificato <strong>.p12</strong> e un file <strong>.mobileprovision</strong>.<br /><br >Per creare le chiavi, devi avere un Admin account in App Store Connect.<br /><br />Clicca <a target='blank' href='https://developer.apple.com/documentation/appstoreconnectapi/creating_api_keys_for_app_store_connect_api'>qui</a> per una guida completa su come creare questi valori.\",\r\n        \"LabeliOSCertWizardHelpBody\": `\r\n\t\t\t<br />\r\n\t\t\tPer compilare la tua app <strong>iOS</strong> è necessario avere un certificato <strong>.p12</strong> e un file <strong>.mobileprovision</strong>. Puoi caricarli a mano oppure se ti serve aiuto,\r\n\t\t\tpremi il bottone INIZIA WIZARD per iniziare una procedura guidata che ti aiuterà a configurare questa sezione in modo facile!\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\tI passi per completare quest'operazione sono facili ma è necesssario avere un account sviluppatore <strong>Apple</strong> per compilare e pubblicare la tua applicazione nello store.\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\tNel caso dovessi registrare un nuovo account sviluppatore <strong>Apple</strong> puoi <a href=\"https://developer.apple.com/programs/\" target=\"_blank\">visitare il sito ufficiale</a>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t`,\r\n\r\n        \"HelperAndroidDevEmail\": \"Utilizza il tuo developer account Google ID\",\r\n        \"HelperAndroidDevKSAlias\": \"Inserisci un identificativo per la tua key\",\r\n\r\n        \"LabelAndroidCertWizardWizardHint\": \"Completa il wizard per ottenere un certificato <strong>.keystore</strong>.\",\r\n        \"LabelAndroidCertWizardHelpBody\": `\r\n\t\t\t<br />\r\n\t\t\tPer compilare la tua app <strong>Android</strong> è necessario avere un certificato <strong>.keystore</strong>. Puoi caricarlo a mano oppure se ti serve aiuto,\r\n\t\t\tpremi il bottone INIZIA WIZARD per iniziare una procedura guidata che ti aiuterà a configurare questa sezione in modo facile!\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\tI passi per completare quest'operazione sono facili ma è necesssario avere un account sviluppatore <strong>Google</strong> per pubblicare la tua applicazione nello store.\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            Nel caso dovessi registrare un nuovo account sviluppatore <strong>Google</strong> puoi <a href=\"https://play.google.com/console/about/\" target=\"_blank\">visitare il sito ufficiale</a>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t`,\r\n\r\n        \"LabelResetSettings\": \"Reset della configurazione\",\r\n        \"LabelResetSettingsHelp\": \"Cancella la configurazione corrente della plugin, sovrascrivendo tutte le impostazioni con valore di default (vuoto). Attenzione, l'operazione è distruttiva e non reversibile.\",\r\n        \"DialogResetSettings\": \"Reset Configurazione\",\r\n        \"LabelConfirmSettingsReset\": \"Sei sicuro di voler cancellare la configurazione corrente? Tutte le impostazioni verrano perse e non potranno essere ripristinate.\",\r\n\r\n        \"LabelDrawerMenuLayout\": \"Usa menù di navigazione a scomparsa\",\r\n        \"LabelTilesMenuLayout\": \"Usa menù di navigazione a tile\",\r\n        \"LabelTabsMenuLayout\": \"Usa menù di navigazione a tab\",\r\n\r\n        \"LabelUseLightStatusBar\": \"Usa barra di stato chiara\",\r\n        \"HelperUseLightStatusBar\": \"Abilita questa impostazione se utilizzi un colore SCURO come colore primario nella tua app\",\r\n\r\n        \"LabelUseUserLogin\": \"Usa il login utente\",\r\n        \"HelperUseUserLogin\": \"Abilita questa impostazione se desideri che l'utente possa accedere alla tua app attraverso la procdura di login\",\r\n\r\n        \"LabelLoginAlways\": \"Mostra sempre la schermata di login per accedere all'app\",\r\n        \"LabelLoginAction\": \"Mostra la schermata di login solo quando una voce di menu è selezionata\",\r\n        \"LabelLoginCode\": \"Mostra la schermata di login solo quando richiesta attraverso il bridge javascript\",\r\n\r\n        \"LabelEntryTextColor\": \"Colore Testo Campi\",\r\n        \"LabelEntryBackgroundColor\": \"Colore Sfondo Campi\",\r\n        \"LabelErrorTextColor\": \"Colore Testo Errori\",\r\n\r\n        \"LabelUseAllCategories\": \"Utilizza tutte le categorie\",\r\n        \"HelperUseAllCategories\": \"Abilita questa impostazione se desideri che tutte le categorie siano disponibili nella tua lista\",\r\n        \"LabelSelectCategory\": \"Seleziona Categoria\",\r\n\r\n        \"LabelPostLayoutOneColumnPWT\": \"Il layout della lista di post sarà ad una colonna con immagine e titlo\",\r\n        \"LabelPostLayoutOneColumnPWD\": \"Il layout della lista di post sarà ad una colonna con immagine e dettagli\",\r\n        \"LabelPostLayoutTwoColumnsPWT\": \"Il layout della lista di post sarà ad due colonne con immagine e titolo\",\r\n\r\n        \"LabelInfoGeneral\": \"Generale\",\r\n        \"LabelInfoSharing\": \"Condivisione\",\r\n        \"LabelInfoAuthentication\": \"Autenticazione\",\r\n        \"LabelInfoMenuAndNavigation\": \"Menù e Navigazione\",\r\n        \"LabelInfoStyleAndAppearance\": \"Stile e Aspetto\",\r\n\r\n        \"LabelProtected\": \"Solo gli utenti registrati possono accedere a questo contenuto\",\r\n        \"LabelAllowShareWebView\": \"Abilita l'utente alla condivisione del contenuto della webview\",\r\n\r\n        \"LabelLoginPage\": \"Login Page .png (dim. suggerita 1152px X 2046px)\",\r\n\r\n        \"LabelBackgroundImage\": \"Immagine di sfondo\",\r\n        \"ButtonRemoveBkgImage\": \"Rimuovi immagine di sfondo\",\r\n\r\n        \"LabelHideIcon\": \"Nascondi icona per questa voce di menù\",\r\n        \"LabelHideTitle\": \"Nascondi titolo per questa voce di menù\",\r\n\r\n        \"LabelLicenseId\": \"ID Licenza\",\r\n        \"HelperLicenseId\": \"Utilizza questo valore quando acquisti la licenza per My FastAPP per questo sito\",\r\n\r\n        \"LabelPreparingBuildDownload\": \"Preparazione download per\",\r\n\r\n        \"MenuItemHomePage\": \"Home Page\",\r\n        \"MenuItemBusinessCard\": \"Biglietto da Visita\",\r\n        \"MenuItemMailTo\": \"Invia Email\",\r\n        \"MenuItemEmptyLine\": \"Riga Vuota\",\r\n        \"MenuItemOpenURL\": \"Apri URL\",\r\n        \"MenuItemPhoneCall\": \"Chiamata\",\r\n        \"MenuItemPhotoEditor\": \"Editor Foto\",\r\n        \"MenuItemPhotoSend\": \"Invio Foto\",\r\n        \"MenuItemQR\": \"QR\",\r\n        \"MenuItemSeparator\": \"Separatore\",\r\n        \"MenuItemSendSms\": \"Invio SMS\",\r\n        \"MenuItemOnLineWebView\": \"Web View\",\r\n        \"MenuItemPostList\": \"Lista Post\",\r\n        \"MissingHomePageError\": \"Voce di menu di tipo '$type' assente\",\r\n\r\n        \"YupValueRequired\": \"È richiesto un valore\",\r\n        \"YupTitleRequired\": \"Un titolo è richiesto\",\r\n        \"YupFileRequired\": \"Un file è richiesto\",\r\n        \"YupLinkRequired\": \"Un link è richiesto\",\r\n        \"YupPhoneNumberRequired\": \"Un numero di telefono è richiesto\",\r\n        \"YupTemplateIdRequired\": \"Un template ID è richiesto\",\r\n        \"YupEmailRequired\": \"Un indirizzo email è richiesto\",\r\n        \"YupValidEmailRequired\": \"Deve essere un indirizzo valido\",\r\n        \"YupUrlRequired\": \"Un URL è richiesto\",\r\n        \"YupValidUrlRequired\": \"Deve essere un URL valido\",\r\n        \"YupInvalidBundleId\": \"Bundle id non è corretto, sono consentiti solo: lettere, numeri, punti e underscore\"\r\n    }\r\n};\r\nexport default it_IT;","import i18n from \"i18next\";\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport en_US from \"./en_US\";\r\nimport it_IT from \"./it_IT\";\r\n\r\n// wpApAdminSettings is a global variable defined in WP\r\n// To allow webpack to build and not giving error we are\r\n// creating a local reference only if it exists \r\n// (basically when the javascript is executed inside the WordPress context)\r\nlet _wpApAdminSettings = {};\r\nif (typeof variable !== 'wpApAdminSettings') {\r\n    _wpApAdminSettings = window['wpApAdminSettings'];\r\n}\r\n\r\nconst locale = _wpApAdminSettings && _wpApAdminSettings.wp_locale ?\r\n    _wpApAdminSettings.wp_locale.split(\",\")[0].trim() : \"en_US\";\r\n\r\ni18n\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources: {\r\n            \"en_US\": en_US,\r\n            \"it_IT\": it_IT\r\n        },\r\n        lng: locale,\r\n        fallbackLng: [\"en_US\"],\r\n\r\n        keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n\r\n    });\r\n\r\nexport default i18n;\r\n","import { cloneDeep } from 'lodash';\r\nimport validator from 'validator';\r\n\r\nexport const isDev = () => {\r\n    return !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n}\r\n\r\nexport const stringToHash = (value) => {\r\n    var hash = 0, i, chr;\r\n    if (value.length === 0) return hash;\r\n    for (i = 0; i < value.length; i++) {\r\n        chr = value.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport const addArrayItem = (array, newItem) => {\r\n    const newArray = cloneDeep(array ? array : []).concat([newItem]);\r\n    return newArray;\r\n}\r\n\r\nexport const updateArrayItem = (array, updatedItem, selector) => {\r\n    const newArray = cloneDeep(array ? array : []);\r\n    if (newArray && newArray.length > 0) {\r\n        const index = newArray.findIndex(selector);\r\n        if (index !== -1)\r\n            newArray[index] = updatedItem;\r\n    }\r\n    return newArray;\r\n}\r\n\r\nexport const removeArrayItem = (array, selector) => {\r\n    const newArray = cloneDeep(array ? array : []).filter((x) => !selector(x));\r\n    return newArray;\r\n}\r\n\r\nexport const removeObjectArrayItem = (obj, getter, selector) => {\r\n    const newObj = cloneDeep(obj);\r\n    const newArray = (getter(newObj) || []);\r\n    const index = newArray.findIndex((x) => selector(x));\r\n    if (index !== -1)\r\n        newArray.splice(index, 1);\r\n    return newObj;\r\n}\r\n\r\nexport const addBundleItem = (bundle, newItem) => {\r\n    const newBundle = cloneDeep(bundle);\r\n    newBundle.items = (newBundle.items ? newBundle.items : []).concat([newItem]);\r\n    return newBundle;\r\n}\r\n\r\nexport const updateBundleItem = (bundle, updatedItem, selector) => {\r\n    const newBundle = cloneDeep(bundle);\r\n    if (newBundle.items && newBundle.items.length > 0) {\r\n        const index = newBundle.items.findIndex(selector);\r\n        if (index !== -1)\r\n            newBundle.items[index] = updatedItem;\r\n    }\r\n    return newBundle;\r\n}\r\n\r\nexport const removeBundleItem = (bundle, selector) => {\r\n    const newBundle = cloneDeep(bundle);\r\n    if (newBundle.items && newBundle.items.length > 0) {\r\n        newBundle.items = newBundle.items.filter((x) => !selector(x));\r\n    }\r\n    return newBundle;\r\n}\r\n\r\nexport const validateSchema = (schema, object, parentName = \"\") => {\r\n    const errors = []\r\n    Object.keys(schema).forEach(key => {\r\n        if (typeof schema[key] == \"object\") {\r\n            errors.push(...validateSchema(schema[key], object[key], `${parentName}.${key}`));\r\n        } else {\r\n            errors.push(validate(schema[key].split(\" \").join(\"\").split(\",\").reverse(), object[key], `${parentName}.${key}`));\r\n        }\r\n    })\r\n    return errors;\r\n}\r\n\r\nexport const validate = (validatorsFuncName, value, name = \"\") => {\r\n    let error = {};\r\n    validatorsFuncName.forEach(funcName => {\r\n        if (funcName === \"required\") {\r\n            if (value === null || value === undefined || value.length <= 0) {\r\n                error.errorId = name;\r\n                error.message = funcName;\r\n            }\r\n        } else {\r\n            if (!validator[funcName](value.toString())) {\r\n                error.errorId = name;\r\n                error.message = funcName;\r\n            }\r\n        }\r\n    })\r\n    return error;\r\n}\r\n\r\nexport const getColoredBottonStyle = (theme, color, v) => {\r\n    return {\r\n        color: theme.palette.getContrastText(color[v ?? 500]),\r\n        backgroundColor: color[v ?? 500],\r\n        '&:hover': {\r\n            backgroundColor: color[v ? v + 200 : 700],\r\n        }\r\n    }\r\n}","import * as Yup from 'yup';\r\nimport { cloneDeep } from 'lodash';\r\n\r\nimport i18n from '../components/localization/i18n';\r\nimport { isDev } from '../helpers/Utils';\r\n\r\nexport const LicenseStatus = {\r\n    NotFound: 0,\r\n    Active  : 1,\r\n    Expired : 2\r\n}\r\n\r\nexport const ImageType = {\r\n    AppSplash: \"AppSplash\",\r\n    AppIcon: \"AppIcon\",\r\n    MenuHeader: \"MenuHeader\",\r\n    PhotoEditor: \"PhotoEditor\",\r\n    LoginPage: \"LoginPage\",\r\n    MenuItem: \"MenuItem\",\r\n}\r\n\r\nexport const FileType = {\r\n    iOSP12Certificate: \"iOSP12Certificate\",\r\n    iOSP8Certificate: \"iOSP8Certificate\",\r\n    iOSMobileProvisioning: \"iOSMobileProvisioning\",\r\n    AndroidKeyStore: \"AndroidKeyStore\"\r\n}\r\n\r\nexport const BuildType = {\r\n    Android: \"Android\",\r\n    iOS: \"iOS\"\r\n}\r\n\r\nexport const MenuLayoutType = {\r\n    Drawer: \"Drawer\",\r\n    Tiles: \"Tiles\",\r\n    Tabs: \"Tabs\"\r\n}\r\n\r\nexport const UserLoginType = {\r\n    None: \"None\",\r\n    Always: \"Always\",\r\n    Action: \"Action\",\r\n    Code: \"Code\"\r\n}\r\n\r\nexport const PostListLayoutType = {\r\n    OneColumnPictureWithText: \"OneColumnPictureWithText\",\r\n    OneColumnPictureWithDetails: \"OneColumnPictureWithDetails\",\r\n    TwoColumnsPictureWithText: \"TwoColumnsPictureWithText\"\r\n}\r\n\r\nexport const ProcessStatus = {\r\n    Enqueued: \"Enqueued\",\r\n    Processing: \"Processing\",\r\n    Completed: \"Completed\",\r\n    Canceled: \"Canceled\",\r\n    Faulty: \"Faulty\"\r\n}\r\n\r\nexport const MaxFileSize = {\r\n    Max5MB: 5242880,\r\n    Max1MB: 1048576,\r\n}\r\n\r\nexport const MenuItemTypes = {\r\n    HomePage: \"HomePage\",\r\n    BusinessCard: \"BusinessCard\",\r\n    MailTo: \"MailTo\",\r\n    EmptyLine: \"EmptyLine\",\r\n    OpenURL: \"OpenURL\",\r\n    PhoneCall: \"PhoneCall\",\r\n    PhotoEditor: \"PhotoEditor\",\r\n    PhotoSend: \"PhotoSend\",\r\n    QR: \"QR\",\r\n    Separator: \"Separator\",\r\n    SendSms: \"SendSms\",\r\n    OnLineWebView: \"OnLineWebView\",\r\n    Label: {\r\n        HomePage: i18n.t(\"MenuItemHomePage\"),\r\n        BusinessCard: i18n.t(\"MenuItemBusinessCard\"),\r\n        MailTo: i18n.t(\"MenuItemMailTo\"),\r\n        EmptyLine: i18n.t(\"MenuItemEmptyLine\"),\r\n        OpenURL: i18n.t(\"MenuItemOpenURL\"),\r\n        PhoneCall: i18n.t(\"MenuItemPhoneCall\"),\r\n     // PhotoEditor: i18n.t(\"MenuItemPhotoEditor\"),\r\n        PhotoSend: i18n.t(\"MenuItemPhotoSend\"),\r\n        QR: i18n.t(\"MenuItemQR\"),\r\n        Separator: i18n.t(\"MenuItemSeparator\"),\r\n        SendSms: i18n.t(\"MenuItemSendSms\"),\r\n        OnLineWebView: i18n.t(\"MenuItemOnLineWebView\"),\r\n    }\r\n}\r\n\r\nconst CommonMenuItem = {\r\n    hideIcon: false,\r\n    hideTitle: false\r\n}\r\n\r\nexport const MenuItemDefaultValue = {\r\n    HomePage: {\r\n        ...cloneDeep(CommonMenuItem),\r\n        type: MenuItemTypes.HomePage,\r\n        icon: \"fa fa-home\",\r\n        iconCode: \"f015\",\r\n        title: i18n.t(\"MenuItemHomePage\"),\r\n        backgroundColor: \"#7957D5\",\r\n        backgroundImage: null,\r\n        textColor: \"#000000\",\r\n        fontSize: \"medium\",\r\n        fontStyle: \"regular\",\r\n        platform: \"ios, android\",\r\n        isVisible: true,\r\n        isProtected: false,\r\n        props: {\r\n            isAbsoluteUrl: true,\r\n            url: \"\",\r\n            wpUrl: \"\"\r\n        }\r\n    },\r\n    BusinessCard: {\r\n        ...cloneDeep(CommonMenuItem),\r\n        type: MenuItemTypes.BusinessCard,\r\n        icon: \"fa fa-address-card\",\r\n        iconCode: \"f2bb\",\r\n        title: i18n.t(\"MenuItemBusinessCard\"),\r\n        backgroundColor: \"#7957D5\",\r\n        backgroundImage: null,\r\n        textColor: \"#000000\",\r\n        fontSize: \"medium\",\r\n        fontStyle: \"regular\",\r\n        platform: \"ios, android\",\r\n        isVisible: true,\r\n        isProtected: false,\r\n        props: {\r\n            templateId: \"\"\r\n        }\r\n    },\r\n    MailTo: {\r\n        ...cloneDeep(CommonMenuItem),\r\n        type: MenuItemTypes.MailTo,\r\n        icon: \"fa fa-envelope\",\r\n        iconCode: \"f0e0\",\r\n        title: i18n.t(\"MenuItemMailTo\"),\r\n        backgroundColor: \"#7957D5\",\r\n        backgroundImage: null,\r\n        textColor: \"#000000\",\r\n        fontSize: \"medium\",\r\n        fontStyle: \"regular\",\r\n        platform: \"ios, android\",\r\n        isVisible: true,\r\n        isProtected: false,\r\n        props: {\r\n            email: \"\"\r\n        }\r\n    },\r\n    EmptyLine: {\r\n        ...cloneDeep(CommonMenuItem),\r\n        type: MenuItemTypes.EmptyLine,\r\n        icon: \"fa fa-align-justify\",\r\n        iconCode: \"f039\",\r\n        title: i18n.t(\"MenuItemEmptyLine\"),\r\n        backgroundColor: \"#7957D5\",\r\n        backgroundImage: null,\r\n        platform: \"ios, android\",\r\n        isVisible: true,\r\n        isProtected: false,\r\n        props: {\r\n        }\r\n    },\r\n    OpenURL: {\r\n        ...cloneDeep(CommonMenuItem),\r\n        type: MenuItemTypes.OpenURL,\r\n        icon: \"fa fa-external-link\",\r\n        iconCode: \"f08e\",\r\n        title: i18n.t(\"MenuItemOpenURL\"),\r\n        backgroundColor: \"#7957D5\",\r\n        backgroundImage: null,\r\n        textColor: \"#000000\",\r\n        fontSize: \"medium\",\r\n        fontStyle: \"regular\",\r\n        platform: \"ios, android\",\r\n        isVisible: true,\r\n        isProtected: false,\r\n        props: {\r\n            isAbsoluteUrl: true,\r\n            url: \"\",\r\n            wpUrl: \"\"\r\n        }\r\n    },\r\n    PhoneCall: {\r\n        ...cloneDeep(CommonMenuItem),\r\n        type: MenuItemTypes.PhoneCall,\r\n        icon: \"fa fa-phone\",\r\n        iconCode: \"f095\",\r\n        title: i18n.t(\"MenuItemPhoneCall\"),\r\n        backgroundColor: \"#7957D5\",\r\n        backgroundImage: null,\r\n        textColor: \"#000000\",\r\n        fontSize: \"medium\",\r\n        fontStyle: \"regular\",\r\n        platform: \"ios, android\",\r\n        isVisible: true,\r\n        isProtected: false,\r\n        props: {\r\n            phoneNumber: \"\"\r\n        }\r\n    },\r\n    //PhotoEditor: {\r\n    //    ...cloneDeep(CommonMenuItem),\r\n    //    type: MenuItemTypes.PhotoEditor,\r\n    //    icon: \"fa fa-picture-o\",\r\n    //    iconCode: \"f03e\",\r\n    //    title: i18n.t(\"MenuItemPhotoEditor\"),\r\n    //    backgroundColor: \"#7957D5\",\r\n    //    backgroundImage: null,\r\n    //    textColor: \"#000000\",\r\n    //    fontSize: \"medium\",\r\n    //    fontStyle: \"regular\",\r\n    //    platform: \"ios, android\",\r\n    //    isVisible: true,\r\n    //    isProtected: false,\r\n    //    props: {\r\n    //        imageSource: \"images\",\r\n    //        jsonUrl: \"\",\r\n    //        images: [],\r\n    //        isHelpPageAbsoluteUrl: true,\r\n    //        helpPageUrl: \"\",\r\n    //        helpPageWpUrl: \"\",\r\n    //        mode: \"all\"\r\n    //    }\r\n    //},\r\n    PhotoSend: {\r\n        ...cloneDeep(CommonMenuItem),\r\n        type: MenuItemTypes.PhotoSend,\r\n        icon: \"fa fa-share\",\r\n        iconCode: \"f064\",\r\n        title: i18n.t(\"MenuItemPhotoSend\"),\r\n        backgroundColor: \"#7957D5\",\r\n        backgroundImage: null,\r\n        textColor: \"#000000\",\r\n        fontSize: \"medium\",\r\n        fontStyle: \"regular\",\r\n        platform: \"ios, android\",\r\n        isVisible: true,\r\n        isProtected: false,\r\n        props: {\r\n            email: \"\"\r\n        }\r\n    },\r\n    QR: {\r\n        ...cloneDeep(CommonMenuItem),\r\n        type: MenuItemTypes.QR,\r\n        icon: \"fa fa-qrcode\",\r\n        iconCode: \"f029\",\r\n        title: i18n.t(\"MenuItemQR\"),\r\n        backgroundColor: \"#7957D5\",\r\n        backgroundImage: null,\r\n        textColor: \"#000000\",\r\n        fontSize: \"medium\",\r\n        fontStyle: \"regular\",\r\n        platform: \"ios, android\",\r\n        isVisible: true,\r\n        isProtected: false,\r\n        props: {\r\n            url: \"\"\r\n        }\r\n    },\r\n    Separator: {\r\n        ...cloneDeep(CommonMenuItem),\r\n        type: MenuItemTypes.Separator,\r\n        icon: \"fa fa-sort\",\r\n        iconCode: \"f0dc\",\r\n        title: i18n.t(\"MenuItemSeparator\"),\r\n        backgroundColor: \"#7957D5\",\r\n        backgroundImage: null,\r\n        textColor: \"#000000\",\r\n        platform: \"ios, android\",\r\n        isVisible: true,\r\n        isProtected: false,\r\n        props: {\r\n            thickness: 1\r\n        }\r\n    },\r\n    SendSms: {\r\n        ...cloneDeep(CommonMenuItem),\r\n        type: MenuItemTypes.SendSms,\r\n        icon: \"fa fa-commenting\",\r\n        iconCode: \"f27a\",\r\n        title: i18n.t(\"MenuItemSendSms\"),\r\n        backgroundColor: \"#7957D5\",\r\n        backgroundImage: null,\r\n        textColor: \"#000000\",\r\n        fontSize: \"medium\",\r\n        fontStyle: \"regular\",\r\n        platform: \"ios, android\",\r\n        isVisible: true,\r\n        isProtected: false,\r\n        props: {\r\n            phoneNumber: \"\"\r\n        }\r\n    },\r\n    OnLineWebView: {\r\n        ...cloneDeep(CommonMenuItem),\r\n        type: MenuItemTypes.OnLineWebView,\r\n        icon: \"fa fa-code\",\r\n        iconCode: \"f121\",\r\n        title: i18n.t(\"MenuItemOnLineWebView\"),\r\n        backgroundColor: \"#7957D5\",\r\n        backgroundImage: null,\r\n        textColor: \"#000000\",\r\n        fontSize: \"medium\",\r\n        fontStyle: \"regular\",\r\n        platform: \"ios, android\",\r\n        isVisible: true,\r\n        isProtected: false,\r\n        props: {\r\n            allowShare: false,\r\n            isAbsoluteUrl: true,\r\n            url: \"\",\r\n            wpUrl: \"\"\r\n        }\r\n    },\r\n}\r\n\r\nconst validUrlRegEx = /(https?:\\/\\/.*)(:*)(\\d*)\\/?(.*)/g\r\nconst getValidUrlRegEx = () => {\r\n    return validUrlRegEx;\r\n}\r\n\r\nexport const MenuItemValidateSchema = {\r\n    HomePage:\r\n        Yup.object().shape({\r\n            type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            title: Yup.string().required(i18n.t(\"YupTitleRequired\")),\r\n            backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            textColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontSize: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontStyle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            props: Yup.object().shape({\r\n                isAbsoluteUrl: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n                url: Yup.string().nullable().when('isAbsoluteUrl', {\r\n                    is: true,\r\n                    then: Yup.string().nullable().matches(getValidUrlRegEx(), i18n.t(\"YupValidUrlRequired\")).required(i18n.t(\"YupLinkRequired\"))\r\n                }),\r\n                wpUrl: Yup.string().nullable().when('isAbsoluteUrl', {\r\n                    is: false,\r\n                    then: Yup.string().nullable().required(i18n.t(\"YupLinkRequired\"))\r\n                })\r\n            })\r\n        }),\r\n    BusinessCard:\r\n        Yup.object().shape({\r\n            type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            title: Yup.string().required(i18n.t(\"YupTitleRequired\")),\r\n            backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            textColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontSize: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontStyle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            props: Yup.object().shape({\r\n                templateId: Yup.string().required(i18n.t(\"YupTemplateIdRequired\"))\r\n            })\r\n        }),\r\n    MailTo:\r\n        Yup.object().shape({\r\n            type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            title: Yup.string().required(i18n.t(\"YupTitleRequired\")),\r\n            backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            textColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontSize: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontStyle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            props: Yup.object().shape({\r\n                email: Yup.string().email(i18n.t(\"YupEmailRequired\")).required(i18n.t(\"YupEmailRequired\"))\r\n            })\r\n        }),\r\n    EmptyLine:\r\n        Yup.object().shape({\r\n            type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n        }),\r\n    OpenURL:\r\n        Yup.object().shape({\r\n            type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            title: Yup.string().required(i18n.t(\"YupTitleRequired\")),\r\n            backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            textColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontSize: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontStyle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            props: Yup.object().shape({\r\n                isAbsoluteUrl: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n                url: Yup.string().nullable().when('isAbsoluteUrl', {\r\n                    is: true,\r\n                    then: Yup.string().nullable().matches(getValidUrlRegEx(), i18n.t(\"YupValidUrlRequired\")).required(i18n.t(\"YupLinkRequired\"))\r\n                }),\r\n                wpUrl: Yup.string().nullable().when('isAbsoluteUrl', {\r\n                    is: false,\r\n                    then: Yup.string().nullable().required(i18n.t(\"YupLinkRequired\"))\r\n                })\r\n            })\r\n        }),\r\n    PhoneCall:\r\n        Yup.object().shape({\r\n            type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            title: Yup.string().required(i18n.t(\"YupTitleRequired\")),\r\n            backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            textColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontSize: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontStyle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            props: Yup.object().shape({\r\n                phoneNumber: Yup.string()\r\n                    // Does a world wide generic reg ex even exists?\r\n                    //.matches(\"/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\", 'Phone number is not valid')\r\n                    .required(i18n.t(\"YupPhoneNumberRequired\"))\r\n            })\r\n        }),\r\n    //PhotoEditor:\r\n    //    Yup.object().shape({\r\n    //        type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n    //        icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n    //        title: Yup.string().required(i18n.t(\"YupTitleRequired\")),\r\n    //        backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n    //        textColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n    //        fontSize: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n    //        fontStyle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n    //        platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n    //        isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n    //        props: Yup.object().shape({\r\n    //            jsonUrl: Yup.string().when(\"imageSource\", {\r\n    //                is: \"url\",\r\n    //                then: Yup.string().matches(getValidUrlRegEx(), i18n.t(\"YupValidUrlRequired\")).required(i18n.t(\"YupLinkRequired\"))\r\n    //            }),\r\n    //            helpPageUrl: Yup.string().nullable().when([\"imageSource\", \"isHelpPageAbsoluteUrl\"], {\r\n    //                is: (p1, p2) => p1 === \"images\" && p2 === true,\r\n    //                then: Yup.string().nullable().matches(getValidUrlRegEx(), i18n.t(\"YupValidUrlRequired\")).required(i18n.t(\"YupLinkRequired\"))\r\n    //            }),\r\n    //            helpPageWpUrl: Yup.string().nullable().when([\"imageSource\", \"isHelpPageAbsoluteUrl\"], {\r\n    //                is: (p1, p2) => p1 === \"images\" && p2 === false,\r\n    //                then: Yup.string().nullable().required(i18n.t(\"YupLinkRequired\"))\r\n    //            })\r\n    //        })\r\n    //    }),\r\n    PhotoSend:\r\n        Yup.object().shape({\r\n            type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            title: Yup.string().required(i18n.t(\"YupTitleRequired\")),\r\n            backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            textColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontSize: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontStyle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            props: Yup.object().shape({\r\n                email: Yup.string().email(i18n.t(\"YupValidEmailRequired\")).required(i18n.t(\"YupEmailRequired\"))\r\n            })\r\n        }),\r\n    QR:\r\n        Yup.object().shape({\r\n            type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            title: Yup.string().required(i18n.t(\"YupTitleRequired\")),\r\n            backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            textColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontSize: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontStyle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            props: Yup.object().shape({\r\n                url: Yup.string().matches(getValidUrlRegEx(), i18n.t(\"YupValidUrlRequired\")).required(i18n.t(\"YupUrlRequired\"))\r\n            })\r\n        }),\r\n    Separator:\r\n        Yup.object().shape({\r\n            type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            props: Yup.object().shape({\r\n                thickness: Yup.number().min(1).required(i18n.t(\"YupValueRequired\"))\r\n            })\r\n        }),\r\n    SendSms:\r\n        Yup.object().shape({\r\n            type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            title: Yup.string().required(i18n.t(\"YupTitleRequired\")),\r\n            backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            textColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontSize: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontStyle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            props: Yup.object().shape({\r\n                phoneNumber: Yup.string()\r\n                    // Does a world wide generic reg ex even exists?\r\n                    //.matches(\"/^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\", 'Phone number is not valid')\r\n                    .required(i18n.t(\"YupPhoneNumberRequired\"))\r\n            })\r\n        }),\r\n    OnLineWebView:\r\n        Yup.object().shape({\r\n            type: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            icon: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            title: Yup.string().required(i18n.t(\"YupTitleRequired\")),\r\n            backgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            textColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontSize: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            fontStyle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            platform: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            isVisible: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            props: Yup.object().shape({\r\n                isAbsoluteUrl: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n                url: Yup.string().nullable().when('isAbsoluteUrl', {\r\n                    is: true,\r\n                    then: Yup.string().nullable().matches(getValidUrlRegEx(), i18n.t(\"YupValidUrlRequired\")).required(i18n.t(\"YupLinkRequired\"))\r\n                }),\r\n                wpUrl: Yup.string().nullable().when('isAbsoluteUrl', {\r\n                    is: false,\r\n                    then: Yup.string().nullable().required(i18n.t(\"YupLinkRequired\"))\r\n                })\r\n            })\r\n        }),\r\n}\r\n\r\nexport const SettingsValidateSchema = {\r\n    Info:\r\n        Yup.object().shape({\r\n\r\n            appTitle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            menuTitle: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            bundleId: Yup.string().matches(/^[a-z][a-z0-9_]*(\\.[a-z0-9_]+)+[0-9a-z_]$/i, i18n.t(\"YupInvalidBundleId\")).required(i18n.t(\"YupValueRequired\")),\r\n            //versionNumber: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            shareAppIos: Yup.string().nullable(),\r\n            shareAppAndroid: Yup.string().nullable(),\r\n            enableAppMenu: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            //homeUrl: Yup.string().nullable().when('enableAppMenu', {\r\n            //    is: false,\r\n            //    then: Yup.string().nullable().matches(getValidUrlRegEx(), i18n.t(\"YupValidUrlRequired\")).required(i18n.t(\"YupValueRequired\"))\r\n            //}),\r\n            appPrimaryColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            appSecondaryColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            appTitleColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            colorHeaderMenu: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            menuTitleBackgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            menuItemsBackgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            menuItemsTextColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            menuBackgroundColor: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n        }),\r\n    Assets:\r\n        Yup.object().shape({\r\n         //   appSplashImage: Yup.string().url(i18n.t(\"YupValidUrlRequired\")).required(i18n.t(\"YupFileRequired\")),\r\n         //   appIcon: Yup.string().url(i18n.t(\"YupValidUrlRequired\")).required(i18n.t(\"YupFileRequired\")),\r\n        }),\r\n    Ios:\r\n        Yup.object().shape({\r\n            enableiOSBuild: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            iOSP12CertificateFile: Yup.string().nullable().when('enableiOSBuild', {\r\n                is: true,\r\n                then: Yup.string().nullable().required(i18n.t(\"YupFileRequired\"))\r\n            }),\r\n            iOSCertificatePassword: Yup.string().when('enableiOSBuild', {\r\n                is: true,\r\n                then: Yup.string().required(i18n.t(\"YupValueRequired\"))\r\n            }),\r\n            iOSMobileProvisionFile: Yup.string().nullable().when('enableiOSBuild', {\r\n                is: true,\r\n                then: Yup.string().nullable().required(i18n.t(\"YupFileRequired\"))\r\n            }),\r\n        }),\r\n    Android:\r\n        Yup.object().shape({\r\n            enableAndroidBuild: Yup.boolean().required(i18n.t(\"YupValueRequired\")),\r\n            androidKeyStoreFile: Yup.string().nullable().when(\"enableAndroidBuild\", {\r\n                is: true,\r\n                then: Yup.string().nullable().required(i18n.t(\"YupFileRequired\")),\r\n            }),\r\n            /*\r\n            androidKeyStoreAlias: Yup.string().when(\"enableAndroidBuild\", {\r\n                is: true,\r\n                then: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            }),\r\n            */\r\n            androidKeyStorePassword: Yup.string().when(\"enableAndroidBuild\", {\r\n                is: true,\r\n                then: Yup.string().required(i18n.t(\"YupValueRequired\")),\r\n            }),\r\n        }),\r\n    Services:\r\n        Yup.object().shape({\r\n            //oneSignalAppId: Yup.string().required('The one signal app id is required'),\r\n            //sendGripApiKey: Yup.string().required('The send grip api key is required'),\r\n        })\r\n}\r\n\r\nexport const Aphorisms = [\r\n    { author: \"Steve Jobs\", phrase: \"“Your time is limited, so don’t waste it living someone else’s life.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“You can’t connect the dots looking forward; you can only connect them looking backward. So you have to trust that the dots will somehow connect in your future.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“Don’t let the noise of others’ opinions drown out your own inner voice.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“Have the courage to follow your heart and intuition. They somehow already know what you truly want to become.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“Stay hungry. Stay foolish.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“If today were the last day of your life, would you want to do what you are about to do today?”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“I think the things you regret most in life are the things you didn’t do.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“Remembering that you are going to die is the best way I know to avoid the trap of thinking you have something to lose.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“We’re here to put a dent in the universe. Otherwise why else even be here?”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“Sometimes when you innovate, you make mistakes. It is best to admit them quickly, and get on with improving your other innovations.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“My favorite things in life don’t cost any money. It’s really clear that the most precious resource we all have is time.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“I’m convinced that about half of what separates successful entrepreneurs from the non-successful ones is pure perseverance.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“Innovation distinguishes between a leader and a follower.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“I think if you do something and it turns out pretty good, then you should go do something else wonderful, not dwell on it for too long. Just figure out what’s next.”\" },\r\n    { author: \"Steve Jobs\", phrase: \"“Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work. And the only way to do great work is to love what you do. If you haven’t found it yet, keep looking. Don’t settle. As with all matters of the heart, you’ll know when you find it.”\" },\r\n    { author: \"Plato\", phrase: \"“There is truth in wine and children.”\" },\r\n    { author: \"Napoleon Bonaparte\", phrase: \"“If you want a thing done well, do it yourself.”\" },\r\n    { author: \"Nelson Mandela\", phrase: \"“The greatest glory in living lies not in never falling, but in rising every time we fall.”\" },\r\n    { author: \"Walt Disney\", phrase: \"“The way to get started is to quit talking and begin doing.”\" },\r\n    { author: \"Eleanor Roosevelt\", phrase: \"“If life were predictable it would cease to be life, and be without flavor.”\" },\r\n    { author: \"John Lennon\", phrase: \"“Life is what happens when you're busy making other plans.”\" },\r\n    { author: \"Benjamin Franklin\", phrase: \"“Tell me and I forget. Teach me and I remember. Involve me and I learn.”\" },\r\n    { author: \"Aristotle\", phrase: \"“It is during our darkest moments that we must focus to see the light.”\" },\r\n    { author: \"Anne Frank\", phrase: \"“Whoever is happy will make others happy too.”\" },\r\n    { author: \"Albert Einstein\", phrase: \"“Only a life lived for others is a life worthwhile.”\" },\r\n    { author: \"Dalai Lama\", phrase: \"“The purpose of our lives is to be happy.”\" },\r\n    { author: \"William Shakespeare\", phrase: \"“Wisely, and slow. They stumble that run fast.”\" },\r\n    { author: \"Mother Teresa\", phrase: \"“If you judge people, you have no time to love them.”\" },\r\n    { author: \"Buddha\", phrase: \"“All that we are is the result of what we have thought.”\" },\r\n    { author: \"Albert Einstein\", phrase: \"“Insanity: doing the same thing over and over again and expecting different results.”\" },\r\n    { author: \"John F. Kennedy\", phrase: \"“Those who dare to fail miserably can achieve greatly.”\" },\r\n    { author: \"Muhammad Ali\", phrase: \"“Don’t count the days, make the days count.”\" },\r\n    { author: \"Julius Caesar\", phrase: \"“I came, I saw, I conquered.”\" },\r\n]","import React, { useState, useRef } from 'react';\r\n\r\nexport const useAggregatedState = (source) => {\r\n\r\n    const [state, _setState] = useState(source);\r\n    const setState = (newState) => {\r\n        _setState(prevState => {\r\n            return Object.assign({ ...prevState }, newState);\r\n        });\r\n    };\r\n\r\n    return [state, setState];\r\n}\r\n\r\nexport const usePageReadyState = (source) => {\r\n\r\n    const [state, _setState] = useState({\r\n        ...source,\r\n        promises: [],\r\n        pageIsReady: false,\r\n        pageHasError: false\r\n    });\r\n\r\n    const checkIfPageIsReady = (deps) => {\r\n        if (deps.length === 0) return false;\r\n        for (let i = 0; i < deps.length; i++) {\r\n            if (deps[i] === null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // We use some black magic async feature in react\r\n    const promisesCount = useRef(0);\r\n    const setPageIsReady = async (loaders, deps) => {\r\n\r\n        if (state.promises.length === 0) {\r\n            const promises = [];\r\n            for (let i = 0; i < loaders.length; i++) {\r\n                promises.push(loaders[i]());\r\n            }\r\n\r\n            _setState(prevState => {\r\n                return Object.assign({ ...prevState }, {\r\n                    promises\r\n                });\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        // Semaphore                \r\n        promisesCount.current += 1;\r\n        await Promise.all(state.promises);\r\n        promisesCount.current -= 1;\r\n        if (promisesCount.current > 0)\r\n            return;\r\n\r\n        if (checkIfPageIsReady(deps)) {\r\n            _setState(prevState => {\r\n                return Object.assign({ ...prevState }, {\r\n                    pageIsReady: true,\r\n                    pageHasError: false\r\n                });\r\n            });\r\n        } else {\r\n            _setState(prevState => {\r\n                return Object.assign({ ...prevState }, {\r\n                    pageIsReady: true,\r\n                    pageHasError: true\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    return [state.pageIsReady, state.pageHasError, setPageIsReady];\r\n}\r\n\r\nexport const useBusyState = (source) => {\r\n\r\n    const [state, _setState] = useState(source);\r\n    const setIsBusy = (newState) => {\r\n        _setState(prevState => {\r\n            return Object.assign({ ...prevState }, newState);\r\n        });\r\n    };\r\n\r\n    const isBusy = (state) => (key) => {\r\n        if (key) {\r\n            return state[key] ? state[key] === true : false;\r\n        } else {\r\n            const keys = Object.keys(state).filter(key => key[0] !== \"_\");\r\n            for (var index in keys) {\r\n                key = keys[index];\r\n                if (state[key] === true) return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return [state, isBusy(state), setIsBusy];\r\n}\r\n\r\n","import * as Baseline from './Baseline'\r\nimport React, { useContext, useState } from 'react';\r\n\r\nimport { useAggregatedState } from '../../helpers';\r\n\r\nexport const PluginContext = React.createContext(null);\r\n\r\n// wpApAdminSettings is a global variable defined in WP\r\n// To allow webpack to build and not giving error we are\r\n// creating a local reference only if it exists \r\n// (basically when the javascript is executed inside the WordPress context)\r\nlet _wpApAdminSettings = {};\r\nif (typeof variable !== 'wpApAdminSettings') {\r\n\t _wpApAdminSettings = window['wpApAdminSettings'];\r\n}\r\n\r\nconst { Provider } = PluginContext;\r\nexport const PluginProvider = ({ ...props }) => {\r\n\r\n\t const [plugin, setPlugin] = useAggregatedState({\r\n\t\t  siteUid: _wpApAdminSettings ? _wpApAdminSettings.siteUid : \"\",\r\n\t\t  restUrl: _wpApAdminSettings ? _wpApAdminSettings.restUrl : \"\",\r\n\t\t  pluginApiUrl: `${_wpApAdminSettings ? _wpApAdminSettings.internalAPIUrl : \"\"}myfastapp/v1/`,\r\n\t\t  azureApiUrl: `${_wpApAdminSettings ? _wpApAdminSettings.externalAPIUrl : \"\"}`,\r\n\t\t  wordPressApiUrl: `${_wpApAdminSettings ? _wpApAdminSettings.internalAPIUrl : \"\"}wp/v2/`,\r\n\t\t  wordPressNonce: _wpApAdminSettings ? _wpApAdminSettings.nonce : \"\",\r\n\t\t  platformVersion: _wpApAdminSettings ? _wpApAdminSettings.platformVersion : \"0\",\r\n\t\t  pluginVersion: _wpApAdminSettings ? _wpApAdminSettings.pluginVersion : \"0\",\r\n\t\t  locale: _wpApAdminSettings ? _wpApAdminSettings.wp_locale : \"en-US\",\r\n\t\t  assetsUrl: _wpApAdminSettings ? _wpApAdminSettings.assetsUrl : \"\",\r\n\t\t  adminEmail: _wpApAdminSettings ? _wpApAdminSettings.adminEmail : \"\",\r\n\t\t  apiKey: _wpApAdminSettings ? _wpApAdminSettings.apiKey : \"\",\r\n\t });\r\n\r\n\tconst getApiKeyAsync = Baseline.GetApiKeyInternal;\r\n\r\n\t const getAssetUrl = (assetPath) => {\r\n\t\t  return `${plugin.assetsUrl}/${assetPath}`;\r\n\t }\r\n\r\n\t return (\r\n\t\t  <Provider value={{\r\n\t\t\t\tplugin,\r\n\t\t\t\tgetApiKeyAsync,\r\n\t\t\t\tgetAssetUrl\r\n\t\t  }}>\r\n\t\t\t\t{props.children}\r\n\t\t  </Provider>\r\n\t );\r\n}","import React, { useContext } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport { PluginContext } from './PluginContext';\r\n\r\nexport const HttpMethods = {\r\n\r\n    GET: 'GET',\r\n    POST: 'POST',\r\n    DELETE: 'DELETE'\r\n}\r\n\r\nexport const FetchContext = React.createContext(null);\r\n\r\nconst { Provider } = FetchContext;\r\nexport const FetchProvider = ({ ...props }) => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const {\r\n        plugin,\r\n        getApiKeyAsync\r\n    } = useContext(PluginContext);\r\n\r\n    const snackOptions = { variant: \"error\", autoHideDuration: 5000 };\r\n\r\n    const createError = (code, message) => {\r\n        const error = new Error(message);\r\n        error.code = code;\r\n        return error;\r\n    }\r\n\r\n    const fetchOk = (api, cfg) => {\r\n\r\n        var isIE = !!window.MSInputMethodContext && !!document.documentMode;\r\n\r\n        const headers = {};\r\n        if (cfg.body && (typeof cfg.body === \"string\" || cfg.body instanceof String)) {\r\n            headers[\"Content-Type\"] = \"application/json\"\r\n        }\r\n\r\n        if (cfg.headers) {\r\n            for (var pair of cfg.headers.entries()) {\r\n                headers[pair[0]] = pair[1];\r\n            }\r\n        }\r\n\r\n        cfg = {\r\n            ...cfg,\r\n            cache: \"no-cache\",\r\n            mode: \"cors\",\r\n            headers: new Headers({\r\n                ...headers,\r\n                \"Cache-Control\": \"no-cache\",\r\n                \"Pragma\": \"no-cache\",\r\n                \"Expires\": \"0\",\r\n                \"X-Locale\": plugin.locale\r\n            })\r\n        };\r\n\r\n        return fetch(api, cfg)\r\n            .then(r => {\r\n                if (r.ok) {\r\n                    return r;\r\n                } else {\r\n                    switch (r.status) {\r\n                        // Bad Request\r\n                        case 400:\r\n                            return r.json()\r\n                                .then(data => {\r\n                                    if (data.message) {\r\n                                        return Promise.reject(createError(r.status, data.message));\r\n                                    } else {\r\n                                        if (data.errors) {\r\n                                            const errorKeys = Object.keys(data.errors);\r\n                                            if (cfg.collectErrorDetails) {\r\n                                                const error = new Error(\"Invalid data supplied\");\r\n                                                error.details = errorKeys.map(x => ({ errorId: x, message: data.errors[x][0] }));\r\n                                                error.code = r.status;\r\n                                                return Promise.reject(error);\r\n                                            } else {\r\n                                                errorKeys.forEach(errorKey => {\r\n                                                    const error = data.errors[errorKey][0];\r\n                                                    enqueueSnackbar(error, snackOptions);\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        return Promise.reject(createError(r.status, \"Invalid data supplied\"));\r\n                                    }\r\n                                });\r\n                        // Unauthorized\r\n                        case 401:\r\n                            return Promise.reject(createError(r.status, \"User is not authorized\"));\r\n                        // Forbidden\r\n                        case 403:\r\n                            return Promise.reject(createError(r.status, \"User is not allowed\"));\r\n                        // Not Found\r\n                        case 404:\r\n                            return Promise.reject(createError(r.status, \"Resource not found\"));\r\n                        // Server Error\r\n                        case 500:\r\n                            return r.json()\r\n                                .then(data => {\r\n                                    let message = null;\r\n                                    if (data.message) message = data.message;\r\n                                    else message = \"An internal error occured\";\r\n                                    return Promise.reject(createError(r.status, message));\r\n                                });\r\n                        // Not handled\r\n                        default:\r\n                            return Promise.reject(createError(r.status, \"Something went bad\"));\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                enqueueSnackbar(error.message, snackOptions);\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    // source: https://dev.to/ycmjason/javascript-fetch-retry-upon-failure-3p6g\r\n    const fetchRetry = (retries, api, cfg) => {\r\n        return fetchOk(api, cfg).catch(function (error) {\r\n            if (retries === 1) throw error;\r\n            return fetchRetry(api, cfg, retries - 1);\r\n        });\r\n    }\r\n\r\n    const fetchAuthorized = async (api, cfg) => {\r\n        const apiKey = await getApiKeyAsync();\r\n        return fetchOk(api, {\r\n            ...cfg,\r\n            headers: new Headers({\r\n                \"MyFastAppToken1\": apiKey,\r\n                \"X-WP-Nonce\": plugin.wordPressNonce,\r\n                \"X-Locale\": plugin.locale\r\n            })\r\n        })\r\n    }\r\n\r\n    const fetchWpAuthorized = async (api, cfg) => {\r\n        return fetchOk(api, {\r\n            ...cfg,\r\n            headers: new Headers({\r\n                \"X-WP-Nonce\": plugin.wordPressNonce,\r\n                \"X-Locale\": plugin.locale\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    // Used for debug purpose\r\n    const delay = (duration) => {\r\n        return new Promise((resolve) => setTimeout(resolve, duration));\r\n    }\r\n\r\n    return (\r\n        <Provider value={{\r\n            fetchRetry,\r\n            fetchOk,\r\n            fetchAuthorized,\r\n            fetchWpAuthorized\r\n        }}>\r\n            {props.children}\r\n        </Provider>\r\n    );\r\n}","import React, { useContext, } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nexport const ToastContext = React.createContext(null);\r\n\r\nconst { Provider } = ToastContext;\r\nexport const ToastProvider = ({ ...props }) => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const showInfoMessage = (message) => {\r\n        const snackOptions = { variant: \"info\", autoHideDuration: 5000 };\r\n        enqueueSnackbar(message, snackOptions);\r\n    }\r\n\r\n    const showSuccessMessage = (message) => {\r\n        const snackOptions = { variant: \"success\", autoHideDuration: 5000 };\r\n        enqueueSnackbar(message, snackOptions);\r\n    }\r\n\r\n    const showWarningMessage = (message) => {\r\n        const snackOptions = { variant: \"warning\", autoHideDuration: 5000 };\r\n        enqueueSnackbar(message, snackOptions);\r\n    }\r\n\r\n    const showErrorMessage = (message) => {\r\n        const snackOptions = { variant: \"error\", autoHideDuration: 5000 };\r\n        enqueueSnackbar(message, snackOptions);\r\n    }\r\n\r\n    return (\r\n        <Provider value={{\r\n            showInfoMessage,\r\n            showSuccessMessage,\r\n            showWarningMessage,\r\n            showErrorMessage\r\n        }}>\r\n            {props.children}\r\n        </Provider>\r\n    );\r\n}","import React, { useContext, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport { AES, enc, mode, pad } from 'crypto-js';\r\n\r\nimport { FetchContext, HttpMethods } from './FetchContext';\r\nimport { useAggregatedState } from '../../helpers';\r\n\r\n// wpApAdminSettings is a global variable defined in WP\r\n// To allow webpack to build and not giving error we are\r\n// creating a local reference only if it exists \r\n// (basically when the javascript is executed inside the WordPress context)\r\nlet _wpApAdminSettings = {};\r\nif (typeof variable !== 'wpApAdminSettings') {\r\n\t_wpApAdminSettings = window['wpApAdminSettings'];\r\n}\r\n\r\nconst compileRoute = (route, params) => {\r\n\tif (params) {\r\n\t\tconst props = Object.getOwnPropertyNames(params);\r\n\t\tif (props && props.length > 0) {\r\n\t\t\troute = `${route}?`\r\n\t\t\tprops.filter(x => params[x] !== null && params[x] !== undefined).forEach(prop => route = `${route}${prop}=${params[prop]}&`);\r\n\t\t\troute = route.substr(0, route.length - 1);\r\n\t\t}\r\n\t}\r\n\treturn route;\r\n}\r\n\r\nconst compileRouteWP = (route, params) => {\r\n\tif (params) {\r\n\t\tconst props = Object.getOwnPropertyNames(params);\r\n\t\tif (props && props.length > 0) {\r\n\t\t\troute = `${route}&`\r\n\t\t\tprops.filter(x => params[x] !== null && params[x] !== undefined).forEach(prop => route = `${route}${prop}=${params[prop]}&`);\r\n\t\t\troute = route.substr(0, route.length - 1);\r\n\t\t}\r\n\t}\r\n\treturn route;\r\n}\r\n\r\nconst pluginRoute = (route, params) => {\r\n\treturn compileRoute(`${_wpApAdminSettings.internalAPIUrl}myfastapp/v1/${route}`, params);\r\n}\r\n\r\nconst azureRoute = (route, params) => {\r\n\treturn compileRoute(`${_wpApAdminSettings.externalAPIUrl}${route}`, params);\r\n}\r\n\r\nconst wordpressRoute = (route, params) => {\r\n\treturn compileRouteWP(`${_wpApAdminSettings.internalAPIUrl}wp/v2/${route}`, params);\r\n}\r\n\r\n\r\nexport const ApiRoutes = {\r\n\tPlugin: {\r\n\t\tGetSettings                : (params) => pluginRoute(\"settings\"\t\t\t\t\t  , params),\r\n\t\tUpdateSettings             : (      ) => pluginRoute(\"settings\"\t\t\t\t\t\t\t\t ),\r\n\t\tGetMenuItems               : (params) => pluginRoute(\"menuItems\"\t\t\t\t\t  , params),\r\n\t\tUpdateMenuItems            : (      ) => pluginRoute(\"menuItems\"\t\t\t\t\t\t\t\t ),\r\n\t\tResetSettings              : (      ) => pluginRoute(\"resetSettings\"\t\t\t\t\t\t\t ),\r\n\t\tGetAppConfig               : (params) => pluginRoute(\"mfa-config2\"\t\t\t\t  , params),\r\n\t\tCheckPendingConfigChanges  : (params) => pluginRoute(\"checkPendingConfigChanges\", params),\r\n\t\tUpdateLiveConfig\t\t\t\t: (      ) => pluginRoute(\"updateLiveConfig\"\t\t\t\t\t\t ),\r\n\t\tUpdateAppConfig\t\t\t\t: (      ) => pluginRoute(\"updateAppConfig\"\t\t\t\t\t\t )\r\n\t},\r\n\tAzure: {\r\n\t\tGetTodaySalt\t\t\t\t\t: (params) => azureRoute(\"PLG_GetBuildSalt\"\t\t\t  , params),\r\n\t\tGetBuilds\t\t\t\t\t   : (params) => azureRoute(\"PLG_GetBuildInfo\"\t\t\t  , params),\r\n\t\tCheckLicense\t\t\t\t   : (params) => azureRoute(\"PLG_CheckLicense\"\t\t\t  , params),\r\n\t\tCreateBuild\t\t\t\t\t\t: (params) => azureRoute(\"PLG_CreateBuild\"\t\t\t  , params),\r\n\t\t//-- da rimuovere\r\n\t\tCreateAppleCertificates\t\t: (\t\t) => azureRoute(\"CreateAppleCertificates\"\t\t\t\t ),\r\n\t\tCreateGoogleCertificates\t: (\t\t) => azureRoute(\"CreateGoogleCertificates\"\t\t\t ) \r\n\t\t//--\r\n\t},\r\n\tWordpress: {\r\n\t\tGetCategories\t\t\t\t\t: (params) => wordpressRoute(\"categories\", params),\r\n\t\tGetPages\t\t\t\t\t\t\t: (params) => wordpressRoute(\"pages\"\t  , params),\r\n\t},\r\n\tFontAwesome: {\r\n\t\tGetIconClasses\t\t\t\t\t: 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'\r\n\t},\r\n}\r\n\r\nexport const RestApiContext = React.createContext(null);\r\n\r\nconst { Provider } = RestApiContext;\r\nexport const RestApiProvider = ({ ...props }) => {\r\n\tconst { fetchAuthorized, fetchWpAuthorized } = useContext(FetchContext);\r\n\tconst [state, setState] = useAggregatedState({\r\n\t});\r\n\r\n\tconst sleep = (ms) => {\r\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\r\n\t}\r\n\r\n\tconst btoaSafe = (value) => {\r\n\t\treturn btoa(value).replace(/\\+/g, '-').replace(/\\//g, '_');\r\n\t}\r\n\r\n\tfunction safeEncode(json1) {\r\n\t\tvar data1 = stringToHex(json1);\r\n\t\tvar data2 = { envelope: data1 };\r\n\t\tvar json2 = JSON.stringify(data2);\r\n\t\treturn json2;\r\n\t}\r\n\r\n\tfunction stringToHex(str) {\r\n\t\tlet hex = '';\r\n\t\tfor (let i = 0; i < str.length; i++) hex += ('0' + str.charCodeAt(i).toString(16)).slice(-2);\r\n\t\treturn hex;\r\n\t}\r\n\r\n\t/* --- Plugin ------------------- */\r\n\r\n\tconst getSettingsAsync = async () => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Plugin.GetSettings(), {\r\n\t\t\tmethod: HttpMethods.GET\r\n\t\t});\r\n\t\tconst settings = await r.json();\r\n\t\treturn settings;\r\n\t}\r\n\r\n\tconst updateSettingsAsync = async ({ settings }) => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Plugin.UpdateSettings(), {\r\n\t\t\tmethod: HttpMethods.POST,\r\n\t\t\tbody: safeEncode(JSON.stringify(settings))\r\n\t\t});\r\n\t}\r\n\r\n\tconst getMenuItemsAsync = async () => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Plugin.GetMenuItems(), {\r\n\t\t\tmethod: HttpMethods.GET\r\n\t\t});\r\n\t\tconst menuItems = await r.json();\r\n\t\treturn menuItems;\r\n\t}\r\n\r\n\tconst updateMenuItemsAsync = async ({ menuItems }) => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Plugin.UpdateMenuItems(), {\r\n\t\t\tmethod: HttpMethods.POST,\r\n\t\t\tbody: safeEncode(JSON.stringify(menuItems))\r\n\t\t});\r\n\t}\r\n\r\n\tconst resetSettingsAsync = async () => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Plugin.ResetSettings(), {\r\n\t\t\tmethod: HttpMethods.DELETE\r\n\t\t});\r\n\t}\r\n\r\n\tconst getAppConfigAsync = async () => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Plugin.GetAppConfig(), {\r\n\t\t\tmethod: HttpMethods.GET\r\n\t\t});\r\n\t\tconst config = await r.json();\r\n\t\treturn config;\r\n\t}\r\n\r\n\tconst checkConfigChangesAsync = async () => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Plugin.CheckPendingConfigChanges(), {\r\n\t\t\tmethod: HttpMethods.GET\r\n\t\t});\r\n\t\tconst configStatus = await r.json();\r\n\t\treturn configStatus;\r\n\t}\r\n\r\n\tconst updateLiveConfigAsync = async () => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Plugin.UpdateLiveConfig(), {\r\n\t\t\tmethod: HttpMethods.POST\r\n\t\t});\r\n\t\tconst storedFile = await r.json();\r\n\t\treturn storedFile;\r\n\t}\r\n\r\n\tconst updateAppConfigAsync = async () => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Plugin.UpdateAppConfig(), {\r\n\t\t\tmethod: HttpMethods.POST\r\n\t\t});\r\n\t\tconst storedFile = await r.json();\r\n\t\treturn storedFile;\r\n\t}\r\n\r\n\t/* --- Azure ------------------- */\r\n\r\n\tconst getTodaySaltAsync = async () => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Azure.GetTodaySalt(), {\r\n\t\t\tmethod: HttpMethods.GET\r\n\t\t});\r\n\t\tconst base64Salt = await r.text();\r\n\t\treturn atob(base64Salt);\r\n\t}\r\n\r\n\tconst getEncryptedTextAsync = async (salt, text) => {\r\n\t\tconst key = enc.Utf8.parse(salt);\r\n\t\tconst iv = enc.Utf8.parse(salt);\r\n\t\ttext = AES.encrypt(enc.Utf8.parse(text), key,\r\n\t\t\t{\r\n\t\t\t\tkeySize: 128 / 8,\r\n\t\t\t\tiv: iv,\r\n\t\t\t\tmode: mode.CBC,\r\n\t\t\t\tpadding: pad.Pkcs7\r\n\t\t\t}).toString();\r\n\r\n\t\treturn text;\r\n\t}\r\n\r\n\tconst getBuildsAsync = async () => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Azure.GetBuilds(), {\r\n\t\t\tmethod: HttpMethods.GET\r\n\t\t});\r\n\t\tconst bundle = await r.json();\r\n\t\treturn bundle;\r\n\t}\r\n\r\n\tconst getLiveViewerQrCodeAsync = async () => {\r\n\t\tlet qrCodeInfo = {\r\n\t\t\tconfigUrl: _wpApAdminSettings.siteUrl\r\n\t\t};\r\n\t\treturn qrCodeInfo;\r\n\t}\r\n\r\n\tconst checkLicenseAsync = async () => {\r\n\r\n\t\t/*\r\n\t\t\tNotFound  = 0,\r\n\t\t\tActive\t = 1,\r\n\t\t\tExpired\t = 2\r\n\t\t*/\r\n\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Azure.CheckLicense(), {\r\n\t\t\tmethod: HttpMethods.GET\r\n\t\t});\r\n\t\tconst license = await r.json();\r\n\t\treturn license;\r\n\t}\r\n\r\n\tconst createBuildAsync = async (buildConfig) => {\r\n\t\tconst todaySalt = await getTodaySaltAsync();\r\n\t\tconst p12Password = await getEncryptedTextAsync(todaySalt, buildConfig.iOS.p12Password);\r\n\t\tconst keyStoreAlias = await getEncryptedTextAsync(todaySalt, buildConfig.android.keyAlias);\r\n\t\tconst keyStorePassword = await getEncryptedTextAsync(todaySalt, buildConfig.android.keyPassword);\r\n\t\tbuildConfig = {\r\n\t\t\t...buildConfig,\r\n\t\t\tiOS: {\r\n\t\t\t\t...(buildConfig.iOS),\r\n\t\t\t\tp12Password: btoaSafe(p12Password)\r\n\t\t\t},\r\n\t\t\tandroid: {\r\n\t\t\t\t...(buildConfig.android),\r\n\t\t\t\tkeyAlias: btoaSafe(keyStoreAlias),\r\n\t\t\t\tkeyPassword: btoaSafe(keyStorePassword)\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Azure.CreateBuild(), {\r\n\t\t\tmethod: HttpMethods.POST,\r\n\t\t\tbody: JSON.stringify(buildConfig)\r\n\t\t});\r\n\t\tconst buildStatus = await r.json();\r\n\t\treturn buildStatus;\r\n\t}\r\n\r\n\tconst createAppleCertsAsync = async ({ keyId, teamId, email, bundleId, adminEmail }) => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Azure.CreateAppleCertificates(), {\r\n\t\t\tmethod: HttpMethods.POST,\r\n\t\t\tbody: JSON.stringify({ keyId, teamId, email, bundleId, adminEmail })\r\n\t\t});\r\n\t\tconst certsInfo = await r.json();\r\n\t\treturn certsInfo;\r\n\t}\r\n\r\n\tconst createGoogleCertsAsync = async ({ keystoreAlias, email, bundleId, adminEmail }) => {\r\n\t\tconst r = await fetchAuthorized(ApiRoutes.Azure.CreateGoogleCertificates(), {\r\n\t\t\tmethod: HttpMethods.POST,\r\n\t\t\tbody: JSON.stringify({ keystoreAlias, email, bundleId, adminEmail })\r\n\t\t});\r\n\t\tconst certsInfo = await r.json();\r\n\t\treturn certsInfo;\r\n\t}\r\n\r\n\t/* --- Wordpress ------------------- */\r\n\r\n\tconst getWordPressCategoriesAsync = async (page = 1, perPage = 100) => {\r\n\t\tconst r = await fetchWpAuthorized(ApiRoutes.Wordpress.GetCategories({ page, per_page: perPage, orderBy: \"name\", order: \"asc\" }), {\r\n\t\t\tmethod: HttpMethods.GET\r\n\t\t});\r\n\t\tconst categories = await r.json();\r\n\t\treturn categories;\r\n\t}\r\n\r\n\tconst getWordPressPagesAsync = async (page = 1, perPage = 100) => {\r\n\t\tconst r = await fetchWpAuthorized(ApiRoutes.Wordpress.GetPages({ page, per_page: perPage }), {\r\n\t\t\tmethod: HttpMethods.GET\r\n\t\t});\r\n\t\tconst pages = await r.json();\r\n\t\treturn pages;\r\n\t}\r\n\r\n\t/* --- FontAwesome ------------------- */\r\n\r\n\tconst getIconClassesAsync = async () => {\r\n\r\n\t\tconst r = await fetch(ApiRoutes.FontAwesome.GetIconClasses, {\r\n\t\t\tmethod: HttpMethods.GET\r\n\t\t});\r\n\r\n\t\tconst icons = (await r.text())\r\n\t\t\t.split(\".fa\")\r\n\t\t\t.filter(x => x.includes(\"content\"))\r\n\t\t\t.map(x => ({\r\n\t\t\t\tcssClass: \"fa fa\" + x.split(\":\")[0],\r\n\t\t\t\tcode: x.split(\":\")[2].substr(2, 4)\r\n\t\t\t}));\r\n\r\n\t\treturn icons;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Provider value={{\r\n\t\t\t// Plugin\r\n\t\t\tgetSettingsAsync,\r\n\t\t\tupdateSettingsAsync,\r\n\t\t\tgetMenuItemsAsync,\r\n\t\t\tupdateMenuItemsAsync,\r\n\t\t\tresetSettingsAsync,\r\n\t\t\tgetAppConfigAsync,\r\n\t\t\tcheckConfigChangesAsync,\r\n\t\t\tupdateLiveConfigAsync,\r\n\t\t\tupdateAppConfigAsync,\r\n\t\t\tgetIconClassesAsync,\r\n\t\t\tgetBuildsAsync,\r\n\t\t\t// Azure\r\n\t\t\tcheckLicenseAsync,\r\n\t\t\tgetLiveViewerQrCodeAsync,\r\n\t\t\tgetBuildsAsync,\r\n\t\t\tcreateBuildAsync,\r\n\t\t\tcreateAppleCertsAsync,\r\n\t\t\tcreateGoogleCertsAsync,\r\n\t\t\t// Wordpress\r\n\t\t\tgetWordPressCategoriesAsync,\r\n\t\t\tgetWordPressPagesAsync,\r\n\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</Provider>\r\n\t);\r\n}","import React, { useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    IconButton,\r\n    Typography,\r\n    Button,\r\n    Grid,\r\n    Input,\r\n    Paper,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\nimport { getColoredBottonStyle } from '../../helpers';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    search: {\r\n        flexGrow: 1,\r\n        height: 42,\r\n        padding: theme.spacing(0, 2),\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    searchIcon: {\r\n        marginRight: theme.spacing(2),\r\n        color: theme.palette.icon\r\n    },\r\n    searchInput: {\r\n        flexGrow: 1\r\n    },\r\n    searchButton: {\r\n        backgroundColor: theme.palette.common.white,\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    searchAllign: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    addButton: {\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    saveButton: {\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    cancelButton: {\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    actionButton1: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    actionButton2: {\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport const PageHeader = ({\r\n    title,\r\n    subtitle,\r\n    search,\r\n    onSearchClick,\r\n    add,\r\n    addButtonText,\r\n    onAddClick,\r\n    save,\r\n    saveButtonText,\r\n    onSaveClick,\r\n    cancel,\r\n    cancelButtonText,\r\n    onCancelClick,\r\n    action1,\r\n    action1StartIcon,\r\n    action1ButtonText,\r\n    action1Disabled,\r\n    onAction1Click,\r\n    action2,\r\n    action2StartIcon,\r\n    action2ButtonText,\r\n    action2Disabled,\r\n    onAction2Click,\r\n    disabled,\r\n    ...props\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const searchClickHandler = () => {\r\n        if (onSearchClick) onSearchClick(searchText);\r\n    }\r\n\r\n    const clearClickHandler = () => {\r\n        setSearchText(\"\");\r\n        if (onSearchClick) onSearchClick(\"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid\r\n                alignItems=\"center\"\r\n                container\r\n                justify=\"space-between\"\r\n                className={clsx(classes.root, props.className)}>\r\n                <Grid item>\r\n                    <Typography\r\n                        component=\"h2\"\r\n                        variant=\"overline\">\r\n                        {subtitle ?? \"Subtitle\"}\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h5\"\r\n                        gutterBottom>\r\n                        {title ?? \"Title\"}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container>\r\n                        {action1 &&\r\n                            <Grid item>\r\n                                <Button\r\n                                    className={classes.actionButton1}\r\n                                    color=\"default\"\r\n                                    size=\"large\"\r\n                                    variant=\"contained\"\r\n                                    startIcon={action1StartIcon}\r\n                                    disabled={disabled || action1Disabled}\r\n                                    onClick={onAction1Click}>\r\n                                    {action1ButtonText ?? \"Action 1\"}\r\n                                </Button>\r\n                            </Grid>\r\n                        }\r\n                        {action2 &&\r\n                            <Grid item>\r\n                                <Button\r\n                                    className={classes.actionButton2}\r\n                                    color=\"default\"\r\n                                    startIcon={action2StartIcon}\r\n                                    size=\"large\"\r\n                                    variant=\"contained\"\r\n                                    disabled={disabled || action2Disabled}\r\n                                    onClick={onAction2Click}>\r\n                                    {action2ButtonText ?? \"Action 1\"}\r\n                                </Button>\r\n                            </Grid>\r\n                        }\r\n                        {cancel &&\r\n                            <Grid item>\r\n                                <Button\r\n                                    className={classes.cancelButton}\r\n                                    color=\"secondary\"\r\n                                    onClick={onCancelClick}\r\n                                    size=\"large\"\r\n                                    variant=\"contained\"\r\n                                    disabled={disabled}>\r\n                                    {cancelButtonText ?? \"Cancel\"}\r\n                                </Button>\r\n                            </Grid>\r\n                        }\r\n                        {add &&\r\n                            <Grid item>\r\n                                <Button\r\n                                    className={classes.addButton}\r\n                                    color=\"primary\"\r\n                                    onClick={onAddClick}\r\n                                    size=\"large\"\r\n                                    variant=\"contained\"\r\n                                    disabled={disabled}>\r\n                                    {addButtonText ?? \"Add New\"}\r\n                                </Button>\r\n                            </Grid>\r\n                        }\r\n                        {save &&\r\n                            <Grid item>\r\n                                <Button\r\n                                    className={classes.saveButton}\r\n                                    color=\"primary\"\r\n                                    onClick={onSaveClick}\r\n                                    size=\"large\"\r\n                                    variant=\"contained\"\r\n                                    disabled={disabled}>\r\n                                    {saveButtonText ?? \"Save Changes\"}\r\n                                </Button>\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                alignItems=\"flex-end\"\r\n                justify=\"space-between\"\r\n                spacing={3}>\r\n                {search &&\r\n                    <Grid item>\r\n                        <div className={classes.searchAllign}>\r\n                            <Paper\r\n                                className={classes.search}\r\n                                elevation={1}>\r\n                                <SearchIcon className={classes.searchIcon} />\r\n                                <Input\r\n                                    className={classes.searchInput}\r\n                                    disableUnderline\r\n                                    placeholder=\"Search\"\r\n                                    value={searchText}\r\n                                    disabled={disabled}\r\n                                    onChange={e => setSearchText(e.target.value)}\r\n                                />\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    disabled={disabled}\r\n                                    onClick={() => clearClickHandler()}>\r\n                                    <CloseRoundedIcon />\r\n                                </IconButton>\r\n                            </Paper>\r\n                            <Button\r\n                                className={classes.searchButton}\r\n                                onClick={() => searchClickHandler()}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                disabled={disabled}>\r\n                                Search\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Grid,\r\n    Link,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport { PluginContext } from '../contexts/PluginContext';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    }\r\n}));\r\n\r\nexport const PageFooter = ({ ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        plugin\r\n    } = useContext(PluginContext);\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            className={clsx(classes.root, props.className)}>\r\n            <Grid item style={{ marginTop: 32 }}>\r\n                Version <strong>{plugin.pluginVersion}</strong> Copyright 2024 by <Link href=\"https://teamonair.com/\">Teamonair.com</Link>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { Transition } from 'react-transition-group';\r\n\r\nimport {\r\n    IconButton,\r\n    Tooltip,\r\n    Zoom,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"inline-flex\",\r\n        alignContent: \"center\",\r\n        justifyContent: \"center\",\r\n        transition: \"width 200ms ease-in-out\"\r\n    },\r\n    dangerousButton: {\r\n        color: colors.red[500]\r\n    },\r\n    confirmButton: {\r\n        color: colors.green[500]\r\n    },\r\n}));\r\n\r\nconst transitionStyles = {\r\n    entering: { width: \"100px\" },\r\n    entered: { width: \"100px\" },\r\n    exiting: { width: \"48px\" },\r\n    exited: { width: \"48px\" },\r\n};\r\n\r\nexport const ConfirmIconButton = ({\r\n    icon,\r\n    tooltip,\r\n    confirmTooltip,\r\n    cancelTooltip,\r\n    dangerous,\r\n    vertical,\r\n    disabled,\r\n    onClick,\r\n    ...props }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [askConfirm, setAskConfirm] = useState(false);\r\n\r\n    const onConfirmClick = (e) => {\r\n        setAskConfirm(false);\r\n        if (onClick) onClick(e);\r\n    }\r\n\r\n    return (\r\n        <Transition in={askConfirm} timeout={200}>\r\n            {state =>\r\n                <div\r\n                    className={clsx(classes.root, props.className)}\r\n                    style={{ ...transitionStyles[state] }}>\r\n                    <Zoom\r\n                        mountOnEnter\r\n                        unmountOnExit\r\n                        in={!askConfirm}\r\n                        timeout={{ appear: 300, enter: 300, exit: 0 }} >\r\n                        <Tooltip title={tooltip}>\r\n                            <span>\r\n                                <IconButton\r\n                                    className={dangerous ? classes.dangerousButton : classes.actionButton}\r\n                                    aria-label={tooltip}\r\n                                    disabled={disabled}\r\n                                    onClick={() => setAskConfirm(!askConfirm)}>\r\n                                    {icon}\r\n                                </IconButton>\r\n                            </span>\r\n                        </Tooltip>\r\n                    </Zoom>\r\n                    <Zoom\r\n                        mountOnEnter\r\n                        unmountOnExit\r\n                        in={askConfirm}\r\n                        timeout={{ appear: 300, enter: 300, exit: 0 }}>\r\n                        <Tooltip title={confirmTooltip || \"confirm\"}>\r\n                            <span>\r\n                                <IconButton\r\n                                    className={classes.confirmButton}\r\n                                    aria-label={confirmTooltip || \"confirm\"}\r\n                                    disabled={disabled}\r\n                                    onClick={onConfirmClick}>\r\n                                    <CheckIcon />\r\n                                </IconButton>\r\n                            </span>\r\n                        </Tooltip>\r\n                    </Zoom>\r\n                    <Zoom\r\n                        mountOnEnter\r\n                        unmountOnExit\r\n                        in={askConfirm}\r\n                        timeout={{ appear: 300, enter: 300, exit: 0 }}>\r\n                        <Tooltip title={cancelTooltip || \"cancel\"}>\r\n                            <span>\r\n                                <IconButton\r\n                                    aria-label={cancelTooltip || \"cancel\"}\r\n                                    disabled={disabled}\r\n                                    onClick={() => setAskConfirm(false)}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </span>\r\n                        </Tooltip>\r\n                    </Zoom>\r\n                </div>\r\n            }\r\n        </Transition>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    IconButton,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    }\r\n}));\r\n\r\nexport const ContainedIconButton = withStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText(colors.grey[300]),\r\n      backgroundColor: colors.grey[300],\r\n      '&:hover': {\r\n        backgroundColor: colors.grey[400],\r\n      },\r\n    },\r\n}))(IconButton);","import React, { useContext, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n    Typography,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        color: colors.red[500]\r\n    }\r\n}));\r\n\r\nexport const FieldError = ({ name, errors, ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    useEffect(() => {\r\n        if (errors\r\n            && errors.length > 0\r\n            && name !== null\r\n            && name !== undefined\r\n            && name.length > 0) {\r\n\r\n            //console.debug(name);\r\n            for (let i = 0; i < errors.length; i++) {\r\n                const error = errors[i];\r\n                let errorId = error.errorId;\r\n                if (errorId.includes(\".\")) {\r\n                    errorId = errorId.split(\".\").map(x => x.includes(\"[\") ? x : _.camelCase(x)).join(\".\");\r\n                } else {\r\n                    errorId = _.camelCase(errorId);\r\n                }\r\n                let normalizedName = name;\r\n                if (normalizedName.includes(\".\")) {\r\n                    normalizedName = normalizedName.split(\".\").map(x => x.includes(\"[\") ? x : _.camelCase(x)).join(\".\");\r\n                } else {\r\n                    normalizedName = _.camelCase(normalizedName);\r\n                }\r\n                //console.debug(`${errorId} -> ${_.camelCase(name)}`);\r\n                if (errorId === normalizedName) {\r\n                    setIsVisible(true);\r\n                    setErrorMessage(error.message);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // No error to show\r\n            setIsVisible(false);\r\n            setErrorMessage(null);\r\n\r\n        } else {\r\n            // No error to show\r\n            setIsVisible(false);\r\n            setErrorMessage(null);\r\n        }\r\n    }, [errors, name])\r\n\r\n    return (\r\n        <>\r\n            {isVisible &&\r\n                <Typography variant=\"caption\" component=\"span\" gutterBottom className={clsx(classes.root, props.className)}>\r\n                    {errorMessage}\r\n                </Typography>\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport AsyncSelect from 'react-select/async'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    asyncSelect: {\r\n        backgroundColor: theme.primary\r\n    }\r\n}));\r\n\r\nexport const SelectAsync = ({\r\n    label,\r\n    placeholder,\r\n    loadOptions,\r\n    getOptionLabel,\r\n    getOptionValue,\r\n    value,\r\n    delay,\r\n    disabled,\r\n    onChange,\r\n    onBlur,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    // We use lodash debounce to avoid gazillion of request\r\n    // We use the old fashion promise way because react select + debounce \r\n    // seems to work well only when using promises :(\r\n    //\r\n    // https://github.com/JedWatson/react-select/issues/3075\r\n    //\r\n    // We also use the useCallback for the reason below\r\n    // https://rajeshnaroth.medium.com/using-throttle-and-debounce-in-a-react-function-component-5489fc3461b3\r\n    const loadData = useCallback(_.debounce((value, callback) => {\r\n        if (loadOptions) loadOptions(value, callback);\r\n        else callback([]);\r\n    }, 500), []);\r\n\r\n    return (\r\n        <>\r\n            {label &&\r\n                <Typography variant=\"overline\">{label}</Typography>\r\n            }\r\n            <AsyncSelect\r\n                {...props}\r\n                isClearable\r\n                placeholder={placeholder || \"Type to search...\"}\r\n                loadOptions={loadData}\r\n                menuPortalTarget={document.body}\r\n                styles={{\r\n                    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n                    // control: (base, state) => ({ ...base, '&:hover': { borderColor: state.isFocused ? '#7957D5' : '#000000', boxShadow: '' }, borderColor: state.isFocused ? '#7957D5' : 'hsl(0, 0%, 80%)', borderWidth: 2, boxShadow: state.isFocused ? '' : '' }),\r\n\r\n                }}\r\n                theme={stheme => ({\r\n                    ...stheme,\r\n                    colors: {\r\n                        ...stheme.colors,\r\n                        primary: theme.palette.primary.main,\r\n                    },\r\n                })}\r\n                getOptionLabel={getOptionLabel}\r\n                getOptionValue={getOptionValue}\r\n                value={value}\r\n                isDisabled={disabled}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                className={classes.asyncSelect}\r\n                style={{ backgroundColor: theme.palette.primary.main }}\r\n            />\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexGrow: 0,\r\n        flexShrink: 0,\r\n        borderRadius: 2,\r\n        lineHeight: '10px',\r\n        fontSize: '10px',\r\n        height: 20,\r\n        minWidth: 20,\r\n        whiteSpace: 'nowrap',\r\n        padding: theme.spacing(0.5, 1)\r\n    },\r\n    rounded: {\r\n        borderRadius: 10,\r\n        padding: theme.spacing(0.5)\r\n    }\r\n}));\r\n\r\nexport const Label = ({\r\n    className,\r\n    variant,\r\n    color,\r\n    shape,\r\n    children,\r\n    style,\r\n    ...rest\r\n}) => {\r\n    const classes = useStyles();\r\n    const rootClassName = clsx(\r\n        {\r\n            [classes.root]: true,\r\n            [classes.rounded]: shape === 'rounded'\r\n        }, className);\r\n\r\n    const finalStyle = { ...style };\r\n\r\n    if (variant === 'contained') {\r\n        finalStyle.backgroundColor = color;\r\n        finalStyle.color = '#FFF';\r\n    } else {\r\n        finalStyle.border = `1px solid ${color}`;\r\n        finalStyle.color = color;\r\n    }\r\n\r\n    return (\r\n        <Typography\r\n            {...rest}\r\n            className={rootClassName}\r\n            style={finalStyle}\r\n            variant=\"overline\">\r\n            {children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nLabel.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    shape: PropTypes.oneOf(['square', 'rounded']),\r\n    style: PropTypes.object,\r\n    variant: PropTypes.oneOf(['contained', 'outlined'])\r\n};\r\n\r\nLabel.defaultProps = {\r\n    style: {},\r\n    color: colors.grey[600],\r\n    variant: 'contained',\r\n    shape: 'square'\r\n};","import React, { useState, useCallback, useContext, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport {\r\n    Button,\r\n    IconButton,\r\n    Link,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Typography,\r\n    Tooltip,\r\n    CircularProgress,\r\n    colors,\r\n    Paper,\r\n} from '@material-ui/core';\r\n\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n    },\r\n    dropZone: {\r\n        border: \"1px\",\r\n        padding: \"8px\",\r\n        outline: \"none\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        backgroundColor: \"#e1e1e1\",\r\n        opacity: 1,\r\n        \"&:hover\": {\r\n            backgroundColor: \"#f1f1f1\",\r\n            opacity: 1,\r\n            cursor: \"pointer\"\r\n        }\r\n    },\r\n    dragActive: {\r\n        backgroundColor: colors.grey[50],\r\n        opacity: 0.5,\r\n    },\r\n    disabled: {\r\n        border: \"1px\",\r\n        padding: \"8px\",\r\n        outline: \"none\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        backgroundColor: \"#e1e1e1\",\r\n        opacity: 1,\r\n        borderColor: \"#B8B8B8\",\r\n        color: \"#B8B8B8\"\r\n    },\r\n    item: {\r\n    },\r\n    image: {\r\n        width: 130\r\n    },\r\n    info: {\r\n        marginTop: 1,\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        width: '100%'\r\n    },\r\n    list: {\r\n    },\r\n    thumbnail: {\r\n        width: \"48px\",\r\n        height: \"48px\",\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    actions: {\r\n        marginTop: 2,\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        \"& > * + *\": {\r\n            marginLeft: 2\r\n        }\r\n    },\r\n    removeButton: {\r\n        marginRight: 10\r\n    }\r\n}));\r\n\r\nexport const UploadFile = ({\r\n    height,\r\n    title,\r\n    singleFile,\r\n    dataField,\r\n    disabled,\r\n    upload,\r\n    onFileDrop,\r\n    onFileUploaded,\r\n    helpText,\r\n    uploadOnDrop,\r\n    uploadButtonText,\r\n    removeButtonText,\r\n    removeAllButtonText,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const [files, setFiles] = useState([]);\r\n\r\n    const handleDrop = useCallback((acceptedFiles) => {\r\n        if (onFileDrop && !onFileDrop(acceptedFiles)) {\r\n            return;\r\n        }\r\n        setFiles((prevFiles) => {\r\n            if (singleFile) return [].concat(acceptedFiles[0]);\r\n            else return [...prevFiles].concat(acceptedFiles);\r\n        });\r\n    }, []);\r\n\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const uploadAllFilesClickHandler = async () => {\r\n\r\n        setIsUploading(true);\r\n        for (const file of files) {\r\n            try {\r\n                const data = new FormData();\r\n                data.append(dataField ?? \"file\", file);\r\n                if (upload) {\r\n                    const success = await upload(data, file);\r\n                    if (!success) throw \"Unable to upload file\";\r\n                }\r\n                setFiles((prevFiles) => [...prevFiles].filter(x => x.name !== file.name));\r\n                if (onFileUploaded) onFileUploaded(file, true);\r\n\r\n            } catch (e) {\r\n                if (onFileUploaded) onFileUploaded(file, false);\r\n                console.debug(e);\r\n            }\r\n        }\r\n\r\n        setIsUploading(false);\r\n    }\r\n\r\n    const removeFileClickHandler = (index) => {\r\n        const newFiles = [].concat(files)\r\n        newFiles.splice(index, 1)\r\n        setFiles(newFiles)\r\n    }\r\n\r\n    const removeAllFilesClickHandler = () => {\r\n        setFiles([])\r\n    }\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive\r\n    } = useDropzone({ onDrop: handleDrop, disabled });\r\n\r\n    useEffect(() => {\r\n        if (uploadOnDrop && files && files.length > 0) {\r\n            uploadAllFilesClickHandler();\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <div style={{ zIndex: 100, maxWidth: \"100%\" }}>\r\n            <div\r\n                className={clsx({\r\n                    [classes.dropZone]: true && !disabled,\r\n                    [classes.dragActive]: isDragActive && !disabled,\r\n                    [classes.disabled]: disabled\r\n                })}\r\n                {...getRootProps()}\r\n                style={{ borderStyle: 'dashed', borderWidth: 1, borderRadius: 10, height: height ? height : 100, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <input {...getInputProps()} />\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', alignContent: 'center', justifyContent: 'center', width: '100%' }}>\r\n                    <Typography\r\n                        className={classes.info}\r\n                        gutterBottom\r\n                        variant='h6'\r\n                        align='center'\r\n                        noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                    <CloudUploadIcon />\r\n                    <Typography\r\n                        className={classes.info}\r\n                        variant='body1'\r\n                        align='center'\r\n                        noWrap>\r\n                        {helpText ?? <>Drop files here or click <Link color=\"inherit\" underline=\"always\">browse</Link> thorough your machine</>}\r\n                    </Typography>\r\n                </div>\r\n\r\n            </div>\r\n            {\r\n                !uploadOnDrop && files && files.length > 0 && (\r\n                    <>\r\n                        <List className={classes.list}>\r\n                            {files.map((file, i) => (\r\n                                <ListItem\r\n                                    disableGutters\r\n                                    className={classes.item}\r\n                                    divider={i < files.length - 1}\r\n                                    key={i}>\r\n                                    <ListItemIcon>\r\n                                        {!isUploading ?\r\n                                            <PublishIcon />\r\n                                            :\r\n                                            <CircularProgress size=\"1.6em\" color=\"primary\" />\r\n                                        }\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={file.name}\r\n                                        primaryTypographyProps={{ variant: 'body1' }}\r\n                                    />\r\n                                    {!isUploading && !singleFile &&\r\n                                        <Tooltip title={removeButtonText ?? \"Remove\"}>\r\n                                            <IconButton\r\n                                                color=\"primary\"\r\n                                                edge=\"end\"\r\n                                                onClick={() => removeFileClickHandler(i)}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    }\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                        <div className={classes.actions}>\r\n                            {!singleFile &&\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    className={classes.removeButton}\r\n                                    size=\"small\"\r\n                                    disabled={disabled && isUploading}\r\n                                    onClick={removeAllFilesClickHandler}>\r\n                                    {removeAllButtonText ?? \"Remove All\"}\r\n                                </Button>\r\n                            }\r\n                            <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                disabled={disabled && isUploading}\r\n                                onClick={uploadAllFilesClickHandler}>\r\n                                {uploadButtonText ?? \"Upload\"}\r\n                            </Button>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </div >\r\n    );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    IconButton,\r\n    Button,\r\n    colors,\r\n    Dialog,\r\n    Paper,\r\n    TextField,\r\n    InputAdornment,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    hover: {\r\n        border: \"1px solid #000!important\",\r\n    },\r\n    open: {\r\n        height: \"52px !important\",\r\n        border: \"2px solid #7957D5!important\",\r\n    },\r\n    normal: {\r\n        width: \"100%\",\r\n        height: 54,\r\n        fontSize: 36,\r\n        borderRadius: 4,\r\n        cursor: \"pointer\",\r\n        border: \"1px solid #ccc\",\r\n        textAlign: \"center\",\r\n    }\r\n}));\r\n\r\nexport const IconPicker = ({\r\n    icons,\r\n    value,\r\n    handleChange,\r\n    titleText,\r\n    disabled,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [hover, setHover] = useState(false);\r\n\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [filteredIcons, setFilteredIcons] = useState(icons ? [...icons] : []);\r\n\r\n    const divClickHandler = () => {\r\n        if (!disabled) setOpen(true)\r\n    }\r\n\r\n    const iconClickHandler = async (icon) => {\r\n        if (handleChange)\r\n            handleChange(icon);\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFilteredIcons((icons ?? []).filter(icon => icon.cssClass.substring(3, icon.cssClass.length).includes(searchText ?? \"\")))\r\n    }, [searchText])\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={clsx(classes.normal, hover && classes.hover, open && classes.open, props.className)}\r\n                onMouseOver={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}\r\n                onClick={() => divClickHandler()} >\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"space-between\">\r\n                    <Grid\r\n                        container\r\n                        item xs=\"auto\"\r\n                        justify=\"center\">\r\n                        <i className={value} style={{ padding: 9 }} />\r\n                    </Grid>\r\n                    {/* <Grid item xs=\"auto\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            disableElevation\r\n                            disabled={disabled}\r\n                            style={{ width: 54, height: 54, borderBottomLeftRadius: 0, borderTopLeftRadius: 0 }}>\r\n                            <SearchIcon />\r\n                        </Button>\r\n                    </Grid> */}\r\n                </Grid>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                style={{ maxHeight: \"80vh\", margin: \"auto\" }}>\r\n                <Paper style={{ minWidth: 580 }}>\r\n                    <div style={{ margin: 4 }}>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            align=\"center\"\r\n                            gutterBottom\r\n                            style={{ color: \"#727272\" }}>\r\n                            {titleText ?? \"Pick an icon\"}\r\n                        </Typography>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                                endAdornment:\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton>\r\n                                            <SearchIcon />\r\n                                        </IconButton>\r\n                                    </InputAdornment>,\r\n                            }}\r\n                            style={{ padding: 8, width: 556 }}\r\n                            onChange={(e) => { setSearchText(e.target.value) }}\r\n                        >\r\n\r\n                        </TextField>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Grid container>\r\n                                    {!filteredIcons || filteredIcons.length === 0 &&\r\n                                        <Grid item xs=\"12\">\r\n                                            <Typography align=\"center\" style={{ padding: 32 }}>\r\n                                                No icons available\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    }\r\n                                    {(filteredIcons ?? []).map(icon =>\r\n                                        <Grid\r\n                                            key={icon.code}\r\n                                            item\r\n                                            style={{ width: 48, fontSize: 48, margin: 2, display: \"flex\", alignItems: \"center\" }}>\r\n                                            <IconButton\r\n                                                style={{ width: 48, }}\r\n                                                disabled={disabled}\r\n                                                onClick={() => iconClickHandler(icon)}>\r\n                                                <i className={icon.cssClass} />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Paper>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useContext, useState, cloneElement } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Avatar\r\n} from '@material-ui/core';\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    avatar: {\r\n    }\r\n}));\r\n\r\nexport const AvatarSkeleton = ({\r\n    variant,\r\n    width,\r\n    height,\r\n    src,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const [isReady, setIsReady] = useState(true);\r\n    const loadAvatarImageHandler = () => {\r\n        setIsReady(true);\r\n    }\r\n\r\n    const errorImageHandler = () => {\r\n        setIsReady(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (src) setIsReady(false);\r\n    }, [src])\r\n\r\n    return (\r\n        <div className={clsx(classes.root, props.className)}>\r\n            {!isReady &&\r\n                <Skeleton variant={variant} width={width} height={height} />\r\n            }\r\n            {cloneElement(props.children, {\r\n                src: src,\r\n                hidden: !isReady,\r\n                imgProps: {\r\n                    onLoad: loadAvatarImageHandler,\r\n                    onError: errorImageHandler\r\n                },\r\n                style: {\r\n                    height: !isReady && height ? \"0px\" : height,\r\n                    width: !isReady && width ? \"0px\" : width,\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useContext, useState, cloneElement } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Avatar\r\n} from '@material-ui/core';\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    avatar: {\r\n    }\r\n}));\r\n\r\nexport const ImageSkeleton = ({ \r\n    empty,\r\n    variant, \r\n    width, \r\n    height, \r\n    src, \r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const [isReady, setIsReady] = useState(true);\r\n    const loadAvatarImageHandler = () => {        \r\n        setIsReady(true);\r\n    }\r\n\r\n    const errorImageHandler = () => {\r\n        setIsReady(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(src || empty) setIsReady(false);\r\n    }, [src])\r\n\r\n    return (\r\n        <div className={clsx(classes.root, props.className)}>\r\n            {!isReady &&\r\n                <Skeleton variant={variant} width={width} height={height} />                \r\n            }            \r\n            {!empty && cloneElement(props.children, { \r\n                src: src,\r\n                hidden: !isReady, \r\n                onLoad: loadAvatarImageHandler, \r\n                onError: errorImageHandler,\r\n                style: {\r\n                    height: !isReady ? \"0px\" : \"\"\r\n                } \r\n            })}\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { SketchPicker, ChromePicker } from 'react-color'\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    container: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    color: {\r\n        width: '36px',\r\n        height: '14px',\r\n        borderRadius: '2px'\r\n    },\r\n    colorName: {\r\n        marginLeft: theme.spacing(1),\r\n        fontSize: \"1.1em\"\r\n    },\r\n    swatch: {\r\n        padding: '5px',\r\n        background: '#fff',\r\n        borderRadius: '1px',\r\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n        display: 'inline-block',\r\n        cursor: 'pointer',\r\n    },\r\n    popover: {\r\n        position: 'absolute',\r\n        zIndex: '2',\r\n    },\r\n    cover: {\r\n        position: 'fixed',\r\n        top: '0px',\r\n        right: '0px',\r\n        bottom: '0px',\r\n        left: '0px',\r\n    },\r\n    disabled: {\r\n        opacity: \".5\",\r\n        backgroundColor: \"#d1d1d1\"\r\n    }\r\n}));\r\n\r\nfunction round(value, precision) {\r\n    var multiplier = Math.pow(10, precision || 0);\r\n    return Math.round(value * multiplier) / multiplier;\r\n}\r\n\r\nfunction hexToRgbA(hex) {\r\n    if (typeof hex != 'string') hex = '';\r\n    let c;\r\n    if (hex.length == 4 || hex.length == 7) hex += \"FF\";\r\n    if (/^#([A-Fa-f0-9]{2}){1,4}$/.test(hex)) {\r\n        c = hex.substring(1).split('');\r\n        if (c.length == 5) {\r\n            c = [c[0], c[0], c[1], c[1], c[2], c[2], c[3], c[4]];\r\n        }\r\n        c = '0x' + c.join('');\r\n        return {\r\n            hex,\r\n            rgb: {\r\n                r: ((c >> 32) & 255).toString(),\r\n                g: ((c >> 16) & 255).toString(),\r\n                b: ((c >> 8) & 255).toString(),\r\n                a: round(((c & 255) / 255), 1).toString()\r\n            }\r\n        };\r\n    } else {\r\n        return {\r\n            hex: \"#FFF\",\r\n            rgb: {\r\n                r: \"255\",\r\n                g: \"255\",\r\n                b: \"255\",\r\n                a: \"1\"\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport const ColorPicker = ({\r\n    value,\r\n    disabled,\r\n    onChange,\r\n    ...props\r\n}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [displayColorPicker, setDisplayColorPicker] = useState(false);\r\n    const [color, setColor] = useState(hexToRgbA(value));\r\n\r\n    const showPickerHandler = () => {\r\n        if (disabled) return;\r\n        setDisplayColorPicker(!displayColorPicker);\r\n    };\r\n\r\n    const closePickerHandler = () => {\r\n        setDisplayColorPicker(false);\r\n    };\r\n\r\n    const colorChangeHandler = (c) => {\r\n        let alpha = round((c.rgb.a * 255), 1).toString(16).split(\".\")[0];\r\n        if (alpha.length < 2) alpha = \"0\" + alpha;\r\n        const hex = `${c.hex}${alpha}`;\r\n        const color = hexToRgbA(hex);\r\n        setColor(color);\r\n    };\r\n\r\n    const colorChangeCompleteHandler = (c) => {\r\n        let alpha = round((c.rgb.a * 255), 1).toString(16).split(\".\")[0];\r\n        if (alpha.length < 2) alpha = \"0\" + alpha;\r\n        const hex = `${c.hex}${alpha}`;\r\n        const color = hexToRgbA(hex);\r\n        setColor(color);\r\n        if (onChange) onChange(color)\r\n    };\r\n\r\n    return (\r\n        <div className={clsx(classes.root, props.className)}>\r\n            <div className={classes.container}>\r\n                <div\r\n                    className={classes.swatch}\r\n                    onClick={showPickerHandler}>\r\n                    <div\r\n                        className={clsx(classes.color, disabled ? classes.disabled : null)}\r\n                        style={{ backgroundColor: value }}\r\n                    />\r\n                </div>\r\n                <div className={classes.colorName}>\r\n                    {value}\r\n                </div>\r\n            </div>\r\n            {displayColorPicker ?\r\n                <div className={classes.popover}>\r\n                    <div\r\n                        className={classes.cover}\r\n                        onClick={closePickerHandler} />\r\n                    <ChromePicker\r\n                        color={color}\r\n                        onChange={colorChangeHandler}\r\n                        onChangeComplete={colorChangeCompleteHandler}\r\n                    />\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Grid,\r\n    LinearProgress,\r\n    Typography,\r\n} from '@material-ui/core';\r\n\r\nimport { PluginContext } from '../contexts';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: \"70vh\",\r\n        marginBottom: theme.spacing(6),\r\n    },\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    }\r\n}));\r\n\r\nexport const PageLoader = ({\r\n    aphorism,\r\n    enableAphorism,\r\n    ...props }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        getAssetUrl\r\n    } = useContext(PluginContext);\r\n\r\n    return (\r\n        <>\r\n            <LinearProgress color=\"primary\" />\r\n            {enableAphorism &&\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    minHeight: 540,\r\n                    height: \"70vh\"\r\n                }}>\r\n                    <img src={getAssetUrl(\"images/loading.gif\")} style={{ width: 400, height: 400 }} />\r\n                    <Typography variant=\"h5\" align=\"center\" style={{ width: 600 }}>\r\n                        {aphorism.phrase}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" align=\"center\" style={{ width: 600 }}>\r\n                        {`${aphorism.author}`}\r\n                    </Typography>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Typography,\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {}\r\n}));\r\n\r\nexport const DateTime = ({ date, time, value, ...props }) => {\r\n\r\n    const formatDate = (value) => {\r\n        return (\r\n            <>\r\n                {\r\n                    `${(new Intl.DateTimeFormat(\"it-IT\", {\r\n                        day: \"numeric\"\r\n                    })).format(value ? Date.parse(value) : new Date())} ${(new Intl.DateTimeFormat(\"it-IT\", {\r\n                        month: \"long\"\r\n                    })).format(value ? Date.parse(value) : new Date())} ${(new Intl.DateTimeFormat(\"it-IT\", {\r\n                        year: \"numeric\"\r\n                    })).format(value ? Date.parse(value) : new Date())}`\r\n                }\r\n            </>\r\n        );\r\n    }    \r\n    \r\n    const formaTime = (value) => {\r\n        return (\r\n            <>        \r\n                {(new Intl.DateTimeFormat(\"it-IT\", {\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\",\r\n                    //second: 'numeric'\r\n                })).format(value ? Date.parse(value) : new Date())}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {date && formatDate(value)}\r\n            &nbsp;\r\n            {time && formaTime(value)}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport {\r\n    UploadFile\r\n} from '../common';\r\n\r\nimport {\r\n    Dialog,\r\n    Grid,\r\n    IconButton,\r\n    Typography,\r\n    Paper,\r\n} from '@material-ui/core';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport const UploadDialog = ({\r\n    titleText,\r\n    helpText,\r\n    singleFile,\r\n    uploadButtonText,\r\n    removeButtonText,\r\n    removeAllButtonText,\r\n    disabled,\r\n    uploadHandler,\r\n    onFileDropHandler,\r\n    open,\r\n    handleClose,\r\n    ...props }) => {\r\n    return (\r\n        <Dialog\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            style={{ zIndex: 20000 }}\r\n        >\r\n            <Paper style={{ backgroundColor: \"#7957D5\", color: \"#fff\", padding: 16, paddingLeft: 32, paddingRight: 32, borderRadius: 0, boxShadow: \"rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px\" }}>\r\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                    <Typography variant=\"h6\">\r\n                        {titleText ?? \"Upload files\"}\r\n                    </Typography>\r\n                    <IconButton\r\n                        onClick={handleClose}>\r\n                        <CloseIcon style={{ color: \"#fff\" }} />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Paper>\r\n            <div style={{ padding: 32 }}>\r\n                <UploadFile\r\n                    height={88}\r\n                    singleFile={singleFile}\r\n                    disabled={disabled}\r\n                    helpText={helpText}\r\n                    uploadButtonText={uploadButtonText}\r\n                    removeButtonText={removeButtonText}\r\n                    removeAllButtonText={removeAllButtonText}\r\n                    onFileDrop={onFileDropHandler}\r\n                    upload={uploadHandler}\r\n                />\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Badge,\r\n    Avatar,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    AvatarSkeleton,\r\n    ContainedIconButton\r\n} from '../common';\r\n\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        marginTop: 8,\r\n        overflowX: \"auto\",\r\n        flexWrap: \"nowrap\",\r\n        backgroundColor: colors.grey[300],\r\n        minHeight: 114\r\n    },\r\n    avatarSkeleton: {\r\n        borderRadius: \"50%\",\r\n        backgroundColor: \"#CCCCCC\",\r\n        boxShadow: \"rgb(0 0 0 / 30%) 0px 0px 5px 0px inset\",\r\n    },\r\n}));\r\n\r\nexport const ImageRowList = ({\r\n    size,\r\n    images,\r\n    imagePropName,\r\n    removeImageHandler,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <div className={clsx(classes.root, props.className, \"mnu-itms-list\")}>\r\n            {images.map((x, index) =>\r\n                <div key={index} style={{ marginLeft: 4, marginRight: 4, margin: theme.spacing(1), }}>\r\n                    <Badge\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        overlap=\"circle\"\r\n                        badgeContent={\r\n                            removeImageHandler &&\r\n                            <ContainedIconButton\r\n                                style={{ backgroundColor: \"#FF2B56\" }}\r\n                                size=\"small\"\r\n                                onClick={() => removeImageHandler(x)}>\r\n                                <CloseIcon style={{ color: \"#FFF\" }} />\r\n                            </ContainedIconButton>}>\r\n                        <AvatarSkeleton\r\n                            width={size}\r\n                            height={size}\r\n                            src={imagePropName ? x[imagePropName] : x}\r\n                            variant=\"circle\"\r\n                            className={classes.avatarSkeleton}\r\n                            style={{ width: size, height: size }}\r\n                        >\r\n                            <Avatar\r\n                                style={{ width: size, height: size }}>\r\n                                <ImageIcon />\r\n                            </Avatar>\r\n                        </AvatarSkeleton>\r\n                    </Badge>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport BugReportIcon from '@material-ui/icons/BugReport'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 150,\r\n        padding: theme.spacing(3),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    image: {\r\n        display: 'inline-block',\r\n        marginTop: 50,\r\n        width: '200px',\r\n        height: '200px'\r\n    }\r\n}));\r\n\r\nexport const ErrorView = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div className={clsx(classes.root, props.className)}>\r\n            <Typography align=\"center\" variant=\"h2\">\r\n                {t(\"LabelGenericError\")}\r\n            </Typography>\r\n            <br />\r\n            <Typography align=\"center\" variant=\"body1\">\r\n                {t(\"LabelGenericErrorMessage\")}\r\n            </Typography>\r\n            <br />\r\n            <BugReportIcon className={classes.image} />\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Box\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {}\r\n}));\r\n\r\nexport const TabPanel = ({\r\n    label,\r\n    value,\r\n    index,\r\n    p,\r\n    children,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, props.className)}\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`settings-tabpanel-${index}`}\r\n            aria-labelledby={`settings-tab-${index}`}\r\n            {...props}>\r\n            {value === index && (\r\n                <Box p={p || p === 0 ? p : 3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport { cloneDeep, times } from 'lodash';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { RestApiContext } from '../../contexts/RestApiContext';\r\nimport { PluginContext } from '../../contexts/PluginContext';\r\n\r\nimport { useAggregatedState, usePageReadyState, useBusyState, isDev } from '../../../helpers';\r\nimport { MenuItemValidateSchema, SettingsValidateSchema, MenuItemTypes } from '../../../helpers/Common';\r\n\r\nexport const PageContext = React.createContext(null);\r\n\r\nconst { Provider } = PageContext;\r\n\r\nexport const PageProvider = ({ ...props }) => {\r\n    const [pageIsReady, pageHasError, setPageIsReady] = usePageReadyState({});\r\n    const [busy, isBusy, setIsBusy] = useBusyState({});\r\n    const [state, setState] = useAggregatedState({\r\n        license: null,\r\n        settings: null,\r\n        menuItems: null,\r\n        isLegacy: false,\r\n        categories: null,\r\n        pages: null,\r\n        icons: null,\r\n        qrLiveViewer: null,\r\n        configStatus: null,\r\n        configHasChanges: false,\r\n        errors: [],\r\n    });\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        plugin\r\n    } = useContext(PluginContext);\r\n\r\n    const apiClient = useContext(RestApiContext);\r\n\r\n    const checkLicenseAsync = async () => {\r\n        try {\r\n            const license = await apiClient.checkLicenseAsync();\r\n            setState({ license });\r\n        } catch (e) {\r\n            console.debug(e);\r\n        }\r\n    }\r\n\r\n    const getSettingsAsync = async () => {\r\n        try {\r\n            const settings = await apiClient.getSettingsAsync();\r\n            const areLegacySettings = settings[\"AppID\"] !== undefined;\r\n            setState({ settings: areLegacySettings ? {} : settings });\r\n        } catch (e) {\r\n            console.debug(e);\r\n        }\r\n    }\r\n\r\n    const getMenuItemsAsync = async () => {\r\n        try {\r\n            const menuItems = await apiClient.getMenuItemsAsync();\r\n            const areLegacyItems = menuItems && menuItems.length > 0 && menuItems[0][\"props\"] === undefined;\r\n            setState({ menuItems: areLegacyItems ? [] : menuItems });\r\n        } catch (e) {\r\n            console.debug(e);\r\n        }\r\n    }\r\n\r\n    const getConfigurationAsync = async () => {\r\n        try {\r\n            const config = await Promise.all([\r\n                apiClient.getSettingsAsync(),\r\n                apiClient.getMenuItemsAsync()\r\n            ]);\r\n            const settings = config[0];\r\n            const areLegacySettings = settings[\"AppID\"] !== undefined;\r\n            const menuItems = config[1];\r\n            const areLegacyItems = menuItems && menuItems.length > 0 && menuItems[0][\"props\"] === undefined;\r\n            setState({\r\n                settings: areLegacySettings ? {} : settings,\r\n                menuItems: areLegacyItems ? [] : menuItems,\r\n                isLegacy: areLegacySettings || areLegacyItems\r\n            });\r\n            return true;\r\n        } catch (e) {\r\n            console.debug(e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const checkConfigChangesAsync = async () => {\r\n        try {\r\n            const configStatus = await apiClient.checkConfigChangesAsync();\r\n            setState({ configStatus });\r\n        } catch (e) {\r\n            console.debug(e);\r\n        }\r\n    }\r\n\r\n    const saveConfigurationAsync = async (settings, menuItems) => {\r\n        try {\r\n            await Promise.all([\r\n                apiClient.updateSettingsAsync({ settings }),\r\n                apiClient.updateMenuItemsAsync({ menuItems })\r\n            ]);\r\n            setState({ configHasChanges: false });\r\n            return true;\r\n        } catch (e) {\r\n            console.debug(e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const resetConfigurationAsync = async () => {\r\n        try {\r\n            await Promise.all([\r\n                apiClient.resetSettingsAsync(),\r\n            ]);\r\n            setState({\r\n                configHasChanges: false,\r\n                settings: {},\r\n                menuItems: []\r\n            });\r\n            return true;\r\n        } catch (e) {\r\n            console.debug(e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const updateLiveConfigAsync = async () => {\r\n        try {\r\n            const storedFile = await apiClient.updateLiveConfigAsync();\r\n            return true;\r\n        } catch (e) {\r\n            console.debug(e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const updateAppConfigAsync = async () => {\r\n        try {\r\n            await apiClient.updateAppConfigAsync();\r\n            return true;\r\n        } catch (e) {\r\n            console.debug(e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const getLiveViewerQrCodeAsync = async () => {\r\n        try {\r\n            const qrLiveViewer = await apiClient.getLiveViewerQrCodeAsync();\r\n            setState({ qrLiveViewer });\r\n        } catch (e) {\r\n            console.debug(e);\r\n            setState({ qrLiveViewer: null });\r\n        }\r\n    }\r\n\r\n    const createAppleCertsAsync = async ({ keyId, teamId, email, bundleId }) => {\r\n        try {\r\n            const certsInfo = await apiClient.createAppleCertsAsync({ keyId, teamId, email, bundleId, adminEmail: plugin.adminEmail });\r\n            return certsInfo;\r\n        } catch (e) {\r\n            console.debug(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const createGoogleCertsAsync = async ({ keystoreAlias, email, bundleId }) => {\r\n        try {\r\n            const certsInfo = await apiClient.createGoogleCertsAsync({ keystoreAlias, email, bundleId, adminEmail: plugin.adminEmail });\r\n            return certsInfo;\r\n        } catch (e) {\r\n            console.debug(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const getWordPressCategoriesAsync = async (page, perPage) => {\r\n        try {\r\n            const categories = await apiClient.getWordPressCategoriesAsync(page, perPage);\r\n            setState({ categories });\r\n        } catch (e) {\r\n            console.debug(e);\r\n        }\r\n    }\r\n\r\n    const getWordPressPagesAsync = async (page, perPage) => {\r\n        try {\r\n            const pages = await apiClient.getWordPressPagesAsync(page, perPage);\r\n            setState({ pages });\r\n        } catch (e) {\r\n            console.debug(e);\r\n        }\r\n    }\r\n\r\n    const getIconClassesAsync = async () => {\r\n        try {\r\n            const icons = await apiClient.getIconClassesAsync();\r\n            setState({ icons: icons });\r\n        } catch (e) {\r\n            console.debug(e);\r\n        }\r\n    }\r\n\r\n    const mergeSettings = (tabSettings) => {\r\n        const prevSettings = state.settings;\r\n        const settings = { ...cloneDeep(state.settings), ...tabSettings };\r\n        const hasChanges = state.configHasChanges || (JSON.stringify({\r\n            ...prevSettings,\r\n            enableiOSBuild: null,\r\n            enableAndroidBuild: null,\r\n        }) !== JSON.stringify({\r\n            ...settings,\r\n            enableiOSBuild: null,\r\n            enableAndroidBuild: null,\r\n        }));\r\n        setState({ settings, configHasChanges: hasChanges });\r\n        return settings;\r\n    }\r\n\r\n    const mergeMenuItems = (tabMenuItems) => {\r\n        const prevMenuItems = state.menuItems;\r\n        const menuItems = [].concat(tabMenuItems);\r\n        const hasChanges = state.configHasChanges || (JSON.stringify(prevMenuItems) != JSON.stringify(menuItems));\r\n        setState({ menuItems, configHasChanges: hasChanges });\r\n        return menuItems;\r\n    }\r\n\r\n    const validateSettingsAsync = async (settings) => {\r\n        let errors = [];\r\n        await SettingsValidateSchema.Info.validate(settings, { abortEarly: false }).catch((err) => {\r\n            err.inner.forEach(x => errors.push({ errorId: x.path, message: x.message }));\r\n            if (err.inner && err.inner.length > 0)\r\n                errors.push({ errorId: \"info\", message: err.name });\r\n        })\r\n        await SettingsValidateSchema.Assets.validate(settings, { abortEarly: false }).catch((err) => {\r\n            err.inner.forEach(x => errors.push({ errorId: x.path, message: x.message }));\r\n            if (err.inner && err.inner.length > 0)\r\n                errors.push({ errorId: \"assets\", message: err.name });\r\n        })\r\n        if (state.settings.enableiOSBuild) {\r\n            await SettingsValidateSchema.Ios.validate(settings, { abortEarly: false }).catch((err) => {\r\n                err.inner.forEach(x => errors.push({ errorId: x.path, message: x.message }));\r\n                if (err.inner && err.inner.length > 0)\r\n                    errors.push({ errorId: \"ios\", message: err.name });\r\n            });\r\n        }\r\n        if (state.settings.enableAndroidBuild) {\r\n            await SettingsValidateSchema.Android.validate(settings, { abortEarly: false }).catch((err) => {\r\n                err.inner.forEach(x => errors.push({ errorId: x.path, message: x.message }));\r\n                if (err.inner && err.inner.length > 0)\r\n                    errors.push({ errorId: \"android\", message: err.name });\r\n            });\r\n        }\r\n        await SettingsValidateSchema.Services.validate(settings, { abortEarly: false }).catch((err) => {\r\n            err.inner.forEach(x => errors.push({ errorId: x.path, message: x.message }));\r\n            if (err.inner && err.inner.length > 0)\r\n                errors.push({ errorId: \"services\", message: err.name });\r\n        })\r\n\r\n        return errors\r\n    }\r\n\r\n    const validateMenuItemsAsync = async (settings, menuItems) => {\r\n        let errors = [];\r\n\r\n        if (settings.enableAppMenu\r\n            && (menuItems.length === 0\r\n                || !menuItems.some(x => x.type === MenuItemTypes.HomePage))) {\r\n            errors.push({ errorId: \"missingHomePage\", message: t(\"MissingHomePageError\").replace(\"$type\", t(\"MenuItemHomePage\")) });\r\n        }\r\n\r\n        if (menuItems) {\r\n            for (let index = 0; index < menuItems.length; index++) {\r\n                const item = menuItems[index];\r\n                await MenuItemValidateSchema[item.type]\r\n                    .validate(item, { abortEarly: false })\r\n                    .catch((err) => {\r\n                        err.inner.forEach(x => errors.push({ errorId: `[${item.id}].${x.path}`, message: x.message }));\r\n                    });\r\n            }\r\n        }\r\n\r\n        if (errors.length > 0) {\r\n            errors.push({ errorId: \"menu\", message: \"ValidationError\" });\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    const validateAllAsync = async (settings, menuItems) => {\r\n        let errors = [\r\n            ...(await validateSettingsAsync(settings ?? state.settings)),\r\n            ...(await validateMenuItemsAsync(settings ?? state.settings, menuItems ?? state.menuItems))\r\n        ];\r\n        console.debug(errors);\r\n        setState({ errors });\r\n        return !(errors.length > 0);\r\n    }\r\n\r\n    return (\r\n        <Provider value={{\r\n            state,\r\n            pageIsReady,\r\n            pageHasError,\r\n            setPageIsReady,\r\n            isBusy,\r\n            setIsBusy,\r\n            checkLicenseAsync,\r\n            getSettingsAsync,\r\n            getMenuItemsAsync,\r\n            getConfigurationAsync,\r\n            checkConfigChangesAsync,\r\n            saveConfigurationAsync,\r\n            resetConfigurationAsync,\r\n            updateLiveConfigAsync,\r\n            updateAppConfigAsync,\r\n            getLiveViewerQrCodeAsync,\r\n            createAppleCertsAsync,\r\n            createGoogleCertsAsync,\r\n            getWordPressCategoriesAsync,\r\n            getWordPressPagesAsync,\r\n            getIconClassesAsync,\r\n            mergeSettings,\r\n            mergeMenuItems,\r\n            validateAllAsync,\r\n        }}>\r\n            {props.children}\r\n        </Provider>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    AppBar,\r\n    Tabs,\r\n    Tab,\r\n    Badge,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n} from './';\r\n\r\nimport { PageContext } from '../PageContext';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    }\r\n}));\r\n\r\nexport const TabContainer = ({\r\n    children,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        license,\r\n        configHasChanges,\r\n        errors\r\n    } = state;\r\n\r\n    const createTabProps = (tabIndex) => {\r\n        return {\r\n            id: `settings-tab-${tabIndex}`,\r\n            'aria-controls': `settings-tabpanel-${tabIndex}`,\r\n        };\r\n    }\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const changeIndexHandler = (e, newValue) => {\r\n        setCurrentIndex(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={clsx(classes.root, props.className)}>\r\n            <AppBar position=\"static\" style={{ borderRadius: 5 }}>\r\n                <Tabs value={currentIndex} onChange={changeIndexHandler} aria-label=\"settings tabs\">\r\n                    {children && React.Children.map(children, (child, index) =>\r\n\r\n                        <Tab\r\n                            key={`tab-${index}`}\r\n                            label={\r\n                                <Badge\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    color=\"secondary\"\r\n                                    variant=\"dot\"\r\n                                    invisible={errors.find(err => err.errorId === child.props.name) ? false : true}>\r\n                                    {child.props.label}\r\n                                </Badge>\r\n                            }\r\n                            {...createTabProps(child.props.index)} />\r\n\r\n                    )}\r\n                </Tabs>\r\n            </AppBar>\r\n            {children && React.Children.map(children, (child) => {\r\n                if (React.isValidElement(child)) {\r\n                    return React.cloneElement(child, { value: currentIndex });\r\n                }\r\n                return child;\r\n            })}\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { isEmpty } from 'lodash';\r\n\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Grid,\r\n    Typography,\r\n    Divider,\r\n    FormControlLabel,\r\n    Radio,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    ColorPicker,\r\n    FieldError\r\n} from '../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    Switch,\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    RadioGroup\r\n} from 'formik-material-ui';\r\n\r\nimport { PageContext } from '../PageContext';\r\nimport { PluginContext } from '../../../contexts';\r\n\r\nimport { MenuLayoutType, UserLoginType } from '../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    sectionTitle: {\r\n        color: \"#7957d5\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        //marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nexport const InfoForm = ({\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    onBlur,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        plugin\r\n    } = useContext(PluginContext);\r\n\r\n    const {\r\n        settings,\r\n    } = state;\r\n\r\n    const getInitialValues = () => {\r\n        return {\r\n            appTitle: !isEmpty(settings) && settings.appTitle ? settings.appTitle : \"\",\r\n            menuTitle: !isEmpty(settings) && settings.menuTitle ? settings.menuTitle : \"\",\r\n            bundleId: !isEmpty(settings) && settings.bundleId ? settings.bundleId : \"\",\r\n            versionNumber: !isEmpty(settings) && settings.versionNumber ? settings.versionNumber : \"\",\r\n            shareAppIos: !isEmpty(settings) && settings.shareAppIos ? settings.shareAppIos : \"\",\r\n            shareAppAndroid: !isEmpty(settings) && settings.shareAppAndroid ? settings.shareAppAndroid : \"\",\r\n            enableAppMenu: !isEmpty(settings) && settings.enableAppMenu !== undefined ? settings.enableAppMenu : true,\r\n            appMenuLayout: !isEmpty(settings) && settings.appMenuLayout ? settings.appMenuLayout : MenuLayoutType.Drawer,\r\n            homeUrl: !isEmpty(settings) && settings.homeUrl ? settings.homeUrl : \"\",\r\n            appPrimaryColor: !isEmpty(settings) && settings.appPrimaryColor ? settings.appPrimaryColor : \"#7957d5\",\r\n            appSecondaryColor: !isEmpty(settings) && settings.appSecondaryColor ? settings.appSecondaryColor : \"#7957d5\",\r\n            entryTextColor: !isEmpty(settings) && settings.entryTextColor ? settings.entryTextColor : \"#000\",\r\n            entryBackgroundColor: !isEmpty(settings) && settings.entryBackgroundColor ? settings.entryBackgroundColor : \"#fff\",\r\n            errorTextColor: !isEmpty(settings) && settings.errorTextColor ? settings.errorTextColor : \"#f00\",\r\n            appTitleColor: !isEmpty(settings) && settings.appTitleColor ? settings.appTitleColor : \"#fff\",\r\n            colorHeaderMenu: !isEmpty(settings) && settings.colorHeaderMenu ? settings.colorHeaderMenu : \"#fff\",\r\n            menuTitleBackgroundColor: !isEmpty(settings) && settings.menuTitleBackgroundColor ? settings.menuTitleBackgroundColor : \"#7957d5\",\r\n            menuItemsBackgroundColor: !isEmpty(settings) && settings.menuItemsBackgroundColor ? settings.menuItemsBackgroundColor : \"#fff\",\r\n            menuItemsTextColor: !isEmpty(settings) && settings.menuItemsTextColor ? settings.menuItemsTextColor : \"#515151\",\r\n            menuBackgroundColor: !isEmpty(settings) && settings.menuBackgroundColor ? settings.menuBackgroundColor : \"#fff\",\r\n            useLightStatusBar: !isEmpty(settings) && settings.useLightStatusBar !== undefined ? settings.useLightStatusBar : false,\r\n            useUserLogin: !isEmpty(settings) && settings.useUserLogin !== undefined ? settings.useUserLogin : false,\r\n            userLoginType: !isEmpty(settings) && settings.userLoginType ? settings.userLoginType : UserLoginType.Always,\r\n\r\n            // This field is readonly and the purpose of this field is to show the user \r\n            // the current site domain to use during the purchase process\r\n            licenseId: plugin.siteUid\r\n        };\r\n    }\r\n\r\n    const submitClickHandler = (values, actions) => {\r\n        if (onSubmit) onSubmit(values, () => actions.setSubmitting(false));\r\n    }\r\n\r\n    return (\r\n        <Card className={clsx(classes.root, props.className)}>\r\n            <CardContent>\r\n                <Container maxWidth=\"lg\" className={classes.content}>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        initialValues={getInitialValues()}\r\n                        onSubmit={submitClickHandler}\r\n                        innerRef={formRef}\r\n                        validationSchema={validationSchema}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={true}\r\n                        validate={(values) => {\r\n                            if (onBlur) onBlur(values);\r\n                        }}>\r\n                        {(props) => {\r\n                            const {\r\n                                values,\r\n                                isSubmitting,\r\n                                handleSubmit,\r\n                                setFieldValue,\r\n                            } = props;\r\n                            return (\r\n                                <Form noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography className={classes.sectionTitle} variant=\"h6\">\r\n                                                {t(\"LabelInfoGeneral\")}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                className={classes.field}\r\n                                                name=\"licenseId\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                label={t(\"LabelLicenseId\")}\r\n                                                helperText={t(\"HelperLicenseId\")}\r\n                                                component={TextField}\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                className={classes.field}\r\n                                                name=\"appTitle\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                label={t(\"LabelAppTitle\")}\r\n                                                helperText={t(\"HelperAppTitle\")}\r\n                                                component={TextField}\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <FieldError\r\n                                                name=\"appTitle\"\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                className={classes.field}\r\n                                                name=\"menuTitle\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                label={t(\"LabelMenuTitle\")}\r\n                                                helperText={t(\"HelperMenuTitle\")}\r\n                                                component={TextField}\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <FieldError\r\n                                                name=\"menuTitle\"\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                className={classes.field}\r\n                                                name=\"bundleId\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                label={t(\"LabelBundleId\")}\r\n                                                helperText={t(\"HelperBundleId\")}\r\n                                                component={TextField}\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <FieldError\r\n                                                name=\"bundleId\"\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                     {\r\n                                        /*\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                className={classes.field}\r\n                                                name=\"versionNumber\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                label={t(\"LabelVersionNumber\")}\r\n                                                helperText={t(\"HelperVersionNumber\")}\r\n                                                component={TextField}\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <FieldError\r\n                                                name=\"versionNumber\"\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                        */\r\n                                       }\r\n                                        <Grid item xs={12}>\r\n                                            <Typography className={classes.sectionTitle} variant=\"h6\">\r\n                                                {t(\"LabelInfoSharing\")}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                className={classes.field}\r\n                                                name=\"shareAppIos\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                label={t(\"LabelShareAppIos\")}\r\n                                                helperText={t(\"HelperShareAppIos\")}\r\n                                                component={TextField}\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <FieldError\r\n                                                name=\"shareAppIos\"\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                className={classes.field}\r\n                                                name=\"shareAppAndroid\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                label={t(\"LabelShareAppAndroid\")}\r\n                                                helperText={t(\"HelperShareAppAndroid\")}\r\n                                                component={TextField}\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <FieldError\r\n                                                name=\"shareAppAndroid\"\r\n                                                errors={errors}\r\n                                            />\r\n                                            {/* <Divider variant=\"fullWidth\" style={{ marginTop: \"24px\", marginBottom: \"0px\" }} /> */}\r\n                                        </Grid>\r\n\r\n                                        {/*\r\n                                           <Grid item xs={12}>\r\n                                               <Typography className={classes.sectionTitle} variant=\"h6\">\r\n                                                   {t(\"LabelInfoAuthentication\")}\r\n                                               </Typography>\r\n                                           </Grid>\r\n                                           <Grid item xs={12}>\r\n                                               <Field\r\n                                                   type=\"checkbox\"\r\n                                                   name=\"useUserLogin\"\r\n                                                   component={CheckboxWithLabel}\r\n                                                   Label={{ label: t(\"LabelUseUserLogin\") }}\r\n                                                   disabled={disabled}\r\n                                               />\r\n                                               <br />\r\n                                               <Typography variant=\"caption\" style={{ marginLeft: \"16px\" }}>\r\n                                                   {t(\"HelperUseUserLogin\")}\r\n                                               </Typography>\r\n                                           </Grid>\r\n                                           {values.useUserLogin &&\r\n                                               <Grid item xs={12}>\r\n                                                   <Field component={RadioGroup} name=\"userLoginType\">\r\n                                                       <FormControlLabel\r\n                                                           value={UserLoginType.Always}\r\n                                                           control={<Radio disabled={isSubmitting} />}\r\n                                                           label={t(\"LabelLoginAlways\")}\r\n                                                           disabled={disabled}\r\n                                                       />\r\n                                                       <FormControlLabel\r\n                                                           value={UserLoginType.Action}\r\n                                                           control={<Radio disabled={isSubmitting} />}\r\n                                                           label={t(\"LabelLoginAction\")}\r\n                                                           disabled={disabled}\r\n                                                       />\r\n                                                       <FormControlLabel\r\n                                                           value={UserLoginType.Code}\r\n                                                           control={<Radio disabled={isSubmitting} />}\r\n                                                           label={t(\"LabelLoginCode\")}\r\n                                                           disabled={disabled}\r\n                                                       />\r\n                                                   </Field>\r\n                                               </Grid>\r\n                                          }\r\n                                        */}\r\n                                        \r\n                                        <Grid item xs={12}>\r\n                                            <Typography className={classes.sectionTitle} variant=\"h6\">\r\n                                                {t(\"LabelInfoMenuAndNavigation\")}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                type=\"checkbox\"\r\n                                                name=\"enableAppMenu\"\r\n                                                component={CheckboxWithLabel}\r\n                                                Label={{ label: t(\"LabelUseNativeAppSideMenu\") }}\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <br />\r\n                                            <Typography variant=\"caption\" style={{ marginLeft: \"16px\" }}>\r\n                                                {t(\"HelperUseNativeAppSideMenu\")}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        {!values.enableAppMenu &&\r\n                                            <Grid item xs={12}>\r\n                                                <Field\r\n                                                    className={classes.field}\r\n                                                    name=\"homeUrl\"\r\n                                                    type=\"text\"\r\n                                                    variant=\"outlined\"\r\n                                                    label={t(\"LabelHomeUrl\")}\r\n                                                    helperText={t(\"HelperHomeUrl\")}\r\n                                                    component={TextField}\r\n                                                    disabled={disabled}\r\n                                                />\r\n                                                <FieldError\r\n                                                    name=\"homeUrl\"\r\n                                                    errors={errors}\r\n                                                />\r\n                                                {/* <Divider variant=\"fullWidth\" style={{ marginTop: \"32px\", marginBottom: \"0px\" }} /> */}\r\n                                            </Grid>\r\n                                        }\r\n                                        {values.enableAppMenu &&\r\n                                            <Grid item xs={12}>\r\n                                                <Field component={RadioGroup} name=\"appMenuLayout\">\r\n                                                    <FormControlLabel\r\n                                                        value={MenuLayoutType.Drawer}\r\n                                                        control={<Radio disabled={isSubmitting} />}\r\n                                                        label={t(\"LabelDrawerMenuLayout\")}\r\n                                                        disabled={disabled}\r\n                                                    />\r\n                                                    <FormControlLabel\r\n                                                        value={MenuLayoutType.Tiles}\r\n                                                        control={<Radio disabled={isSubmitting} />}\r\n                                                        label={t(\"LabelTilesMenuLayout\")}\r\n                                                        disabled={disabled}\r\n                                                    />\r\n                                                    <FormControlLabel\r\n                                                        value={MenuLayoutType.Tabs}\r\n                                                        control={<Radio disabled={isSubmitting} />}\r\n                                                        label={t(\"LabelTabsMenuLayout\")}\r\n                                                        disabled={disabled}\r\n                                                    />\r\n                                                </Field>\r\n                                                {/* <Divider variant=\"fullWidth\" style={{ marginTop: \"32px\", marginBottom: \"0px\" }} /> */}\r\n                                            </Grid>\r\n                                        }\r\n                                        <Grid item xs={12}>\r\n                                            <Typography className={classes.sectionTitle} variant=\"h6\">\r\n                                                {t(\"LabelInfoStyleAndAppearance\")}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                type=\"checkbox\"\r\n                                                name=\"useLightStatusBar\"\r\n                                                component={CheckboxWithLabel}\r\n                                                Label={{ label: t(\"LabelUseLightStatusBar\") }}\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <br />\r\n                                            <Typography variant=\"caption\" style={{ marginLeft: \"16px\" }}>\r\n                                                {t(\"HelperUseLightStatusBar\")}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs=\"auto\" style={{ minWidth: 360 }}>\r\n                                            <Typography>\r\n                                                {t(\"LabelAppPrimaryColor\")}\r\n                                            </Typography>\r\n                                            <div className={classes.pickerBox}>\r\n                                                <ColorPicker\r\n                                                    value={values.appPrimaryColor}\r\n                                                    disabled={disabled}\r\n                                                    onChange={(x) => setFieldValue(\"appPrimaryColor\", x.hex, true)}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs=\"auto\" style={{ minWidth: 360 }}>\r\n                                            <Typography>\r\n                                                {t(\"LabelAppSecondaryColor\")}\r\n                                            </Typography>\r\n                                            <div className={classes.pickerBox}>\r\n                                                <ColorPicker\r\n                                                    value={values.appSecondaryColor}\r\n                                                    disabled={disabled}\r\n                                                    onChange={(x) => setFieldValue(\"appSecondaryColor\", x.hex, true)}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs=\"auto\" style={{ minWidth: 360 }}>\r\n                                            <Typography>\r\n                                                {t(\"LabelEntryTextColor\")}\r\n                                            </Typography>\r\n                                            <div className={classes.pickerBox}>\r\n                                                <ColorPicker\r\n                                                    value={values.entryTextColor}\r\n                                                    disabled={disabled}\r\n                                                    onChange={(x) => setFieldValue(\"entryTextColor\", x.hex, true)}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs=\"auto\" style={{ minWidth: 360 }}>\r\n                                            <Typography>\r\n                                                {t(\"LabelEntryBackgroundColor\")}\r\n                                            </Typography>\r\n                                            <div className={classes.pickerBox}>\r\n                                                <ColorPicker\r\n                                                    value={values.entryBackgroundColor}\r\n                                                    disabled={disabled}\r\n                                                    onChange={(x) => setFieldValue(\"entryBackgroundColor\", x.hex, true)}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs=\"auto\" style={{ minWidth: 360 }}>\r\n                                            <Typography>\r\n                                                {t(\"LabelErrorTextColor\")}\r\n                                            </Typography>\r\n                                            <div className={classes.pickerBox}>\r\n                                                <ColorPicker\r\n                                                    value={values.errorTextColor}\r\n                                                    disabled={disabled}\r\n                                                    onChange={(x) => setFieldValue(\"errorTextColor\", x.hex, true)}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        {values.appMenuLayout == MenuLayoutType.Drawer &&\r\n                                            <Grid item xs=\"auto\" style={{ minWidth: 360 }}>\r\n                                                <Typography>\r\n                                                    {t(\"LabelMenuTitleBackgroundColor\")}\r\n                                                </Typography>\r\n                                                <div className={classes.pickerBox}>\r\n                                                    <ColorPicker\r\n                                                        value={values.menuTitleBackgroundColor}\r\n                                                        disabled={disabled}\r\n                                                        onChange={(x) => setFieldValue(\"menuTitleBackgroundColor\", x.hex, true)}\r\n                                                    />\r\n                                                </div>\r\n                                            </Grid>\r\n                                        }\r\n                                        {(values.appMenuLayout == MenuLayoutType.Tiles\r\n                                            || values.appMenuLayout == MenuLayoutType.Tabs) &&\r\n                                            <Grid item xs=\"auto\" style={{ minWidth: 360 }}>\r\n                                                <Typography>\r\n                                                    {t(\"LabelMenuBackgroundColor\")}\r\n                                                </Typography>\r\n                                                <div className={classes.pickerBox}>\r\n                                                    <ColorPicker\r\n                                                        value={values.menuBackgroundColor}\r\n                                                        disabled={disabled}\r\n                                                        onChange={(x) => setFieldValue(\"menuBackgroundColor\", x.hex, true)}\r\n                                                    />\r\n                                                </div>\r\n                                            </Grid>\r\n                                        }\r\n                                        {(values.appMenuLayout == MenuLayoutType.Drawer\r\n                                            || values.appMenuLayout == MenuLayoutType.Tiles) &&\r\n                                            <Grid item xs=\"auto\" style={{ minWidth: 360 }}>\r\n                                                <Typography>\r\n                                                    {t(\"LabelMenuItemsBackgroundColor\")}\r\n                                                </Typography>\r\n                                                <div className={classes.pickerBox}>\r\n                                                    <ColorPicker\r\n                                                        value={values.menuItemsBackgroundColor}\r\n                                                        disabled={disabled}\r\n                                                        onChange={(x) => setFieldValue(\"menuItemsBackgroundColor\", x.hex, true)}\r\n                                                    />\r\n                                                </div>\r\n                                            </Grid>\r\n                                        }\r\n                                        <Grid item xs=\"auto\" style={{ minWidth: 360 }}>\r\n                                            <Typography>\r\n                                                {t(\"LabelAppTitleColor\")}\r\n                                            </Typography>\r\n                                            <div className={classes.pickerBox}>\r\n                                                <ColorPicker\r\n                                                    value={values.appTitleColor}\r\n                                                    disabled={disabled}\r\n                                                    onChange={(x) => setFieldValue(\"appTitleColor\", x.hex, true)}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                        {values.appMenuLayout == MenuLayoutType.Drawer &&\r\n                                            <Grid item xs=\"auto\" style={{ minWidth: 360 }}>\r\n                                                <Typography>\r\n                                                    {t(\"LabelColorHeaderMenu\")}\r\n                                                </Typography>\r\n                                                <div className={classes.pickerBox}>\r\n                                                    <ColorPicker\r\n                                                        value={values.colorHeaderMenu}\r\n                                                        disabled={disabled}\r\n                                                        onChange={(x) => setFieldValue(\"colorHeaderMenu\", x.hex, true)}\r\n                                                    />\r\n                                                </div>\r\n                                            </Grid>\r\n                                        }\r\n                                        <Grid item xs=\"auto\" style={{ minWidth: 360 }}>\r\n                                            <Typography>\r\n                                                {t(\"LabelMenuItemsTextColor\")}\r\n                                            </Typography>\r\n                                            <div className={classes.pickerBox}>\r\n                                                <ColorPicker\r\n                                                    value={values.menuItemsTextColor}\r\n                                                    disabled={disabled}\r\n                                                    onChange={(x) => setFieldValue(\"menuItemsTextColor\", x.hex, true)}\r\n                                                />\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </Container>\r\n            </CardContent>\r\n        </Card >\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport { cloneDeep } from 'lodash';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Grid,\r\n    Avatar,\r\n    Divider,\r\n    IconButton,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    AvatarSkeleton,\r\n    FieldError,\r\n    UploadFile\r\n} from '../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    Switch,\r\n    TextField,\r\n    CheckboxWithLabel\r\n} from 'formik-material-ui';\r\n\r\nimport { PageContext } from '../PageContext';\r\nimport { PluginContext } from '../../../contexts/PluginContext';\r\nimport { ToastContext } from '../../../contexts/ToastContext';\r\n\r\nimport { ImageType, MaxFileSize } from '../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ImageIcon from '@material-ui/icons/Image';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst avatarSize = 270;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    },\r\n    button: {\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n    },\r\n    avatarSkeleton: {\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    avatar: {\r\n        width: avatarSize,\r\n        height: avatarSize\r\n    },\r\n    error: {\r\n        textAlign: \"center\",\r\n        display: \"block\",\r\n        fontSize: \"1.2em\"\r\n    }\r\n}));\r\n\r\nexport const MediaForm = ({\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onBlur,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        state,\r\n        mergeSettings\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        getAssetUrl\r\n    } = useContext(PluginContext);\r\n\r\n    const {\r\n        showWarningMessage\r\n    } = useContext(ToastContext);\r\n\r\n    const {\r\n        settings\r\n    } = state;\r\n\r\n    const [appSplash, setAppSplash] = useState(settings.appSplashImage);\r\n    const [appIcon, setAppIcon] = useState(settings.appIcon);\r\n    const [menuHeader, setMenuHeader] = useState(settings.menuHeaderBackgroundImage);\r\n    const [loginPage, setLoginPage] = useState(settings.loginPageImage);\r\n    const setImage = (imageType, file) => {\r\n        switch (imageType) {\r\n            case ImageType.AppSplash:\r\n                setAppSplash(URL.createObjectURL(file));\r\n                break;\r\n            case ImageType.AppIcon:\r\n                setAppIcon(URL.createObjectURL(file));\r\n                break;\r\n            case ImageType.MenuHeader:\r\n                setMenuHeader(URL.createObjectURL(file));\r\n                break;\r\n            case ImageType.LoginPage:\r\n                setLoginPage(URL.createObjectURL(file));\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const uploadfileAsync = async (imageType, data, file) => {\r\n        if (upload) {\r\n            const storedImageInfo = await upload(imageType, data, file);\r\n            if (storedImageInfo !== null) {\r\n                setImage(imageType, file);\r\n                switch (imageType) {\r\n                    case ImageType.AppSplash:\r\n                        mergeSettings({ appSplashImage: storedImageInfo.publicUrl });\r\n                        break;\r\n                    case ImageType.AppIcon:\r\n                        mergeSettings({ appIcon: storedImageInfo.publicUrl });\r\n                        break;\r\n                    case ImageType.MenuHeader:\r\n                        mergeSettings({ menuHeaderBackgroundImage: storedImageInfo.publicUrl });\r\n                        break;\r\n                    case ImageType.LoginPage:\r\n                        mergeSettings({ loginPageImage: storedImageInfo.publicUrl });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const getInitialValues = () => {\r\n        return {\r\n            appSplashImage: settings.appSplashImage ? settings.appSplashImage : \"\",\r\n            appIcon: settings.appIcon ? settings.appIcon : \"\",\r\n            menuHeaderBackgroundImage: settings.menuHeaderBackgroundImage ? settings.menuHeaderBackgroundImage : \"\",\r\n            loginPageImage: settings.loginPageImage ? settings.loginPageImage : \"\",\r\n        };\r\n    }\r\n\r\n    const fileDropHandler = (imageType, file) => {\r\n        if (file.type.includes('image')\r\n            && file.name.endsWith(\".png\")) {\r\n            if (file.size <= MaxFileSize.Max5MB) {\r\n                return true;\r\n            } else {\r\n                showWarningMessage(t(\"MessageWrongFileSize5\"));\r\n                return false;\r\n            }\r\n        } else {\r\n            showWarningMessage(t(\"MessageWrongImageFormat\"));\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const resetImageHandler = (imageType) => {\r\n        switch (imageType) {\r\n            case ImageType.AppSplash:\r\n                setAppSplash(null);\r\n                mergeSettings({ appSplashImage: \"\" });\r\n                break;\r\n            case ImageType.AppIcon:\r\n                setAppIcon(null);\r\n                mergeSettings({ appIcon: \"\" });\r\n                break;\r\n            case ImageType.MenuHeader:\r\n                setMenuHeader(null);\r\n                mergeSettings({ menuHeaderBackgroundImage: \"\" });\r\n                break;\r\n            case ImageType.LoginPage:\r\n                setLoginPage(null);\r\n                mergeSettings({ loginPageImage: \"\" });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const submitClickHandler = (values, actions) => {\r\n        if (onSubmit) {\r\n            onSubmit(values, () => actions.setSubmitting(false));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={clsx(classes.root, props.className)}>\r\n            <CardContent>\r\n                <Container maxWidth=\"lg\" className={classes.content}>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        initialValues={getInitialValues()}\r\n                        onSubmit={submitClickHandler}\r\n                        innerRef={formRef}\r\n                        validationSchema={validationSchema}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={true}\r\n                        validate={(values) => {\r\n                            if (onBlur) onBlur(values);\r\n                        }}>\r\n                        {(props) => {\r\n                            const {\r\n                                values,\r\n                                isSubmitting,\r\n                                handleSubmit,\r\n                                setFieldValue\r\n                            } = props;\r\n                            return (\r\n                                <Form noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={4}>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container justify=\"center\">\r\n                                                <Grid container item xs={8} alignItems=\"center\" justify=\"center\">\r\n                                                    <Grid item>\r\n                                                        <AvatarSkeleton\r\n                                                            className={classes.avatarSkeleton}\r\n                                                            width={avatarSize}\r\n                                                            height={avatarSize}\r\n                                                            src={appSplash}\r\n                                                            variant=\"circle\">\r\n                                                            <Avatar\r\n                                                                className={classes.avatar}\r\n                                                                alt=\"app-splash\">\r\n                                                                <ImageIcon />\r\n                                                            </Avatar>\r\n                                                        </AvatarSkeleton>\r\n                                                    </Grid>\r\n                                                    {appSplash &&\r\n                                                        <Grid item>\r\n                                                            <IconButton\r\n                                                                style={{ color: \"#FF2B56\" }}\r\n                                                                disabled={disabled}\r\n                                                                onClick={(e) => resetImageHandler(ImageType.AppSplash)}>\r\n                                                                <DeleteIcon fontSize=\"large\" />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    }\r\n                                                    <Grid item xs={12}>\r\n                                                        <FieldError\r\n                                                            className={classes.error}\r\n                                                            name=\"appSplashImage\"\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        <UploadFile\r\n                                                            title={t(\"LabelSplashScreen\")}\r\n                                                            singleFile\r\n                                                            disabled={disabled}\r\n                                                            onFileDrop={(files) => fileDropHandler(ImageType.AppSplash, files[0])}\r\n                                                            upload={(data, file) => uploadfileAsync(ImageType.AppSplash, data, file)}\r\n                                                            helpText={t(\"LabelUploadHelp\")}\r\n                                                            uploadButtonText={t(\"LabelUploadFile\")}\r\n                                                            removeButtonText={t(\"LabelRemoveFile\")}\r\n                                                            removeAllButtonText={\"LabelRemoveAllFiles\"}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                                                    <img\r\n                                                        src={getAssetUrl(\"images/image-splash.png\")}\r\n                                                        style={{ maxWidth: '80%', height: 'auto', borderRadius: 8, objectFit: 'contain' }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br />\r\n                                            <Divider />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container justify=\"center\">\r\n                                                <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                                                    <img\r\n                                                        src={getAssetUrl(\"images/image-appicon.png\")}\r\n                                                        style={{ maxWidth: '80%', height: 'auto', borderRadius: 8, objectFit: 'contain' }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid container item xs={8} alignItems=\"center\" justify=\"center\">\r\n                                                    <Grid item>\r\n                                                        <AvatarSkeleton\r\n                                                            width={avatarSize}\r\n                                                            height={avatarSize}\r\n                                                            src={appIcon}\r\n                                                            variant=\"circle\">\r\n                                                            <Avatar\r\n                                                                className={classes.avatar}\r\n                                                                alt=\"app-icon\">\r\n                                                                <ImageIcon />\r\n                                                            </Avatar>\r\n                                                        </AvatarSkeleton>\r\n                                                    </Grid>\r\n                                                    {appIcon &&\r\n                                                        <Grid item>\r\n                                                            <IconButton\r\n                                                                style={{ color: \"#FF2B56\" }}\r\n                                                                disabled={disabled}\r\n                                                                onClick={(e) => resetImageHandler(ImageType.AppIcon)}>\r\n                                                                <DeleteIcon fontSize=\"large\" />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    }\r\n                                                    <Grid item xs={12}>\r\n                                                        <FieldError\r\n                                                            className={classes.error}\r\n                                                            name=\"appIcon\"\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        <UploadFile\r\n                                                            title={t(\"LabelAppIcon\")}\r\n                                                            singleFile\r\n                                                            disabled={disabled}\r\n                                                            onFileDrop={(files) => fileDropHandler(ImageType.AppIcon, files[0])}\r\n                                                            upload={(data, file) => uploadfileAsync(ImageType.AppIcon, data, file)}\r\n                                                            helpText={t(\"LabelUploadHelp\")}\r\n                                                            uploadButtonText={t(\"LabelUploadFile\")}\r\n                                                            removeButtonText={t(\"LabelRemoveFile\")}\r\n                                                            removeAllButtonText={\"LabelRemoveAllFiles\"}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br />\r\n                                            <Divider />\r\n                                        </Grid>\r\n                                       { /*\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container justify=\"center\">\r\n                                                <Grid container item xs={8} alignItems=\"center\" justify=\"center\">\r\n                                                    <Grid item>\r\n                                                        <AvatarSkeleton\r\n                                                            width={avatarSize}\r\n                                                            height={avatarSize}\r\n                                                            src={menuHeader}\r\n                                                            variant=\"circle\">\r\n                                                            <Avatar\r\n                                                                className={classes.avatar}\r\n                                                                alt=\"app-menuheader\">\r\n                                                                <ImageIcon />\r\n                                                            </Avatar>\r\n                                                        </AvatarSkeleton>\r\n                                                    </Grid>\r\n                                                    {menuHeader &&\r\n                                                        <Grid item>\r\n                                                            <IconButton\r\n                                                                style={{ color: \"#FF2B56\" }}\r\n                                                                disabled={disabled}\r\n                                                                onClick={(e) => resetImageHandler(ImageType.MenuHeader)}>\r\n                                                                <DeleteIcon fontSize=\"large\" />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    }\r\n                                                    <Grid item xs={12}>\r\n                                                        <FieldError\r\n                                                            className={classes.error}\r\n                                                            name=\"menuHeaderBackground\"\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        <UploadFile\r\n                                                            title={t(\"LabelMenuHeaderBackground\")}\r\n                                                            singleFile\r\n                                                            disabled={disabled}\r\n                                                            onFileDrop={(files) => fileDropHandler(ImageType.MenuHeader, files[0])}\r\n                                                            upload={(data, file) => uploadfileAsync(ImageType.MenuHeader, data, file)}\r\n                                                            helpText={t(\"LabelUploadHelp\")}\r\n                                                            uploadButtonText={t(\"LabelUploadFile\")}\r\n                                                            removeButtonText={t(\"LabelRemoveFile\")}\r\n                                                            removeAllButtonText={\"LabelRemoveAllFiles\"}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                                                    <img\r\n                                                        src={getAssetUrl(\"images/image-menuheader.png\")}\r\n                                                        style={{ maxWidth: '80%', height: 'auto', borderRadius: 8, objectFit: 'contain' }}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                           <Grid container justify=\"center\">\r\n                                              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                                                 <img\r\n                                                    src={getAssetUrl(\"images/image-loginpage.png\")}\r\n                                                    style={{ maxWidth: '80%', height: 'auto', borderRadius: 8, objectFit: 'contain' }}\r\n                                                 />\r\n                                              </Grid>\r\n                                              <Grid container item xs={8} alignItems=\"center\" justify=\"center\">\r\n                                                 <Grid item>\r\n                                                    <AvatarSkeleton\r\n                                                       className={classes.avatarSkeleton}\r\n                                                       width={avatarSize}\r\n                                                       height={avatarSize}\r\n                                                       src={loginPage}\r\n                                                       variant=\"circle\">\r\n                                                       <Avatar\r\n                                                          className={classes.avatar}\r\n                                                          alt=\"login-page\">\r\n                                                          <ImageIcon />\r\n                                                       </Avatar>\r\n                                                    </AvatarSkeleton>\r\n                                                 </Grid>\r\n                                                 {loginPage &&\r\n                                                    <Grid item>\r\n                                                       <IconButton\r\n                                                          style={{ color: \"#FF2B56\" }}\r\n                                                          disabled={disabled}\r\n                                                          onClick={(e) => resetImageHandler(ImageType.LoginPage)}>\r\n                                                          <DeleteIcon fontSize=\"large\" />\r\n                                                       </IconButton>\r\n                                                    </Grid>\r\n                                                 }\r\n                                                 <Grid item xs={12}>\r\n                                                    <FieldError\r\n                                                       className={classes.error}\r\n                                                       name=\"loginPageImage\"\r\n                                                       errors={errors}\r\n                                                    />\r\n                                                 </Grid>\r\n                                                 <Grid item xs={12}>\r\n                                                    <UploadFile\r\n                                                       title={t(\"LabelLoginPage\")}\r\n                                                       singleFile\r\n                                                       disabled={disabled}\r\n                                                       onFileDrop={(files) => fileDropHandler(ImageType.LoginPage, files[0])}\r\n                                                       upload={(data, file) => uploadfileAsync(ImageType.LoginPage, data, file)}\r\n                                                       helpText={t(\"LabelUploadHelp\")}\r\n                                                       uploadButtonText={t(\"LabelUploadFile\")}\r\n                                                       removeButtonText={t(\"LabelRemoveFile\")}\r\n                                                       removeAllButtonText={\"LabelRemoveAllFiles\"}\r\n                                                    />\r\n                                                 </Grid>\r\n                                              </Grid>\r\n                                           </Grid>\r\n                                           <br />\r\n                                           <Divider />\r\n                                        </Grid>\r\n                                        */ }\r\n                                    </Grid>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </Container>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { cloneDeep } from 'lodash';\r\n\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    CircularProgress\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    UploadFile\r\n} from '../../../../common';\r\n\r\nimport { ToastContext } from '../../../../contexts/ToastContext';\r\nimport { PageContext } from '../../PageContext';\r\n\r\nimport { FileType, MaxFileSize } from '../../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HttpsIcon from '@material-ui/icons/Https';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    navButton: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    progress: {\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst MAX_STEPS = 2;\r\n\r\nexport const AppleCertificatesWizard = ({\r\n    disabled,\r\n    upload,\r\n    onWizardComplete,\r\n    onWizardCanceled,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state,\r\n        isBusy\r\n    } = useContext(PageContext);\r\n\r\n    const [wizardValues, setWizardValues] = useState({\r\n        appleUserEmail: { value: \"\", isValid: true, errorText: null },\r\n        appleKeyId: { value: \"\", isValid: true, errorText: null },\r\n        appleTeamId: { value: \"\", isValid: true, errorText: null },\r\n        p8FileUrl: { value: \"\", isValid: true, errorText: null }\r\n    });\r\n\r\n    const {\r\n        showSuccessMessage,\r\n        showWarningMessage\r\n    } = useContext(ToastContext);\r\n\r\n    const {\r\n        settings\r\n    } = state;\r\n\r\n    const validateWizardData = () => {\r\n        let newValues = null;\r\n        switch (currentStep) {\r\n            case 0:\r\n                newValues = {\r\n                    appleUserEmail: checkWizardValue(\"appleUserEmail\"),\r\n                    appleKeyId: checkWizardValue(\"appleKeyId\"),\r\n                    appleTeamId: checkWizardValue(\"appleTeamId\"),\r\n                };\r\n                break;\r\n            case 1:\r\n                newValues = {\r\n                    p8FileUrl: checkWizardValue(\"p8FileUrl\")\r\n                };\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (newValues) {\r\n            let isValid = true;\r\n            Object.keys(newValues).forEach((key) => {\r\n                if (!newValues[key].isValid)\r\n                    isValid = false;\r\n            });\r\n            setWizardValues({\r\n                ...cloneDeep(wizardValues),\r\n                ...newValues\r\n            });\r\n            return isValid;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const setWizardValue = (value, isValid, errorText) => {\r\n        return { value, isValid: isValid ?? true, errorText: errorText ?? null }\r\n    }\r\n\r\n    const checkWizardValue = (valueName) => {\r\n        return setWizardValue(\r\n            wizardValues[valueName].value,\r\n            wizardValues[valueName].value !== \"\",\r\n            wizardValues[valueName].value === \"\" ? t(\"YupValueRequired\") : null\r\n        )\r\n    }\r\n\r\n    const uploadFileAsync = async (fileType, data, file, credentials) => {\r\n        if (upload) {\r\n            const storedFileInfo = await upload(fileType, data, file, credentials);\r\n            if (storedFileInfo !== null) {\r\n                switch (fileType) {\r\n                    case FileType.iOSP8Certificate:\r\n                        setWizardValues({ ...cloneDeep(wizardValues), p8FileUrl: setWizardValue(storedFileInfo.publicUrl) });\r\n                        showSuccessMessage(t(\"MessageFileUploadOk\"));\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const fileDropHandler = (fileType, file) => {\r\n        let isFileOk = false;\r\n        let wrongFileMessage = null\r\n        if (file.size <= MaxFileSize.Max5MB) {\r\n            switch (fileType) {\r\n                case FileType.iOSP8Certificate:\r\n                    isFileOk = file.name.includes(\".p8\");\r\n                    wrongFileMessage = t(\"MessageiOSInvalidP8File\");\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n        } else {\r\n            showWarningMessage(t(\"MessageWrongFileSize5\"));\r\n            return false;\r\n        }\r\n\r\n        if (isFileOk) {\r\n            return true;\r\n        } else {\r\n            showWarningMessage(wrongFileMessage);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const [currentStep, setStep] = useState(0);\r\n\r\n    const stepBackClickHandler = (e) => {\r\n        if (currentStep > 0)\r\n            setStep(currentStep - 1);\r\n    }\r\n\r\n    const stepNextClickHandler = (e) => {\r\n        if (!validateWizardData()) return;\r\n        if (currentStep < MAX_STEPS - 1)\r\n            setStep(currentStep + 1);\r\n    }\r\n\r\n    const canceledClickHandler = (e) => {\r\n        if (onWizardCanceled) onWizardCanceled();\r\n    }\r\n\r\n    const completeClickHandler = (e) => {\r\n        if (!validateWizardData()) return;\r\n        if (onWizardComplete) {\r\n            onWizardComplete(\r\n                wizardValues.appleKeyId.value,\r\n                wizardValues.appleTeamId.value,\r\n                wizardValues.appleUserEmail.value,\r\n                settings.bundleId\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} className={clsx(classes.root, props.className)}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h5\">\r\n                    {t(\"LabelCertWizardTitle\")}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                    {t(\"LabelStep\")} {currentStep + 1} {t(\"LabelOf\")} {MAX_STEPS}\r\n                </Typography>\r\n            </Grid>\r\n            {currentStep === 0 &&\r\n                <>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={!wizardValues.appleUserEmail.isValid}\r\n                            helperText={wizardValues.appleUserEmail.errorText}\r\n                            type=\"email\"\r\n                            variant=\"outlined\"\r\n                            label=\"Apple Developer Email\"\r\n                            disabled={disabled}\r\n                            inputProps={{\r\n                                autoComplete: 'new-email',\r\n                                form: {\r\n                                    autoComplete: 'off'\r\n                                }\r\n                            }}\r\n                            value={wizardValues.appleUserEmail.value}\r\n                            onChange={(e) => setWizardValues({ ...cloneDeep(wizardValues), appleUserEmail: setWizardValue(e.target.value) })}\r\n                        />\r\n                        <Typography variant=\"caption\" component=\"div\" style={{ marginTop: 3, marginLeft: 14, color: \"#515151\" }}>\r\n                            {t(\"HelperAppleDevEmail\")}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={!wizardValues.appleTeamId.isValid}\r\n                            helperText={wizardValues.appleTeamId.errorText}\r\n                            variant=\"outlined\"\r\n                            label=\"Apple Issuer ID\"\r\n                            disabled={disabled}\r\n                            value={wizardValues.appleTeamId.value}\r\n                            onChange={(e) => setWizardValues({ ...cloneDeep(wizardValues), appleTeamId: setWizardValue(e.target.value) })}\r\n                        />\r\n                        <Typography variant=\"caption\" component=\"div\" style={{ marginTop: 3, marginLeft: 14, color: \"#515151\" }}>\r\n                            {t(\"HelperAppleDevIssuerId\")}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={!wizardValues.appleKeyId.isValid}\r\n                            helperText={wizardValues.appleKeyId.errorText}\r\n                            variant=\"outlined\"\r\n                            label=\"Apple Key ID\"\r\n                            disabled={disabled}\r\n                            value={wizardValues.appleKeyId.value}\r\n                            onChange={(e) => setWizardValues({ ...cloneDeep(wizardValues), appleKeyId: setWizardValue(e.target.value) })}\r\n                        />\r\n                        <Typography variant=\"caption\" component=\"div\" style={{ marginTop: 3, marginLeft: 14, color: \"#515151\" }}>\r\n                            {t(\"HelperAppleDevKeyId\")}\r\n                        </Typography>\r\n                    </Grid>\r\n                </>\r\n            }\r\n            {currentStep === 1 &&\r\n                <>\r\n                    <Grid item xs={12}>\r\n                        {wizardValues.p8FileUrl.value ?\r\n                            <Grid container item xs={12} alignItems=\"center\" justify=\"space-between\">\r\n                                <HttpsIcon />\r\n                                <Typography style={{ width: \"85%\" }}>\r\n                                    {`${FileType.iOSP8Certificate}.p8`}\r\n                                </Typography>\r\n                                <Button\r\n                                    className={classes.deleteButton}\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    disabled={disabled}\r\n                                    size=\"small\"\r\n                                    onClick={() => setWizardValues({ ...cloneDeep(wizardValues), p8FileUrl: setWizardValue(\"\", false) })}>\r\n                                    {t(\"ButtonRemove\")}\r\n                                </Button>\r\n                            </Grid> :\r\n                            <FormControl error={!wizardValues.p8FileUrl.isValid} style={{ width: \"100%\" }}>\r\n                                <UploadFile\r\n                                    title={t(\"LabeliOSP8CertificateFile\")}\r\n                                    singleFile\r\n                                    disabled={disabled}\r\n                                    onFileDrop={(files) => fileDropHandler(FileType.iOSP8Certificate, files[0])}\r\n                                    upload={(data, file) => uploadFileAsync(\r\n                                        FileType.iOSP8Certificate,\r\n                                        data,\r\n                                        file\r\n                                    )}\r\n                                    helpText={t(\"LabelUploadHelp\")}\r\n                                    uploadButtonText={t(\"LabelUploadFile\")}\r\n                                    removeButtonText={t(\"LabelRemoveFile\")}\r\n                                    removeAllButtonText={\"LabelRemoveAllFiles\"}\r\n                                />\r\n                                <FormHelperText>\r\n                                    {t(\"HelperAppleDevTokenFile\")}\r\n                                </FormHelperText>\r\n                                <FormHelperText>\r\n                                    {wizardValues.p8FileUrl.errorText}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        }\r\n                    </Grid>\r\n                </>\r\n            }\r\n            <Grid container item justify=\"space-between\">\r\n                {currentStep === 0 &&\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<ClearIcon />}\r\n                        disabled={disabled}\r\n                        onClick={canceledClickHandler}>\r\n                        {t(\"ButtonCancel\")}\r\n                    </Button>\r\n                }\r\n                {currentStep > 0 &&\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<NavigateBeforeIcon />}\r\n                        disabled={disabled || currentStep == 0}\r\n                        onClick={stepBackClickHandler}>\r\n                        {t(\"ButtonBack\")}\r\n                    </Button>\r\n                }\r\n                {currentStep < MAX_STEPS - 1 &&\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        endIcon={<NavigateNextIcon />}\r\n                        disabled={disabled || currentStep == MAX_STEPS - 1}\r\n                        onClick={stepNextClickHandler}>\r\n                        {t(\"ButtonNext\")}\r\n                    </Button>\r\n                }\r\n                {currentStep === MAX_STEPS - 1 &&\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        disabled={disabled}\r\n                        onClick={completeClickHandler}>\r\n                        {isBusy(\"creatingCerts\") &&\r\n                            <CircularProgress className={classes.progress} size={20} />\r\n                        }\r\n                        {t(\"ButtonGenerate\")}\r\n                    </Button>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { cloneDeep } from 'lodash';\r\n\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    CircularProgress\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    UploadFile\r\n} from '../../../../common';\r\n\r\nimport { ToastContext } from '../../../../contexts/ToastContext';\r\nimport { PageContext } from '../../PageContext';\r\n\r\nimport { FileType } from '../../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HttpsIcon from '@material-ui/icons/Https';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    navButton: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    progress: {\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst MAX_STEPS = 1;\r\n\r\nexport const GoogleCertificatesWizard = ({\r\n    disabled,\r\n    upload,\r\n    onWizardComplete,\r\n    onWizardCanceled,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state,\r\n        isBusy\r\n    } = useContext(PageContext);\r\n\r\n    const [wizardValues, setWizardValues] = useState({\r\n        googleUserEmail: { value: \"\", isValid: true, errorText: null },\r\n        keystoreAlias: { value: \"\", isValid: true, errorText: null }\r\n    });\r\n\r\n    const {\r\n        showSuccessMessage,\r\n        showWarningMessage\r\n    } = useContext(ToastContext);\r\n\r\n    const {\r\n        settings\r\n    } = state;\r\n\r\n    const validateWizardData = () => {\r\n        let newValues = null;\r\n        switch (currentStep) {\r\n            case 0:\r\n                newValues = {\r\n                    googleUserEmail: checkWizardValue(\"googleUserEmail\"),\r\n                    keystoreAlias: checkWizardValue(\"keystoreAlias\"),\r\n                };\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (newValues) {\r\n            let isValid = true;\r\n            Object.keys(newValues).forEach((key) => {\r\n                if (!newValues[key].isValid)\r\n                    isValid = false;\r\n            });\r\n            setWizardValues({\r\n                ...cloneDeep(wizardValues),\r\n                ...newValues\r\n            });\r\n            return isValid;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const setWizardValue = (value, isValid, errorText) => {\r\n        return { value, isValid: isValid ?? true, errorText: errorText ?? null }\r\n    }\r\n\r\n    const checkWizardValue = (valueName) => {\r\n        return setWizardValue(\r\n            wizardValues[valueName].value,\r\n            wizardValues[valueName].value !== \"\",\r\n            wizardValues[valueName].value === \"\" ? t(\"YupValueRequired\") : null\r\n        )\r\n    }\r\n\r\n    const [currentStep, setStep] = useState(0);\r\n\r\n    const stepBackClickHandler = (e) => {\r\n        if (currentStep > 0)\r\n            setStep(currentStep - 1);\r\n    }\r\n\r\n    const stepNextClickHandler = (e) => {\r\n        if (!validateWizardData()) return;\r\n        if (currentStep < MAX_STEPS - 1)\r\n            setStep(currentStep + 1);\r\n    }\r\n\r\n    const canceledClickHandler = (e) => {\r\n        if (onWizardCanceled) onWizardCanceled();\r\n    }\r\n\r\n    const completeClickHandler = (e) => {\r\n        if (!validateWizardData()) return;\r\n        if (onWizardComplete) {\r\n            onWizardComplete(\r\n                wizardValues.keystoreAlias.value,\r\n                wizardValues.googleUserEmail.value,\r\n                settings.bundleId\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} className={clsx(classes.root, props.className)}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h5\">\r\n                    {t(\"LabelCertWizardTitle\")}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                    {t(\"LabelStep\")} {currentStep + 1} {t(\"LabelOf\")} {MAX_STEPS}\r\n                </Typography>\r\n            </Grid>\r\n            {currentStep === 0 &&\r\n                <>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={!wizardValues.googleUserEmail.isValid}\r\n                            helperText={wizardValues.googleUserEmail.errorText}\r\n                            type=\"email\"\r\n                            variant=\"outlined\"\r\n                            label=\"Google Developer Email\"\r\n                            disabled={disabled}\r\n                            inputProps={{\r\n                                autoComplete: 'new-email',\r\n                                form: {\r\n                                    autoComplete: 'off'\r\n                                }\r\n                            }}\r\n                            value={wizardValues.googleUserEmail.value}\r\n                            onChange={(e) => setWizardValues({ ...cloneDeep(wizardValues), googleUserEmail: setWizardValue(e.target.value) })}\r\n                        />\r\n                        <Typography variant=\"caption\" component=\"div\" style={{ marginTop: 3, marginLeft: 14, color: \"#515151\" }}>\r\n                            {t(\"HelperAndroidDevEmail\")}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={!wizardValues.keystoreAlias.isValid}\r\n                            helperText={wizardValues.keystoreAlias.errorText}\r\n                            variant=\"outlined\"\r\n                            label=\"Keystore Alias\"\r\n                            disabled={disabled}\r\n                            value={wizardValues.keystoreAlias.value}\r\n                            onChange={(e) => setWizardValues({ ...cloneDeep(wizardValues), keystoreAlias: setWizardValue(e.target.value) })}\r\n                        />\r\n                        <Typography variant=\"caption\" component=\"div\" style={{ marginTop: 3, marginLeft: 16, color: \"#515151\" }}>\r\n                            {t(\"HelperAndroidDevKSAlias\")}\r\n                        </Typography>\r\n                    </Grid>\r\n                </>\r\n            }\r\n            <Grid container item justify=\"space-between\">\r\n                {currentStep === 0 &&\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<ClearIcon />}\r\n                        disabled={disabled}\r\n                        onClick={canceledClickHandler}>\r\n                        {t(\"ButtonCancel\")}\r\n                    </Button>\r\n                }\r\n                {currentStep > 0 &&\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<NavigateBeforeIcon />}\r\n                        disabled={disabled || currentStep == 0}\r\n                        onClick={stepBackClickHandler}>\r\n                        {t(\"ButtonBack\")}\r\n                    </Button>\r\n                }\r\n                {currentStep < MAX_STEPS - 1 &&\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        endIcon={<NavigateNextIcon />}\r\n                        disabled={disabled || currentStep == MAX_STEPS - 1}\r\n                        onClick={stepNextClickHandler}>\r\n                        {t(\"ButtonNext\")}\r\n                    </Button>\r\n                }\r\n                {currentStep === MAX_STEPS - 1 &&\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        disabled={disabled}\r\n                        onClick={completeClickHandler}>\r\n                        {isBusy(\"creatingCerts\") &&\r\n                            <CircularProgress className={classes.progress} size={20} />\r\n                        }\r\n                        {t(\"ButtonGenerate\")}\r\n                    </Button>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    IconButton,\r\n    Divider,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Alert,\r\n    AlertTitle\r\n} from '@material-ui/lab';\r\n\r\nimport {\r\n    FieldError,\r\n    UploadFile\r\n} from '../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    AppleCertificatesWizard\r\n} from './Wizards';\r\n\r\nimport { PageContext } from '../PageContext';\r\nimport { ToastContext } from '../../../contexts/ToastContext';\r\n\r\nimport { FileType, MaxFileSize, getColoredBottonStyle } from '../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    },\r\n    deleteButton: {\r\n        //...getColoredBottonStyle(theme, colors.red)\r\n        color: colors.red[500],\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    resetButton: {\r\n        ...getColoredBottonStyle(theme, colors.red)\r\n    },\r\n    helpMeButton: {\r\n        ...getColoredBottonStyle(theme, colors.orange)\r\n    },\r\n    wizard: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nexport const IosForm = ({\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    createCerts,\r\n    onBlur,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state,\r\n        mergeSettings\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        showSuccessMessage,\r\n        showWarningMessage\r\n    } = useContext(ToastContext);\r\n\r\n    const {\r\n        settings\r\n    } = state;\r\n\r\n    const uploadFileAsync = async (fileType, data, file, credentials) => {\r\n        if (upload) {\r\n            const storedFileInfo = await upload(fileType, data, file, credentials);\r\n            if (storedFileInfo !== null) {\r\n                switch (fileType) {\r\n                    case FileType.iOSP12Certificate:\r\n                        mergeSettings({ iOSP12CertificateFile: storedFileInfo.publicUrl });\r\n                        showSuccessMessage(t(\"MessageFileUploadOk\"));\r\n                        break;\r\n                    case FileType.iOSMobileProvisioning:\r\n                        mergeSettings({ iOSMobileProvisionFile: storedFileInfo.publicUrl });\r\n                        showSuccessMessage(t(\"MessageFileUploadOk\"));\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const getInitialValues = () => {\r\n        return {\r\n            enableiOSBuild: settings.enableiOSBuild ? settings.enableiOSBuild : false,\r\n            iOSCertificatePassword: settings.iOSCertificatePassword ? settings.iOSCertificatePassword : \"\",\r\n            iOSP12CertificateFile: settings.iOSP12CertificateFile ? settings.iOSP12CertificateFile : \"\",\r\n            iOSMobileProvisionFile: settings.iOSMobileProvisionFile ? settings.iOSMobileProvisionFile : \"\",\r\n        };\r\n    }\r\n\r\n    const fileDropHandler = (fileType, file) => {\r\n        let isFileOk = false;\r\n        let wrongFileMessage = null\r\n        if (file.size <= MaxFileSize.Max5MB) {\r\n            switch (fileType) {\r\n                case FileType.iOSP12Certificate:\r\n                    isFileOk = file.type === \"application/x-pkcs12\" && file.name.includes(\".p12\");\r\n                    wrongFileMessage = t(\"MessageiOSInvalidP12File\");\r\n                    break;\r\n                case FileType.iOSMobileProvisioning:\r\n                    isFileOk = file.name.includes(\".mobileprovision\");\r\n                    wrongFileMessage = t(\"MessageiOSInvalidPPFile\");\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n        } else {\r\n            showWarningMessage(t(\"MessageWrongFileSize5\"));\r\n            return false;\r\n        }\r\n\r\n        if (isFileOk) {\r\n            return true;\r\n        } else {\r\n            showWarningMessage(wrongFileMessage);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const submitClickHandler = (values, actions) => {\r\n        if (onSubmit) onSubmit(values, () => actions.setSubmitting(false));\r\n    }\r\n\r\n    const resetValuesHandler = () => {\r\n        mergeSettings({\r\n            iOSCertificatePassword: \"\",\r\n            iOSP12CertificateFile: \"\",\r\n            iOSMobileProvisionFile: \"\"\r\n        });\r\n    }\r\n\r\n    const [inWizard, setInWizard] = useState(false);\r\n    const startWizardClickHandler = () => {\r\n        setInWizard(true);\r\n    }\r\n\r\n    const wizardCompletedHandler = async (keyId, teamId, email, bundleId) => {\r\n        if (createCerts) {\r\n            const certsInfo = await createCerts(keyId, teamId, email, bundleId);\r\n            if (certsInfo) {\r\n                setInWizard(false);\r\n                mergeSettings({\r\n                    iOSCertificatePassword: certsInfo.p12Password,\r\n                    iOSP12CertificateFile: certsInfo.p12PublicUrl,\r\n                    iOSMobileProvisionFile: certsInfo.profilePublicUrl\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const [isConfigured, setIsConfigured] = useState(false);\r\n    useEffect(() => {\r\n        setIsConfigured(\r\n            settings.iOSCertificatePassword\r\n            && settings.iOSP12CertificateFile\r\n            && settings.iOSMobileProvisionFile\r\n        );\r\n    }, [settings]);\r\n\r\n    return (\r\n        <Card className={clsx(classes.root, props.className)}>\r\n            <CardContent>\r\n                <Container maxWidth=\"lg\" className={classes.content}>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        initialValues={getInitialValues()}\r\n                        onSubmit={submitClickHandler}\r\n                        innerRef={formRef}\r\n                        validationSchema={validationSchema}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={true}\r\n                        validate={(values) => {\r\n                            if (onBlur) onBlur(values);\r\n                        }}>\r\n                        {(props) => {\r\n                            const {\r\n                                values,\r\n                                isSubmitting,\r\n                                handleSubmit,\r\n                                setFieldValue\r\n                            } = props;\r\n                            return (\r\n                                <Form noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid container item xs={12} alignContent=\"center\" justify=\"space-between\">\r\n                                            <div>\r\n                                                <Field\r\n                                                    type=\"checkbox\"\r\n                                                    name=\"enableiOSBuild\"\r\n                                                    component={CheckboxWithLabel}\r\n                                                    Label={{ label: t(\"LabeliOSBuildEnabled\") }}\r\n                                                    disabled={disabled}\r\n                                                />\r\n                                                <FieldError\r\n                                                    name=\"enableiOSBuild\"\r\n                                                    errors={errors}\r\n                                                />\r\n                                            </div>\r\n                                            <Button\r\n                                                className={classes.resetButton}\r\n                                                disabled={!values.enableiOSBuild || !isConfigured || disabled}\r\n                                                onClick={() => resetValuesHandler()}>\r\n                                                {t(\"ButtonResetCertificates\")}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        {false && values.enableiOSBuild &&\r\n                                            <>\r\n                                                <Grid item xs={12}>\r\n                                                    <Divider />\r\n                                                </Grid>\r\n                                                <Grid item xs={12}>\r\n                                                    {inWizard ?\r\n                                                        <>\r\n                                                            {settings.bundleId ?\r\n                                                                <>\r\n                                                                    <Alert severity=\"info\" variant=\"outlined\">\r\n                                                                        <span\r\n                                                                            dangerouslySetInnerHTML={{ __html: t(\"LabeliOSCertWizardWizardHint\") }}\r\n                                                                        />\r\n                                                                    </Alert>\r\n                                                                    <AppleCertificatesWizard\r\n                                                                        className={classes.wizard}\r\n                                                                        upload={upload}\r\n                                                                        disabled={!values.enableiOSBuild || disabled}\r\n                                                                        onWizardCanceled={() => setInWizard(false)}\r\n                                                                        onWizardComplete={wizardCompletedHandler}\r\n                                                                    />\r\n                                                                </>\r\n                                                                :\r\n                                                                <>\r\n                                                                    <Alert severity=\"warning\" variant=\"outlined\">\r\n                                                                        <span\r\n                                                                            dangerouslySetInnerHTML={{ __html: t(\"LabelCertWizardBundleId\") }}\r\n                                                                        />\r\n                                                                    </Alert>\r\n                                                                </>\r\n                                                            }\r\n                                                        </>\r\n                                                        :\r\n                                                        <>\r\n                                                            {!isConfigured &&\r\n                                                                <Alert\r\n                                                                    severity=\"info\"\r\n                                                                    variant=\"outlined\">\r\n                                                                    <AlertTitle>\r\n                                                                        {t(\"LabelCertWizardHelpTitle\")}\r\n                                                                    </AlertTitle>\r\n                                                                    <div\r\n                                                                        dangerouslySetInnerHTML={{ __html: t(\"LabeliOSCertWizardHelpBody\") }}\r\n                                                                    />\r\n                                                                    <Grid container justify=\"flex-end\">\r\n                                                                        <Grid item>\r\n                                                                            <Button\r\n                                                                                color=\"primary\"\r\n                                                                                variant=\"contained\"\r\n                                                                                disabled={!values.enableiOSBuild || disabled}\r\n                                                                                onClick={startWizardClickHandler}>\r\n                                                                                {t(\"ButtonStartWizard\")}\r\n                                                                            </Button>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Alert>\r\n                                                            }\r\n                                                        </>\r\n                                                    }\r\n                                                </Grid>\r\n                                            </>\r\n                                        }\r\n                                        {!inWizard &&\r\n                                            <>\r\n                                                {!isConfigured &&\r\n                                                    <Grid item xs={12}>\r\n                                                        <Divider />\r\n                                                    </Grid>\r\n                                                }\r\n                                                <Grid item xs={12}>\r\n                                                    <Field\r\n                                                        className={classes.field}\r\n                                                        name=\"iOSCertificatePassword\"\r\n                                                        type=\"password\"\r\n                                                        variant=\"outlined\"\r\n                                                        label={t(\"LabeliOSCertificatePassword\")}\r\n                                                        helperText={t(\"HelperiOSCertificatePassword\")}\r\n                                                        disabled={!values.enableiOSBuild || values.iOSP12CertificateFile !== \"\" || inWizard || disabled}\r\n                                                        component={TextField}\r\n                                                        inputProps={{\r\n                                                            autoComplete: 'new-password',\r\n                                                            form: {\r\n                                                                autoComplete: 'off'\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                    <FieldError\r\n                                                        name=\"iOSCertificatePassword\"\r\n                                                        errors={errors}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <>\r\n                                                    {values.iOSP12CertificateFile ?\r\n                                                        <Grid container item xs={12} alignItems=\"center\" justify=\"flex-start\">\r\n                                                            <InsertDriveFileIcon fontSize=\"large\" />\r\n                                                            <Typography>\r\n                                                                {`${FileType.iOSP12Certificate}.p12`}\r\n                                                            </Typography>\r\n                                                            <IconButton\r\n                                                                className={classes.deleteButton}\r\n                                                                size=\"small\"\r\n                                                                disabled={!values.enableiOSBuild || inWizard || disabled}\r\n                                                                onClick={() => mergeSettings({ iOSP12CertificateFile: \"\" })}>\r\n                                                                <DeleteIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                        :\r\n                                                        <Grid item xs={12}>\r\n                                                            <UploadFile\r\n                                                                title={t(\"LabeliOSP12CertificateFile\")}\r\n                                                                singleFile\r\n                                                                onFileDrop={(files) => fileDropHandler(FileType.iOSP12Certificate, files[0])}\r\n                                                                disabled={!values.enableiOSBuild || inWizard || disabled}\r\n                                                                upload={(data, file) => uploadFileAsync(\r\n                                                                    FileType.iOSP12Certificate,\r\n                                                                    data,\r\n                                                                    file,\r\n                                                                    { password: values.iOSCertificatePassword }\r\n                                                                )}\r\n                                                                helpText={t(\"LabelUploadHelp\")}\r\n                                                                uploadButtonText={t(\"LabelUploadFile\")}\r\n                                                                removeButtonText={t(\"LabelRemoveFile\")}\r\n                                                                removeAllButtonText={\"LabelRemoveAllFiles\"}\r\n                                                            />\r\n                                                            <FieldError\r\n                                                                name=\"iOSP12CertificateFile\"\r\n                                                                errors={errors}\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    }\r\n                                                    <Grid item xs={12}>\r\n                                                        <Divider />\r\n                                                    </Grid>\r\n                                                </>\r\n                                                <>\r\n                                                    {values.iOSMobileProvisionFile ?\r\n                                                        <Grid container item xs={12} alignItems=\"center\" justify=\"flex-start\">\r\n                                                            <InsertDriveFileIcon fontSize=\"large\" />\r\n                                                            <Typography>\r\n                                                                {`${FileType.iOSMobileProvisioning}.mobileprovision`}\r\n                                                            </Typography>\r\n                                                            <IconButton\r\n                                                                className={classes.deleteButton}\r\n                                                                size=\"small\"\r\n                                                                disabled={!values.enableiOSBuild || inWizard || disabled}\r\n                                                                onClick={() => mergeSettings({ iOSMobileProvisionFile: \"\" })}>\r\n                                                                <DeleteIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                        :\r\n                                                        <Grid item xs={12}>\r\n                                                            <UploadFile\r\n                                                                title={t(\"LabeliOSMobileProvisionFile\")}\r\n                                                                singleFile\r\n                                                                onFileDrop={(files) => fileDropHandler(FileType.iOSMobileProvisioning, files[0])}\r\n                                                                disabled={!values.enableiOSBuild || inWizard || disabled}\r\n                                                                upload={(data, file) => uploadFileAsync(FileType.iOSMobileProvisioning, data, file)}\r\n                                                                helpText={t(\"LabelUploadHelp\")}\r\n                                                                uploadButtonText={t(\"LabelUploadFile\")}\r\n                                                                removeButtonText={t(\"LabelRemoveFile\")}\r\n                                                                removeAllButtonText={\"LabelRemoveAllFiles\"}\r\n                                                            />\r\n                                                            <FieldError\r\n                                                                name=\"iOSMobileProvisionFile\"\r\n                                                                errors={errors}\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    }\r\n                                                    <Grid item xs={12}>\r\n                                                        <Divider />\r\n                                                    </Grid>\r\n                                                </>\r\n                                            </>\r\n                                        }\r\n                                    </Grid>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </Container>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    IconButton,\r\n    Divider,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Alert,\r\n    AlertTitle\r\n} from '@material-ui/lab';\r\n\r\nimport {\r\n    FieldError,\r\n    UploadFile\r\n} from '../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    GoogleCertificatesWizard\r\n} from './Wizards';\r\n\r\nimport { PageContext } from '../PageContext';\r\nimport { ToastContext } from '../../../contexts/ToastContext';\r\n\r\nimport { FileType, MaxFileSize, getColoredBottonStyle } from '../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    },\r\n    deleteButton: {\r\n        //...getColoredBottonStyle(theme, colors.red)\r\n        color: colors.red[500],\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    resetButton: {\r\n        ...getColoredBottonStyle(theme, colors.red)\r\n    },\r\n    helpMeButton: {\r\n        ...getColoredBottonStyle(theme, colors.orange)\r\n    },\r\n    wizard: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nexport const AndroidForm = ({\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    createCerts,\r\n    onBlur,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state,\r\n        mergeSettings\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        showSuccessMessage,\r\n        showWarningMessage\r\n    } = useContext(ToastContext);\r\n\r\n    const {\r\n        settings\r\n    } = state;\r\n\r\n    const uploadFileAsync = async (fileType, data, file, credentials) => {\r\n        if (upload) {\r\n            const storedFileInfo = await upload(fileType, data, file, credentials);\r\n            if (storedFileInfo !== null) {\r\n                switch (fileType) {\r\n                    case FileType.AndroidKeyStore:\r\n                        mergeSettings({ androidKeyStoreFile: storedFileInfo.publicUrl });\r\n                        showSuccessMessage(t(\"MessageFileUploadOk\"));\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const getInitialValues = () => {\r\n        return {\r\n            enableAndroidBuild: settings.enableAndroidBuild ? settings.enableAndroidBuild : false,\r\n            androidKeyStoreFile: settings.androidKeyStoreFile ? settings.androidKeyStoreFile : \"\",\r\n            androidKeyStoreAlias: settings.androidKeyStoreAlias ? settings.androidKeyStoreAlias : \"\",\r\n            androidKeyStorePassword: settings.androidKeyStorePassword ? settings.androidKeyStorePassword : \"\",\r\n        };\r\n    }\r\n\r\n    const fileDropHandler = (fileType, file) => {\r\n        let isFileOk = false;\r\n        let wrongFileMessage = null\r\n        if (file.size <= MaxFileSize.Max5MB) {\r\n            switch (fileType) {\r\n                case FileType.AndroidKeyStore:\r\n                    isFileOk = file.name.includes(\".keystore\");\r\n                    wrongFileMessage = t(\"MessageAndroidInvalidKSFile\");\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n        } else {\r\n            showWarningMessage(t(\"MessageWrongFileSize5\"));\r\n            return false;\r\n        }\r\n\r\n        if (isFileOk) {\r\n            return true;\r\n        } else {\r\n            showWarningMessage(wrongFileMessage);\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    const submitClickHandler = (values, actions) => {\r\n        if (onSubmit) onSubmit(values, () => actions.setSubmitting(false));\r\n    }\r\n\r\n    const resetValuesHandler = () => {\r\n        mergeSettings({\r\n            androidKeyStoreAlias: \"\",\r\n            androidKeyStorePassword: \"\",\r\n            androidKeyStoreFile: \"\"\r\n        });\r\n    }\r\n\r\n    const [inWizard, setInWizard] = useState(false);\r\n    const startWizardClickHandler = () => {\r\n        setInWizard(true);\r\n    }\r\n\r\n    const wizardCompletedHandler = async (keystoreAlias, email, bundleId) => {\r\n        if (createCerts) {\r\n            const certsInfo = await createCerts(keystoreAlias, email, bundleId);\r\n            if (certsInfo) {\r\n                setInWizard(false);\r\n                mergeSettings({\r\n                    androidKeyStoreAlias: certsInfo.keystoreAlias,\r\n                    androidKeyStorePassword: certsInfo.keystorePassword,\r\n                    androidKeyStoreFile: certsInfo.keystorePublicUrl,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const [isConfigured, setIsConfigured] = useState(false);\r\n    useEffect(() => {\r\n        setIsConfigured(\r\n         //    settings.androidKeyStoreAlias && \r\n               settings.androidKeyStorePassword\r\n            && settings.androidKeyStoreFile\r\n        );\r\n    }, [settings]);\r\n\r\n    return (\r\n        <Card className={clsx(classes.root, props.className)}>\r\n            <CardContent>\r\n                <Container maxWidth=\"lg\" className={classes.content}>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        initialValues={getInitialValues()}\r\n                        onSubmit={submitClickHandler}\r\n                        innerRef={formRef}\r\n                        validationSchema={validationSchema}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={true}\r\n                        validate={(values) => {\r\n                            if (onBlur) onBlur(values);\r\n                        }}>\r\n                        {(props) => {\r\n                            const {\r\n                                values,\r\n                                isSubmitting,\r\n                                handleSubmit,\r\n                                setFieldValue\r\n                            } = props;\r\n                            return (\r\n                                <Form noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid container item xs={12} alignContent=\"center\" justify=\"space-between\">\r\n                                            <div>\r\n                                                <Field\r\n                                                    type=\"checkbox\"\r\n                                                    name=\"enableAndroidBuild\"\r\n                                                    component={CheckboxWithLabel}\r\n                                                    Label={{ label: t(\"LabelAndroidBuildEnabled\") }}\r\n                                                    disabled={disabled}\r\n                                                />\r\n                                                <FieldError\r\n                                                    name=\"enableAndroidBuild\"\r\n                                                    errors={errors}\r\n                                                />\r\n                                            </div>\r\n                                            <Button\r\n                                                className={classes.resetButton}\r\n                                                disabled={!values.enableAndroidBuild || !isConfigured || disabled}\r\n                                                onClick={() => resetValuesHandler()}>\r\n                                                {t(\"ButtonResetCertificates\")}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                       {false && values.enableAndroidBuild &&\r\n                                            <>\r\n                                                <Grid item xs={12}>\r\n                                                    <Divider />\r\n                                                </Grid>\r\n                                                <Grid item xs={12}>\r\n                                                    {inWizard ?\r\n                                                        <>\r\n                                                            {settings.bundleId ?\r\n                                                                <>\r\n                                                                    <Alert severity=\"info\" variant=\"outlined\">\r\n                                                                        <span\r\n                                                                            dangerouslySetInnerHTML={{ __html: t(\"LabelAndroidCertWizardWizardHint\") }}\r\n                                                                        />\r\n                                                                    </Alert>\r\n                                                                    <GoogleCertificatesWizard\r\n                                                                        className={classes.wizard}\r\n                                                                        upload={upload}\r\n                                                                        disabled={!values.enableAndroidBuild || disabled}\r\n                                                                        onWizardCanceled={() => setInWizard(false)}\r\n                                                                        onWizardComplete={wizardCompletedHandler}\r\n                                                                    />\r\n                                                                </>\r\n                                                                :\r\n                                                                <Alert severity=\"warning\" variant=\"outlined\">\r\n                                                                    <span\r\n                                                                        dangerouslySetInnerHTML={{ __html: t(\"LabelCertWizardBundleId\") }}\r\n                                                                    />\r\n                                                                </Alert>\r\n                                                            }\r\n                                                        </>\r\n                                                        :\r\n                                                        <>\r\n                                                            {!isConfigured &&\r\n                                                                <Alert\r\n                                                                    severity=\"info\"\r\n                                                                    variant=\"outlined\">\r\n                                                                    <AlertTitle>\r\n                                                                        {t(\"LabelCertWizardHelpTitle\")}\r\n                                                                    </AlertTitle>\r\n                                                                    <div\r\n                                                                        dangerouslySetInnerHTML={{ __html: t(\"LabelAndroidCertWizardHelpBody\") }}\r\n                                                                    />\r\n                                                                    <Grid container justify=\"flex-end\">\r\n                                                                        <Grid item>\r\n                                                                            <Button\r\n                                                                                color=\"primary\"\r\n                                                                                variant=\"contained\"\r\n                                                                                disabled={!values.enableAndroidBuild || disabled}\r\n                                                                                onClick={startWizardClickHandler}>\r\n                                                                                {t(\"ButtonStartWizard\")}\r\n                                                                            </Button>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Alert>\r\n                                                            }\r\n                                                        </>\r\n                                                    }\r\n                                                </Grid>\r\n                                            </>\r\n                                        }\r\n                                        {!inWizard &&\r\n                                            <>\r\n                                                { \r\n                                                /*\r\n                                                <Grid item xs={12}>\r\n                                                    <Field\r\n                                                        className={classes.field}\r\n                                                        name=\"androidKeyStoreAlias\"\r\n                                                        type=\"text\"\r\n                                                        variant=\"outlined\"\r\n                                                        label={t(\"LabelAndroidKeyStoreAlias\")}\r\n                                                        helperText={t(\"HelperAndroidKeyStoreAlias\")}\r\n                                                        disabled={!values.enableAndroidBuild || values.androidKeyStoreFile !== \"\" || inWizard || disabled}\r\n                                                        component={TextField}\r\n                                                        inputProps={{\r\n                                                            autoComplete: 'new-password',\r\n                                                            form: {\r\n                                                                autoComplete: 'off'\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                    <FieldError\r\n                                                        name=\"androidKeyStoreAlias\"\r\n                                                        errors={errors}\r\n                                                    />\r\n                                                </Grid>\r\n                                                */\r\n                                                }\r\n                                                <Grid item xs={12}>\r\n                                                    <Field\r\n                                                        className={classes.field}\r\n                                                        name=\"androidKeyStorePassword\"\r\n                                                        type=\"password\"\r\n                                                        variant=\"outlined\"\r\n                                                        label={t(\"LabelAndroidKeyStorePassword\")}\r\n                                                        helperText={t(\"HelperAndroidKeyStorePassword\")}\r\n                                                        disabled={!values.enableAndroidBuild || values.androidKeyStoreFile !== \"\" || inWizard || disabled}\r\n                                                        component={TextField}\r\n                                                        inputProps={{\r\n                                                            autoComplete: 'new-password',\r\n                                                            form: {\r\n                                                                autoComplete: 'off'\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                    <FieldError\r\n                                                        name=\"androidKeyStorePassword\"\r\n                                                        errors={errors}\r\n                                                    />\r\n                                                </Grid>\r\n                                                {values.androidKeyStoreFile ?\r\n                                                    <Grid container item xs={12} alignItems=\"center\" justify=\"flex-start\">\r\n                                                        <InsertDriveFileIcon fontSize=\"large\" />\r\n                                                        <Typography>\r\n                                                            {`${FileType.AndroidKeyStore}.keystore`}\r\n                                                        </Typography>\r\n                                                        <IconButton\r\n                                                            className={classes.deleteButton}\r\n                                                            size=\"small\"\r\n                                                            disabled={!values.enableAndroidBuild || inWizard || disabled}\r\n                                                            onClick={() => mergeSettings({ androidKeyStoreFile: \"\" })}>\r\n                                                            <DeleteIcon />\r\n                                                        </IconButton>\r\n                                                    </Grid>\r\n                                                    :\r\n                                                    <Grid item xs={12}>\r\n                                                        <UploadFile\r\n                                                            title={t('LabelAndroidKeyStoreFile')}\r\n                                                            singleFile\r\n                                                            onFileDrop={(files) => fileDropHandler(FileType.AndroidKeyStore, files[0])}\r\n                                                            disabled={!values.enableAndroidBuild || inWizard || disabled}\r\n                                                            upload={(data, file) => uploadFileAsync(\r\n                                                                FileType.AndroidKeyStore,\r\n                                                                data,\r\n                                                                file,\r\n                                                                { alias: values.androidKeyStoreAlias, password: values.androidKeyStorePassword }\r\n                                                            )}\r\n                                                            helpText={t(\"LabelUploadHelp\")}\r\n                                                            uploadButtonText={t(\"LabelUploadFile\")}\r\n                                                            removeButtonText={t(\"LabelRemoveFile\")}\r\n                                                            removeAllButtonText={\"LabelRemoveAllFiles\"}\r\n                                                        />\r\n                                                        <FieldError\r\n                                                            name=\"androidKeyStoreFile\"\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                }\r\n                                            </>\r\n                                        }\r\n                                    </Grid>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </Container>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Grid,\r\n    Typography,\r\n    Divider,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Alert\r\n} from '@material-ui/lab';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    Switch,\r\n    TextField,\r\n    CheckboxWithLabel\r\n} from 'formik-material-ui';\r\n\r\nimport { PageContext } from '../PageContext';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport const ServicesForm = ({\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    onBlur,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        settings\r\n    } = state;\r\n\r\n    const getInitialValues = () => {\r\n        return {\r\n            oneSignalAppId: settings.oneSignalAppId ? settings.oneSignalAppId : \"\",\r\n            shareAppAndroid: settings.shareAppAndroid ? settings.shareAppAndroid : \"\",\r\n            shareAppIos: settings.shareAppAndroid ? settings.shareAppIos : \"\",\r\n            sendGripApiKey: settings.sendGripApiKey ? settings.sendGripApiKey : \"\"\r\n        };\r\n    }\r\n\r\n    const submitClickHandler = (values, actions) => {\r\n        if (onSubmit) onSubmit(values, () => actions.setSubmitting(false));\r\n    }\r\n\r\n    return (\r\n        <Card className={clsx(classes.root, props.className)}>\r\n            <CardContent>\r\n                <Container maxWidth=\"lg\" className={classes.content}>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        initialValues={getInitialValues()}\r\n                        onSubmit={submitClickHandler}\r\n                        innerRef={formRef}\r\n                        validationSchema={validationSchema}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={true}\r\n                        validate={(values) => {\r\n                            if (onBlur) onBlur(values);\r\n                        }}>\r\n                        {(props) => {\r\n                            const {\r\n                                values,\r\n                                isSubmitting,\r\n                                handleSubmit,\r\n                                setFieldValue\r\n                            } = props;\r\n                            return (\r\n                                <Form noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant=\"h5\" component=\"h2\">\r\n                                                Push Notifications\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        {/* <Grid item xs={12}>\r\n                                            <Alert severity=\"info\">\r\n                                                {t(\"LabelOneSignalHelp\")}\r\n                                                Requires your OneSignal User Auth Key, available in\r\n                                                <a href=\"https://documentation.onesignal.com/docs/accounts-and-keys#user-auth-key\">Account & API Keys.</a>\r\n                                            </Alert>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                className={classes.field}\r\n                                                name=\"oneSignalAuthKey\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                label={t(\"LabelOneSignalAuthKey\")}\r\n                                                helperText={t(\"HelperOneSignalAuthKey\")}\r\n                                                component={TextField}\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <FieldError\r\n                                                name=\"oneSignalAuthKey\"\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid> */}\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                className={classes.field}\r\n                                                name=\"oneSignalAppId\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                label={t(\"LabelOneSignalAppId\")}\r\n                                                helperText={t(\"HelperOneSignalAppId\")}\r\n                                                component={TextField}\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <FieldError\r\n                                                name=\"oneSignalAppId\"\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Divider variant=\"fullWidth\" />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant=\"h5\" component=\"h2\">\r\n                                                SendGrid\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Field\r\n                                                className={classes.field}\r\n                                                name=\"sendGripApiKey\"\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                label={t(\"LabelSendGripApiKey\")}\r\n                                                helperText={t(\"HelperSendGripApiKey\")}\r\n                                                component={TextField}\r\n                                                disabled={disabled}\r\n                                            />\r\n                                            <FieldError\r\n                                                name=\"sendGripApiKey\"\r\n                                                errors={errors}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </Container>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { cloneDeep } from 'lodash';\r\nimport clsx from \"clsx\";\r\n\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Grid,\r\n    Divider,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography,\r\n    colors\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n    IconPicker,\r\n    ColorPicker,\r\n    FieldError,\r\n    UploadFile\r\n} from \"../../../../common\";\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field,\r\n    ErrorMessage\r\n} from \"formik\";\r\n\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from \"formik-material-ui\";\r\n\r\nimport { PageContext } from \"../../PageContext\";\r\nimport { ToastContext } from '../../../../contexts/ToastContext';\r\n\r\n\r\nimport { ImageType, MaxFileSize, getColoredBottonStyle } from '../../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: \"100%\"\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    },\r\n    colorPicker: {\r\n    },\r\n    deleteButton: {\r\n        ...getColoredBottonStyle(theme, colors.red)\r\n    },\r\n    deleteButton2: {\r\n        ...getColoredBottonStyle(theme, colors.grey)\r\n    }\r\n}));\r\n\r\nconst fontSizeOptions = [\r\n    { label: \"Micro\", value: \"micro\" },\r\n    { label: \"Small\", value: \"small\" },\r\n    { label: \"Medium\", value: \"medium\" },\r\n    { label: \"Large\", value: \"large\" },\r\n]\r\n\r\nconst fontStyleOptions = [\r\n    { label: \"Regular\", value: \"regular\" },\r\n    { label: \"Bold\", value: \"bold\" },\r\n    { label: \"Italic\", value: \"italic\" },\r\n]\r\n\r\nconst platformOptions = [\r\n    { label: \"iOS\", value: \"ios\" },\r\n    { label: \"Android\", value: \"android\" },\r\n    { label: \"iOS, Android\", value: \"ios, android\" },\r\n]\r\n\r\nconst BaseMenuItemSchema = Yup.object().shape({\r\n\r\n});\r\n\r\nexport const BaseMenuItem = ({\r\n    item,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    icons,\r\n    disableIcon,\r\n    disableTitle,\r\n    disableBackgroundColor,\r\n    disableTextColor,\r\n    disableFontSize,\r\n    disableFontStyle,\r\n    disablePlatform,\r\n    disableIsVisible,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        showWarningMessage\r\n    } = useContext(ToastContext);\r\n\r\n    const {\r\n        settings\r\n    } = state;\r\n\r\n    const {\r\n        children\r\n    } = props;\r\n\r\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n\r\n    const [bkgImage, setBkgImage] = useState(item.backgroundImage);\r\n    const setImage = (file) => {\r\n        setBkgImage(URL.createObjectURL(file));\r\n    }\r\n\r\n    const uploadfileAsync = async (data, file) => {\r\n        if (upload) {\r\n            const storedImageInfo = await upload(ImageType.MenuItem, data, file);\r\n            if (storedImageInfo !== null) {\r\n                setImage(file);\r\n                formRef.current.setFieldValue(\"backgroundImage\", storedImageInfo.publicUrl);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const getInitialValues = () => {\r\n        if (item) {\r\n            return {\r\n                ...cloneDeep(item),\r\n                isVisible: item.isVisible ?? false,\r\n                isProtected: item.isProtected ?? false,\r\n                hideIcon: item.hideIcon ?? false,\r\n                hideTitle: item.hideTitle ?? false\r\n            };\r\n        } else {\r\n            return {}\r\n        }\r\n    }\r\n\r\n    const submitClickHandler = (values, actions) => {\r\n        if (onSubmit) onSubmit(item.id, values, () => actions.setSubmitting(false));\r\n    }\r\n\r\n    const removeItemHandler = () => {\r\n        setOpenDeleteDialog(false);\r\n        if (onRemove) onRemove(item)\r\n    }\r\n\r\n    const fileDropHandler = (file) => {\r\n        if (file.type.includes('image')\r\n            && file.name.endsWith(\".png\")) {\r\n            if (file.size <= MaxFileSize.Max1MB) {\r\n                return true;\r\n            } else {\r\n                showWarningMessage(t(\"MessageWrongFileSize1\"));\r\n                return false;\r\n            }\r\n        } else {\r\n            showWarningMessage(t(\"MessageWrongImageFormat\"));\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const resetImageHandler = () => {\r\n        setBkgImage(null);\r\n        formRef.current.setFieldValue(\"backgroundImage\", null);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={getInitialValues()}\r\n                onSubmit={submitClickHandler}\r\n                innerRef={formRef}\r\n                validationSchema={validationSchema}\r\n                validate={(values) => {\r\n                    if (onUpdated) onUpdated(item, values);\r\n                }}>\r\n                {(props) => {\r\n                    const {\r\n                        values,\r\n                        setValues\r\n                    } = props;\r\n                    return (\r\n                        <Form noValidate autoComplete=\"off\">\r\n                            <Grid container direction=\"row\" style={{ width: \"100%\", height: \"100%\" }}>\r\n                                <Grid item xs={12} style={{ marginBottom: 10 }}>\r\n                                    <Grid container direction=\"row\" justify=\"space-between\">\r\n                                        <Grid item >\r\n                                            <Grid container direction=\"row\" alignItems=\"center\">\r\n                                                <Grid item style={{ marginRight: 20, fontSize: 36 }}>\r\n                                                    <i className={values.icon} />\r\n                                                </Grid>\r\n                                                <Grid item >\r\n                                                    <Grid container direction=\"row\">\r\n                                                        <Grid item xs={12}>\r\n                                                            <Typography variant=\"caption\">\r\n                                                                {values.type ? values.type : \"-\"}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                            <Typography variant=\"h5\">\r\n                                                                {values.title ? values.title : \"-\"}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                            <Typography variant=\"caption\">\r\n                                                                {values.id ? values.id : \"-\"}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ padding: 10 }}>\r\n                                    <Divider />\r\n                                </Grid>\r\n                                <Grid item xs={12} >\r\n                                    <Grid container direction=\"row\">\r\n                                        <Grid item xs={12} style={{ padding: 10 }}>\r\n                                            <Grid container spacing={3} style={{ width: \"100%\" }}>\r\n                                                {!disableIcon &&\r\n                                                    <Grid item xs={12} lg={6} xl={3}>\r\n                                                        <IconPicker\r\n                                                            value={values.icon}\r\n                                                            icons={icons}\r\n                                                            disabled={disabled}\r\n                                                            handleChange={(icon) => {\r\n                                                                setValues({\r\n                                                                    ...values,\r\n                                                                    icon: icon.cssClass,\r\n                                                                    iconCode: icon.code\r\n                                                                }, true);\r\n                                                            }}\r\n                                                            titleText={t(\"LabelIconPickerText\")}>\r\n                                                        </IconPicker>\r\n                                                        <ErrorMessage name=\"icon\" />\r\n                                                    </Grid>\r\n                                                }\r\n                                                {!disableTitle &&\r\n                                                    <Grid item xs={12} lg={6} xl={9}>\r\n                                                        <Field\r\n                                                            className={classes.field}\r\n                                                            name=\"title\"\r\n                                                            type=\"text\"\r\n                                                            variant=\"outlined\"\r\n                                                            label={t(\"LabelTitle\")}\r\n                                                            component={TextField}\r\n                                                            disabled={disabled}\r\n                                                        />\r\n                                                        <FieldError\r\n                                                            name={`[${item.id}].title`}\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                }\r\n                                                {!disableBackgroundColor &&\r\n                                                    <Grid item xs=\"auto\">\r\n                                                        <Typography>\r\n                                                            {t(\"LabelBackgroundColor\")}\r\n                                                        </Typography>\r\n                                                        <div className={classes.pickerBox}>\r\n                                                            <ColorPicker\r\n                                                                value={values.backgroundColor}\r\n                                                                disabled={disabled}\r\n                                                                className={classes.colorPicker}\r\n                                                                onChange={(x) => {\r\n                                                                    setValues({\r\n                                                                        ...values,\r\n                                                                        backgroundColor: x.hex\r\n                                                                    }, true);\r\n                                                                }}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <FieldError\r\n                                                            name={`[${item.id}].backgroundColor`}\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                }\r\n                                                {!disableTextColor &&\r\n                                                    <Grid item xs=\"auto\">\r\n                                                        <Typography>\r\n                                                            {t(\"LabelTextColor\")}\r\n                                                        </Typography>\r\n                                                        <div className={classes.pickerBox}>\r\n                                                            <ColorPicker\r\n                                                                value={values.textColor}\r\n                                                                disabled={disabled}\r\n                                                                className={classes.colorPicker}\r\n                                                                onChange={(x) => {\r\n                                                                    setValues({\r\n                                                                        ...values,\r\n                                                                        textColor: x.hex\r\n                                                                    }, true);\r\n                                                                }}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <FieldError\r\n                                                            name={`[${item.id}].textColor`}\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                }\r\n                                                {!disableIsVisible &&\r\n                                                    <Grid item xs=\"auto\">\r\n                                                        <Field\r\n                                                            type=\"checkbox\"\r\n                                                            name=\"isVisible\"\r\n                                                            component={CheckboxWithLabel}\r\n                                                            Label={{ label: t(\"LabelVisible\") }}\r\n                                                            disabled={disabled}\r\n                                                        />\r\n                                                        <FieldError\r\n                                                            name={`[${item.id}].isVisible`}\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                }\r\n                                                {\r\n                                                /* \r\n                                                <Grid item xs=\"auto\">\r\n                                                    <Field\r\n                                                        type=\"checkbox\"\r\n                                                        name=\"isProtected\"\r\n                                                        component={CheckboxWithLabel}\r\n                                                        Label={{ label: t(\"LabelProtected\") }}\r\n                                                        disabled={disabled}\r\n                                                    />\r\n                                                    <FieldError\r\n                                                        name={`[${item.id}].isProtected`}\r\n                                                        errors={errors}\r\n                                                    />\r\n                                                </Grid>\r\n                                                */\r\n                                                }\r\n                                                {!disableIcon &&\r\n                                                    <Grid item xs={12}>\r\n                                                        <Field\r\n                                                            type=\"checkbox\"\r\n                                                            name=\"hideIcon\"\r\n                                                            component={CheckboxWithLabel}\r\n                                                            Label={{ label: t(\"LabelHideIcon\") }}\r\n                                                            disabled={disabled}\r\n                                                        />\r\n                                                        <FieldError\r\n                                                            name={`[${item.id}].hideIcon`}\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                }\r\n                                                {\r\n                                                   /*\r\n                                                   !disableIcon &&\r\n                                                    <Grid item xs={12}>\r\n                                                        <Field\r\n                                                            type=\"checkbox\"\r\n                                                            name=\"hideTitle\"\r\n                                                            component={CheckboxWithLabel}\r\n                                                            Label={{ label: t(\"LabelHideTitle\") }}\r\n                                                            disabled={disabled}\r\n                                                        />\r\n                                                        <FieldError\r\n                                                            name={`[${item.id}].hideTitle`}\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                    */\r\n                                                }\r\n                                                {!disableFontSize &&\r\n                                                    <Grid item xs={12}>\r\n                                                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                                            <InputLabel >{t(\"LabelFontSize\")}</InputLabel>\r\n                                                            <Field\r\n                                                                className={classes.field}\r\n                                                                name=\"fontSize\"\r\n                                                                label={t(\"LabelFontSize\")}\r\n                                                                component={Select}\r\n                                                                disabled={disabled}>\r\n                                                                {fontSizeOptions.map(option =>\r\n                                                                    <MenuItem key={option.value} value={option.value}>\r\n                                                                        {option.label}\r\n                                                                    </MenuItem>)}\r\n                                                            </Field>\r\n                                                        </FormControl>\r\n                                                        <FieldError\r\n                                                            name={`[${item.id}].fontSize`}\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                }\r\n                                                {!disableFontStyle &&\r\n                                                    <Grid item xs={12}>\r\n                                                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                                            <InputLabel>{t(\"LabelFontStyle\")}</InputLabel>\r\n                                                            <Field\r\n                                                                className={classes.field}\r\n                                                                name=\"fontStyle\"\r\n                                                                label={t(\"LabelFontStyle\")}\r\n                                                                component={Select}\r\n                                                                disabled={disabled}>\r\n                                                                {fontStyleOptions.map(option =>\r\n                                                                    <MenuItem key={option.value} value={option.value}>\r\n                                                                        {option.label}\r\n                                                                    </MenuItem>)}\r\n                                                            </Field>\r\n                                                        </FormControl>\r\n                                                        <FieldError\r\n                                                            name={`[${item.id}].fontStyle`}\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                }\r\n                                                {!disablePlatform &&\r\n                                                    <Grid item xs={12}>\r\n                                                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                                            <InputLabel >{t(\"LabelTargetPlatform\")}</InputLabel>\r\n                                                            <Field\r\n                                                                className={classes.field}\r\n                                                                name=\"platform\"\r\n                                                                label={t(\"LabelTargetPlatform\")}\r\n                                                                component={Select}\r\n                                                                disabled={disabled}>\r\n                                                                {platformOptions.map(option =>\r\n                                                                    <MenuItem key={option.value} value={option.value}>\r\n                                                                        {option.label}\r\n                                                                    </MenuItem>)}\r\n                                                            </Field>\r\n                                                        </FormControl>\r\n                                                        <FieldError\r\n                                                            name={`[${item.id}].platform`}\r\n                                                            errors={errors}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                }\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        {children &&\r\n                                            <>\r\n                                                <Grid item xs={12} style={{ padding: 10 }}>\r\n                                                    <Divider />\r\n                                                </Grid>\r\n                                                <Grid item xs={12} style={{ padding: 10 }}>\r\n                                                    <Grid container spacing={3} style={{ width: \"100%\" }}>\r\n                                                        {children}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </>\r\n                                        }\r\n                                        { /*\r\n                                        <Grid item xs={12} style={{ padding: 10 }}>\r\n                                            <Divider />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} style={{ padding: 10 }}>\r\n                                            <Typography>\r\n                                                {t(\"LabelBackgroundImage\")}\r\n                                            </Typography>\r\n                                            <br />\r\n\r\n                                            {bkgImage ?\r\n                                                <Button\r\n                                                    className={classes.deleteButton2}\r\n                                                    variant=\"contained\"\r\n                                                    disabled={disabled}\r\n                                                    startIcon={<ClearIcon />}\r\n                                                    onClick={(e) => resetImageHandler()}>\r\n                                                    {t(\"ButtonRemoveBkgImage\")}\r\n                                                </Button>\r\n                                                :\r\n                                                <>\r\n                                                    <UploadFile\r\n                                                        title={t(\"LabelBackgroundImage\")}\r\n                                                        singleFile\r\n                                                        disabled={disabled}\r\n                                                        onFileDrop={(files) => fileDropHandler(files[0])}\r\n                                                        upload={(data, file) => uploadfileAsync(data, file)}\r\n                                                        helpText={t(\"LabelUploadHelp\")}\r\n                                                        uploadButtonText={t(\"LabelUploadFile\")}\r\n                                                        removeButtonText={t(\"LabelRemoveFile\")}\r\n                                                        removeAllButtonText={\"LabelRemoveAllFiles\"}\r\n                                                    />\r\n                                                </>\r\n                                        </Grid>\r\n                                        */ }\r\n                                        <Grid item xs={12} style={{ padding: 10 }}>\r\n                                            <Divider />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} style={{ padding: 10 }}>\r\n                                            <Button\r\n                                                className={classes.deleteButton}\r\n                                                variant=\"contained\"\r\n                                                disabled={disabled}\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={(e) => setOpenDeleteDialog(true)}>\r\n                                                {t(\"ButtonDelete\")}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Form>)\r\n                }}\r\n            </Formik >\r\n            <Dialog\r\n                open={openDeleteDialog}\r\n                onClose={(e) => setOpenDeleteDialog(false)}>\r\n                <DialogTitle>\r\n                    {t(\"LabelDeleting\")} \"{item.title}\"\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {t(\"LabelDeleteConfirmQuestion\")}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        autoFocus\r\n                        onClick={(e) => setOpenDeleteDialog(false)}\r\n                        color=\"primary\">\r\n                        {t(\"ButtonCancel\")}\r\n                    </Button>\r\n                    <Button onClick={(e) => removeItemHandler()}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        {t(\"ButtonDelete\")}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { PageContext } from '../../PageContext';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nconst isAbsoluteUrlOptions = [\r\n    { label: 'URL', value: true },\r\n    { label: 'Wordpress page', value: false }\r\n]\r\n\r\nexport const HomePageMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        pages,\r\n    } = state;\r\n\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}>\r\n        <Grid item xs={12}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel >{t(\"LabelLinkType\")}</InputLabel>\r\n                <Field\r\n                    className={classes.field}\r\n                    name=\"props.isAbsoluteUrl\"\r\n                    label={t(\"LabelLinkType\")}\r\n                    component={Select}\r\n                    disabled={disabled}>\r\n                    {isAbsoluteUrlOptions.map(option =>\r\n                        <MenuItem\r\n                            key={option.value}\r\n                            value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>)}\r\n                </Field>\r\n            </FormControl>\r\n            <FieldError\r\n                name={`[${item.id}].props.isAbsoluteUrl`}\r\n                errors={errors}\r\n            />\r\n        </Grid>\r\n        {item.props.isAbsoluteUrl ?\r\n            <Grid item xs={12}>\r\n                <Field\r\n                    className={classes.field}\r\n                    name=\"props.url\"\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    label={t(\"LabelLink\")}\r\n                    component={TextField}\r\n                    disabled={disabled}\r\n                />\r\n                <FieldError\r\n                    name={`[${item.id}].props.url`}\r\n                    errors={errors}\r\n                />\r\n            </Grid>\r\n            :\r\n            <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel>{t(\"LabelSelectPage\")}</InputLabel>\r\n                    <Field\r\n                        className={classes.field}\r\n                        name=\"props.wpUrl\"\r\n                        label={t(\"LabelSelectPage\")}\r\n                        component={Select}\r\n                        disabled={disabled}>\r\n                        {pages.map(option =>\r\n                            <MenuItem\r\n                                key={option.link}\r\n                                value={option.link}>\r\n                                {option.slug}\r\n                            </MenuItem>)}\r\n                    </Field>\r\n                </FormControl>\r\n                <FieldError\r\n                    name={`[${item.id}].props.wpUrl`}\r\n                    errors={errors}\r\n                />\r\n            </Grid>\r\n        }\r\n    </BaseMenuItem>\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { PageContext } from '../../PageContext';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nconst isAbsoluteUrlOptions = [\r\n    { label: 'URL', value: true },\r\n    { label: 'Wordpress page', value: false }\r\n]\r\n\r\nexport const WebViewMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        pages\r\n    } = state;\r\n\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}\r\n    >\r\n        <Grid item xs={12}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel>{t(\"LabelLinkType\")}</InputLabel>\r\n                <Field\r\n                    className={classes.field}\r\n                    name=\"props.isAbsoluteUrl\"\r\n                    label={t(\"LabelLinkType\")}\r\n                    component={Select}\r\n                    disabled={disabled}>\r\n                    {isAbsoluteUrlOptions.map(option =>\r\n                        <MenuItem\r\n                            key={option.value}\r\n                            value={option.value}\r\n                        >\r\n                            {option.label}\r\n                        </MenuItem>)}\r\n                </Field>\r\n            </FormControl>\r\n            <FieldError\r\n                name={`[${item.id}].props.isAbsoluteUrl`}\r\n                errors={errors}\r\n            />\r\n        </Grid>\r\n        {item.props.isAbsoluteUrl ?\r\n            <Grid item xs={12}>\r\n                <Field\r\n                    className={classes.field}\r\n                    name=\"props.url\"\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    label={t(\"LabelUrl\")}\r\n                    component={TextField}\r\n                    disabled={disabled}\r\n                />\r\n                <FieldError\r\n                    name={`[${item.id}].props.url`}\r\n                    errors={errors}\r\n                />\r\n            </Grid>\r\n            :\r\n            <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel>{t(\"LabelSelectPage\")}</InputLabel>\r\n                    <Field\r\n                        className={classes.field}\r\n                        name=\"props.wpUrl\"\r\n                        label={t(\"LabelSelectPage\")}\r\n                        component={Select}\r\n                        disabled={disabled}>\r\n                        {pages.map(page =>\r\n                            <MenuItem\r\n                                key={page.link}\r\n                                value={page.link}\r\n                            >\r\n                                {page.slug}\r\n                            </MenuItem>)}\r\n                    </Field>\r\n                </FormControl>\r\n                <FieldError\r\n                    name={`[${item.id}].props.wpUrl`}\r\n                    errors={errors}\r\n                />\r\n            </Grid>\r\n        }\r\n        <Grid item xs={12}>\r\n            <Field\r\n                type=\"checkbox\"\r\n                name=\"props.allowShare\"\r\n                component={CheckboxWithLabel}\r\n                Label={{ label: t(\"LabelAllowShareWebView\") }}\r\n                disabled={disabled}\r\n            />\r\n            <FieldError\r\n                name={`[${item.id}].allowShare`}\r\n                errors={errors}\r\n            />\r\n        </Grid>\r\n    </BaseMenuItem>\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nexport const BusinessCardMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}>\r\n        <Grid item xs={12}>\r\n            <Field\r\n                className={classes.field}\r\n                name=\"props.templateId\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                label={t(\"LabelTemplateId\")}\r\n                component={TextField}\r\n                disabled={disabled}\r\n            />\r\n            <FieldError\r\n                name={`[${item.id}].props.templateId`}\r\n                errors={errors}\r\n            />\r\n        </Grid>\r\n    </BaseMenuItem>\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nexport const EmailMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}>\r\n        <Grid item xs={12}>\r\n            <Field\r\n                className={classes.field}\r\n                name=\"props.email\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                label={t(\"LabelEmail\")}\r\n                component={TextField}\r\n                disabled={disabled}\r\n            />\r\n            <FieldError\r\n                name={`[${item.id}].props.email`}\r\n                errors={errors}\r\n            />\r\n        </Grid>\r\n    </BaseMenuItem>\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { PageContext } from '../../PageContext';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nconst isAbsoluteUrlOptions = [\r\n    { label: 'URL', value: true },\r\n    { label: 'Wordpress page', value: false }\r\n]\r\n\r\nexport const OpenUrlMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        pages\r\n    } = state;\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}>\r\n        <Grid item xs={12}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel>{t(\"LabelLinkType\")}</InputLabel>\r\n                <Field\r\n                    className={classes.field}\r\n                    name=\"props.isAbsoluteUrl\"\r\n                    label={t(\"LabelLinkType\")}\r\n                    component={Select}\r\n                    disabled={disabled}>\r\n                    {isAbsoluteUrlOptions.map(option =>\r\n                        <MenuItem\r\n                            key={option.value}\r\n                            value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>)}\r\n                </Field>\r\n            </FormControl>\r\n            <FieldError\r\n                name={`[${item.id}].props.isAbsoluteUrl`}\r\n                errors={errors} />\r\n        </Grid>\r\n        {item.props.isAbsoluteUrl ?\r\n            <Grid item xs={12}>\r\n                <Field\r\n                    className={classes.field}\r\n                    name=\"props.url\"\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    label={t(\"LabelUrl\")}\r\n                    component={TextField}\r\n                    disabled={disabled}\r\n                />\r\n                <FieldError\r\n                    name={`[${item.id}].props.url`}\r\n                    errors={errors}\r\n                />\r\n            </Grid>\r\n            :\r\n            <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel>{t(\"LabelSelectPage\")}</InputLabel>\r\n                    <Field\r\n                        className={classes.field}\r\n                        name=\"props.wpUrl\"\r\n                        label={t(\"LabelSelectPage\")}\r\n                        component={Select}\r\n                        disabled={disabled}>\r\n                        {pages.map(option =>\r\n                            <MenuItem\r\n                                key={option.link}\r\n                                value={option.link}>\r\n                                {option.slug}\r\n                            </MenuItem>)}\r\n                    </Field>\r\n                </FormControl>\r\n                <FieldError\r\n                    name={`[${item.id}].props.wpUrl`}\r\n                    errors={errors}\r\n                />\r\n            </Grid>\r\n        }\r\n    </BaseMenuItem>\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nexport const PhoneCallMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}>\r\n        <Grid item xs={12}>\r\n            <Field\r\n                className={classes.field}\r\n                name=\"props.phoneNumber\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                label={t(\"LabelPhoneNumber\")}\r\n                component={TextField}\r\n                disabled={disabled}\r\n            />\r\n            <FieldError\r\n                name={`[${item.id}].props.phoneNumber`}\r\n                errors={errors}\r\n            />\r\n        </Grid>\r\n    </BaseMenuItem>\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { cloneDeep } from 'lodash';\r\n\r\nimport '../../../../common/ItemsList.css'\r\n\r\nimport {\r\n    AvatarSkeleton,\r\n    ContainedIconButton,\r\n    FieldError,\r\n    ImageRowList,\r\n    UploadDialog,\r\n    UploadFile,\r\n} from '../../../../common';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Avatar,\r\n    Badge,\r\n    Button,\r\n    CircularProgress,\r\n    Dialog,\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Paper,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { ToastContext } from '../../../../contexts';\r\nimport { PageContext } from '../../PageContext';\r\n\r\nimport { ImageType, MaxFileSize } from '../../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst avatarSize = 90;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    avatarSkeleton: {\r\n        width: avatarSize,\r\n        height: avatarSize,\r\n        borderRadius: \"50%\",\r\n        backgroundColor: \"#CCCCCC\",\r\n        boxShadow: \"rgb(0 0 0 / 30%) 0px 0px 5px 0px inset\",\r\n    },\r\n    avatar: {\r\n        width: avatarSize,\r\n        height: avatarSize\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    },\r\n    imagesList: {\r\n        display: \"flex\", marginTop: 16, paddingBottom: 16, overflowX: \"auto\", flexWrap: \"nowrap\"\r\n    }\r\n}));\r\n\r\nconst imageSourceOptions = [\r\n    { label: \"Images\", value: \"images\" },\r\n    { label: \"Url\", value: \"url\" },\r\n]\r\n\r\nconst mode = [\r\n    { label: \"Overlay\", value: \"overlay\" },\r\n    { label: \"Scenario\", value: \"scenario\" },\r\n    { label: \"Overlay & Scenario\", value: \"all\" }\r\n]\r\n\r\nconst isHelpPageAbsoluteUrlOptions = [\r\n    { label: 'URL', value: true },\r\n    { label: 'Wordpress page', value: false }\r\n]\r\n\r\nexport const PhotoEditorMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        pages,\r\n    } = state;\r\n\r\n    const {\r\n        showWarningMessage\r\n    } = useContext(ToastContext);\r\n\r\n    const getImagesOptions = (type = \"\") => {\r\n        if (item.props.images)\r\n            return item.props.images.filter(x => x.type === type);\r\n        return [];\r\n    }\r\n\r\n    const removeImage = async (image) => {\r\n        formRef.current.setFieldValue(\"props.images\", cloneDeep(formRef.current.values.props.images).filter(x =>\r\n            x.thumbnailUrl !== image.thumbnailUrl &&\r\n            x.imageUrl !== image.imageUrl)\r\n        );\r\n    }\r\n\r\n    const fileDropHandler = (imageType, file) => {\r\n        if (file.type.includes('image')\r\n            && file.name.endsWith(\".png\")) {\r\n            if (file.size <= MaxFileSize.Max5MB) {\r\n                return true;\r\n            } else {\r\n                showWarningMessage(t(\"MessageWrongFileSize5\"));\r\n                return false;\r\n            }\r\n        } else {\r\n            showWarningMessage(t(\"MessageWrongImageFormat\"));\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const uploadfileAsync = async (imageType, data, file, type) => {\r\n        if (upload) {\r\n            const storedImageInfo = await upload(imageType, data, file);\r\n            if (storedImageInfo !== null) {\r\n                formRef.current.setFieldValue(\"props.images\", [...cloneDeep(formRef.current.values.props.images), {\r\n                    type: type, imageUrl: storedImageInfo.publicUrl, thumbnailUrl: storedImageInfo.publicThumbnailUrl\r\n                }]);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const [openUploadOverlayDialog, setOpenUploadOverlayDialog] = useState(false);\r\n    const [openUploadScenarioDialog, setOpenUploadScenarioDialog] = useState(false);\r\n\r\n    const uploadOverlayImageHandler = async (data, file) => {\r\n        const result = await uploadfileAsync(ImageType.PhotoEditor, data, file, \"overlay\");\r\n        setOpenUploadScenarioDialog(false);\r\n        return result;\r\n    }\r\n\r\n    const uploadScenarioImageHandler = async (data, file) => {\r\n        const result = await uploadfileAsync(ImageType.PhotoEditor, data, file, \"scenario\");\r\n        setOpenUploadOverlayDialog(false);\r\n        return result;\r\n    }\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}>\r\n        <Grid item xs={12}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel >{t(\"LabelImageSource\")}</InputLabel>\r\n                <Field\r\n                    className={classes.field}\r\n                    name=\"props.imageSource\"\r\n                    label={t(\"LabelImageSource\")}\r\n                    component={Select}\r\n                    disabled={disabled}>\r\n                    {imageSourceOptions.map(option =>\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>)}\r\n                </Field>\r\n            </FormControl>\r\n            <FieldError\r\n                name={`[${item.id}].imageSource`}\r\n                errors={errors}\r\n            />\r\n        </Grid>\r\n        {item.props.imageSource === \"url\" && <Grid item xs={12}>\r\n            <Field\r\n                className={classes.field}\r\n                name=\"props.jsonUrl\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                label={t(\"LabelJsonUrl\")}\r\n                component={TextField}\r\n                disabled={disabled}\r\n            />\r\n            <FieldError\r\n                name={`[${item.id}].props.jsonUrl`}\r\n                errors={errors}\r\n            />\r\n        </Grid>}\r\n        {item.props.imageSource === \"images\" &&\r\n            <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel >{t(\"LabelMode\")}</InputLabel>\r\n                    <Field\r\n                        className={classes.field}\r\n                        name=\"props.mode\"\r\n                        label={t(\"LabelMode\")}\r\n                        component={Select}\r\n                        disabled={disabled}>\r\n                        {mode.map(option =>\r\n                            <MenuItem\r\n                                key={option.value}\r\n                                value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>)}\r\n                    </Field>\r\n                </FormControl>\r\n                <FieldError\r\n                    name={`[${item.id}].props.mode`}\r\n                    errors={errors}\r\n                />\r\n            </Grid>}\r\n        {item.props.imageSource === \"images\" &&\r\n            <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel >{t(\"LabelHelpPageLinkType\")}</InputLabel>\r\n                    <Field\r\n                        className={classes.field}\r\n                        name=\"props.isHelpPageAbsoluteUrl\"\r\n                        label={t(\"LabelHelpPageLinkType\")}\r\n                        component={Select}\r\n                        disabled={disabled}>\r\n                        {isHelpPageAbsoluteUrlOptions.map(option =>\r\n                            <MenuItem\r\n                                key={option.value}\r\n                                value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>)}\r\n                    </Field>\r\n                </FormControl>\r\n                <FieldError\r\n                    name={`[${item.id}].props.isHelpPageAbsoluteUrl`}\r\n                    errors={errors}\r\n                />\r\n            </Grid>}\r\n        {item.props.imageSource === \"images\" &&\r\n            (item.props.isHelpPageAbsoluteUrl ?\r\n                <Grid item xs={12}>\r\n                    <Field\r\n                        className={classes.field}\r\n                        name=\"props.helpPageUrl\"\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        label={t(\"LabelHelpPageLink\")}\r\n                        component={TextField}\r\n                        disabled={disabled}\r\n                    />\r\n                    <FieldError\r\n                        name={`[${item.id}].props.helpPageUrl`}\r\n                        errors={errors}\r\n                    />\r\n                </Grid>\r\n                :\r\n                <Grid item xs={12}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel>{t(\"LabelSelectPage\")}</InputLabel>\r\n                        <Field\r\n                            className={classes.field}\r\n                            name=\"props.helpPageWpUrl\"\r\n                            label={t(\"LabelSelectPage\")}\r\n                            component={Select}\r\n                            disabled={disabled}>\r\n                            {pages.map(option =>\r\n                                <MenuItem\r\n                                    key={option.link}\r\n                                    value={option.link}>\r\n                                    {option.slug}\r\n                                </MenuItem>)}\r\n                        </Field>\r\n                    </FormControl>\r\n                    <FieldError\r\n                        name={`[${item.id}].props.helpPageWpUrl`}\r\n                        errors={errors}\r\n                    />\r\n                </Grid>)}\r\n        {item.props.imageSource === \"images\" && (item.props.mode === \"overlay\" || item.props.mode === \"all\") && <Grid item xs={12}>\r\n            <Button\r\n                onClick={() => setOpenUploadOverlayDialog(true)}\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                variant=\"contained\">\r\n                {t(\"ButtonUploadOverlay\")}\r\n            </Button>\r\n            <ImageRowList images={getImagesOptions(\"overlay\")} size={avatarSize} imagePropName=\"thumbnailUrl\" removeImageHandler={removeImage} />\r\n        </Grid>}\r\n        {item.props.imageSource === \"images\" && (item.props.mode === \"scenario\" || item.props.mode === \"all\") && <Grid item xs={12}>\r\n            <Button\r\n                onClick={() => setOpenUploadScenarioDialog(true)}\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                variant=\"contained\">\r\n                {t(\"ButtonUploadScenario\")}\r\n            </Button>\r\n            <ImageRowList images={getImagesOptions(\"scenario\")} size={avatarSize} imagePropName=\"thumbnailUrl\" removeImageHandler={removeImage} />\r\n        </Grid>}\r\n\r\n\r\n        <UploadDialog\r\n            open={openUploadOverlayDialog}\r\n            handleClose={() => setOpenUploadOverlayDialog(false)}\r\n            disabled={disabled}\r\n            titleText={t(\"TitleUploadOverlayImages\")}\r\n            helpText={t(\"LabelUploadHelp\")}\r\n            uploadButtonText={t(\"LabelUploadFile\")}\r\n            removeButtonText={t(\"LabelRemoveFile\")}\r\n            removeAllButtonText={t(\"LabelRemoveAllFiles\")}\r\n            onFileDropHandler={(files) => fileDropHandler(ImageType.PhotoEditor, files[0])}\r\n            uploadHandler={uploadOverlayImageHandler}\r\n        />\r\n        <UploadDialog\r\n            open={openUploadScenarioDialog}\r\n            handleClose={() => setOpenUploadScenarioDialog(false)}\r\n            disabled={disabled}\r\n            titleText={t(\"TitleUploadScenarioImages\")}\r\n            helpText={t(\"LabelUploadHelp\")}\r\n            uploadButtonText={t(\"LabelUploadFile\")}\r\n            removeButtonText={t(\"LabelRemoveFile\")}\r\n            removeAllButtonText={t(\"LabelRemoveAllFiles\")}\r\n            onFileDropHandler={(files) => fileDropHandler(ImageType.PhotoEditor, files[0])}\r\n            uploadHandler={uploadScenarioImageHandler}\r\n        />\r\n    </BaseMenuItem >\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nexport const PhotoSendMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}>\r\n        <Grid item xs={12}>\r\n            <Field\r\n                className={classes.field}\r\n                name=\"props.email\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                label={t(\"LabelEmail\")}\r\n                component={TextField}\r\n                disabled={disabled}\r\n            />\r\n            <FieldError\r\n                name={`[${item.id}].props.email`}\r\n                errors={errors}\r\n            />\r\n        </Grid>\r\n    </BaseMenuItem>\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nexport const QrMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}>\r\n        <Grid item xs={12}>\r\n            <Field\r\n                className={classes.field}\r\n                name=\"props.url\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                label={t(\"LabelQrUrl\")}\r\n                component={TextField}\r\n                disabled={disabled}\r\n            />\r\n            <FieldError\r\n                name={`[${item.id}].props.url`}\r\n                errors={errors}\r\n            />\r\n        </Grid>\r\n    </BaseMenuItem>\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nexport const SmsMessageMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}>\r\n        <Grid item xs={12}>\r\n            <Field\r\n                className={classes.field}\r\n                name=\"props.phoneNumber\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                label={t(\"LabelPhoneNumber\")}\r\n                component={TextField}\r\n                disabled={disabled}\r\n            />\r\n            <FieldError\r\n                name={`[${item.id}].props.phoneNumber`}\r\n                errors={errors}\r\n            />\r\n        </Grid>\r\n    </BaseMenuItem>\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nexport const SeparatorMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}\r\n        disableIcon\r\n        disableTitle\r\n        disableFontSize\r\n        disableFontStyle>\r\n        <Grid item xs={12}>\r\n            <Field\r\n                className={classes.field}\r\n                name=\"props.thickness\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                label={t(\"LabelThickness\")}\r\n                component={TextField}\r\n                disabled={disabled}\r\n            />\r\n            <FieldError\r\n                name={`[${item.id}].props.thickness`}\r\n                errors={errors}\r\n            />\r\n        </Grid>\r\n    </BaseMenuItem>\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    FieldError,\r\n    ColorPicker\r\n} from '../../../../common';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    TextField,\r\n    CheckboxWithLabel,\r\n    Select\r\n} from 'formik-material-ui';\r\n\r\nimport {\r\n    Grid,\r\n    IconButton,\r\n    InputLabel,\r\n    FormControl,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { BaseMenuItem } from './BaseMenuItem';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: \"-6px\"\r\n    }\r\n}));\r\n\r\nexport const EmptyLineMenuItem = ({\r\n    item,\r\n    icons,\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    disabled,\r\n    upload,\r\n    onUpdated,\r\n    onRemove,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    return <BaseMenuItem\r\n        item={item}\r\n        icons={icons}\r\n        formRef={formRef}\r\n        errors={errors}\r\n        validationSchema={validationSchema}\r\n        disabled={disabled}\r\n        upload={upload}\r\n        onUpdated={onUpdated}\r\n        onRemove={onRemove}\r\n        onSubmit={onSubmit}\r\n        disableIcon\r\n        disableTitle\r\n        disableTextColor\r\n        disableFontSize\r\n        disableFontStyle>\r\n    </BaseMenuItem>\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { cloneDeep } from 'lodash';\r\nimport { loadCSS } from 'fg-loadcss';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport '../../../common/ItemsList.css'\r\n\r\nimport {\r\n    HomePageMenuItem,\r\n    WebViewMenuItem,\r\n    BusinessCardMenuItem,\r\n    EmailMenuItem,\r\n    EmptyLineMenuItem,\r\n    OpenUrlMenuItem,\r\n    PhoneCallMenuItem,\r\n    PhotoEditorMenuItem,\r\n    PhotoSendMenuItem,\r\n    QrMenuItem,\r\n    SeparatorMenuItem,\r\n    SmsMessageMenuItem\r\n} from './MenuItems';\r\n\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    Menu,\r\n    MenuItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../common';\r\n\r\nimport { MenuItemDefaultValue, MenuItemTypes } from '../../../../helpers';\r\n\r\nimport { PageContext } from '../PageContext';\r\n\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 0\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    progress: {\r\n        color: \"black\"\r\n    },\r\n    pickerBox: {\r\n        marginLeft: -6\r\n    },\r\n    menu: {\r\n    },\r\n    itemsList: {\r\n        height: 400\r\n    },\r\n    bigIcon: {\r\n        width: 100,\r\n        height: 100\r\n    }\r\n}));\r\n\r\nexport const MenuForm = ({\r\n    formRef,\r\n    errors,\r\n    disabled,\r\n    upload,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state,\r\n        mergeMenuItems\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        icons,\r\n        settings,\r\n        menuItems: sourceItems\r\n    } = state;\r\n\r\n    const [menuItems, setMenuItems] = useState(sourceItems ?? []);\r\n\r\n    const getListStyle = isDraggingOver => ({\r\n        background: '#CCCCCC',\r\n        padding: '16px 8px 0px 16px',\r\n        width: 'calc(100% - 32px)',\r\n        height: 1000,\r\n        overflowY: \"scroll\",\r\n        borderRadius: 4,\r\n        boxShadow: ' inset 0px 0px 5px 0px rgb(0,0,0,0.3)',\r\n    });\r\n\r\n    const getItemStyle = (isDragging, draggableStyle, isSelected) => ({\r\n        margin: \"0px 0px 16px 0px\",\r\n        zIndex: 100,\r\n        padding: 8,\r\n        color: isSelected ? '#fff' : '#000',\r\n        width: 'calc(100% - 28px)',\r\n        height: 72,\r\n\r\n        background: '#fff',\r\n        boxShadow: '0 2px 3px rgb(10 10 10 / 10%), 0 0 0 2px rgb(10 10 10 / 10%)',\r\n        backgroundColor: isSelected ? theme.palette.primary.main : '#fff',\r\n        borderRadius: 10,\r\n\r\n        ...draggableStyle\r\n    });\r\n\r\n    const reorder = (list, startIndex, endIndex) => {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n\r\n        return result;\r\n    };\r\n\r\n    const onDragEnd = (result) => {\r\n        // dropped outside the list\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        replaceMenuItems(\r\n            reorder(\r\n                [...menuItems],\r\n                result.source.index,\r\n                result.destination.index\r\n            )\r\n        );\r\n    }\r\n\r\n    const [currentItemId, setCurrentItemId] = useState((menuItems ?? []).length > 0 ? menuItems[0].id : null);\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const getMenuItemKeys = () => {\r\n        return Object\r\n            .keys(MenuItemTypes.Label)\r\n            .sort((x, y) => {\r\n                const k1 = MenuItemTypes.Label[x].toUpperCase();\r\n                const k2 = MenuItemTypes.Label[y].toUpperCase();\r\n                if (k1 < k2) {\r\n                    return -1;\r\n                } else if (k1 > k2) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n    }\r\n\r\n    const addMenuItem = (item) => {\r\n        item.id = uuidv4();\r\n        const newMenuItems = cloneDeep(menuItems ?? []);\r\n        newMenuItems.push(item);\r\n        setMenuItems(newMenuItems);\r\n        mergeMenuItems(newMenuItems);\r\n        return item.id;\r\n    }\r\n\r\n    const updateMenuItem = (id, values) => {\r\n        let newMenuItems = cloneDeep(menuItems ?? []);\r\n        let index = newMenuItems.findIndex(x => x.id === id);\r\n        newMenuItems[index] = { ...newMenuItems[index], ...values };\r\n        setMenuItems(newMenuItems);\r\n        mergeMenuItems(newMenuItems);\r\n    }\r\n\r\n    const removeMenuItem = (id) => {\r\n        let newMenuItems = cloneDeep(state.menuItems ?? []);\r\n        setMenuItems(newMenuItems.filter(item => item.id !== id));\r\n        mergeMenuItems(newMenuItems.filter(item => item.id !== id));\r\n    }\r\n\r\n    const replaceMenuItems = (newMenuItems) => {\r\n        setMenuItems(newMenuItems);\r\n        mergeMenuItems(newMenuItems);\r\n    }\r\n\r\n    const getCurrentMenuItemEditor = (menuItems, currentItemId) => {\r\n        let menuItemComponent = null;\r\n        const currentItem = currentItemId ? menuItems.find(item => item.id === currentItemId) : null;\r\n        switch (currentItem?.type) {\r\n            case MenuItemTypes.HomePage:\r\n                menuItemComponent =\r\n                    <HomePageMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.HomePage}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            case MenuItemTypes.BusinessCard:\r\n                menuItemComponent =\r\n                    <BusinessCardMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.BusinessCard}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            case MenuItemTypes.MailTo:\r\n                menuItemComponent =\r\n                    <EmailMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.MailTo}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            case MenuItemTypes.EmptyLine:\r\n                menuItemComponent =\r\n                    <EmptyLineMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.EmptyLine}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            case MenuItemTypes.OpenURL:\r\n                menuItemComponent =\r\n                    <OpenUrlMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.OpenURL}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            case MenuItemTypes.PhoneCall:\r\n                menuItemComponent =\r\n                    <PhoneCallMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.PhoneCall}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            case MenuItemTypes.PhotoEditor:\r\n                menuItemComponent =\r\n                    <PhotoEditorMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.PhotoEditor}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            case MenuItemTypes.PhotoSend:\r\n                menuItemComponent =\r\n                    <PhotoSendMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.PhotoSend}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            case MenuItemTypes.QR:\r\n                menuItemComponent =\r\n                    <QrMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.QR}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            case MenuItemTypes.Separator:\r\n                menuItemComponent =\r\n                    <SeparatorMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.Separator}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            case MenuItemTypes.SendSms:\r\n                menuItemComponent =\r\n                    <SmsMessageMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.SendSms}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            case MenuItemTypes.OnLineWebView:\r\n                menuItemComponent =\r\n                    <WebViewMenuItem\r\n                        item={currentItem}\r\n                        errors={errors}\r\n                        icons={icons}\r\n                        //validationSchema={MenuItemValidateSchema.OnLineWebView}\r\n                        formRef={formRef}\r\n                        disabled={disabled}\r\n                        upload={upload}\r\n                        onUpdated={updateItemHandler}\r\n                        onRemove={removeMenuItemHandler}\r\n                        onSubmit={submitHandler}\r\n                    />\r\n                break;\r\n            default:\r\n                menuItemComponent = <div style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    opacity: 0.7\r\n                }}>\r\n                    <EmojiObjectsIcon className={classes.bigIcon} />\r\n                    <Typography variant=\"h5\">\r\n                        {t(\"LabelNoMenuItems\")}\r\n                    </Typography>\r\n                </div>\r\n        }\r\n\r\n        return menuItemComponent;\r\n    }\r\n\r\n    const addMenuItemHandler = (menuItemType) => {\r\n        const newMenuItem = {\r\n            ...cloneDeep(MenuItemDefaultValue[menuItemType]),\r\n            textColor: settings.menuItemsTextColor,\r\n            backgroundColor: settings.menuItemsBackgroundColor\r\n        }\r\n        const menuItemId = addMenuItem(newMenuItem);\r\n        setCurrentItemId(menuItemId);\r\n    }\r\n\r\n    const updateItemHandler = (menuItem, values) => {\r\n        updateMenuItem(menuItem.id, values);\r\n    }\r\n\r\n    const removeMenuItemHandler = (menuItem) => {\r\n        removeMenuItem(menuItem.id);\r\n    }\r\n\r\n    const submitHandler = (itemId, values, done) => {\r\n        if (onSubmit) {\r\n            onSubmit(cloneDeep(menuItems), done)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (menuItems) {\r\n            if (!menuItems.find(item => item.id === currentItemId)) {\r\n                setCurrentItemId(menuItems.length > 0 ? menuItems[0].id : null)\r\n            } else {\r\n                setCurrentItemId(currentItemId);\r\n            }\r\n        }\r\n    }, [menuItems]);\r\n\r\n    useEffect(() => {\r\n        const node = loadCSS(\r\n            'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css',\r\n            document.querySelector('#font-awesome-css'),\r\n        );\r\n\r\n        return () => {\r\n            node.parentNode.removeChild(node);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Card className={clsx(classes.root, props.className)} style={{ padding: 0 }}>\r\n            <CardContent style={{ padding: 0 }}>\r\n                <Grid\r\n                    container\r\n                    direction='row'\r\n                    style={{ padding: 0 }}>\r\n                    <Grid item xs={12} lg={6} xl={4} style={{ backgroundColor: '#fff', padding: '0px 0px 30px 20px' }} >\r\n                        <div style={{ height: 60, zIndex: 10, display: 'flex', alignItems: 'center', flexDirection: 'row-reverse', padding: '0px 8px 0px 0px' }}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                disabled={disabled}\r\n                                startIcon={<AddIcon />}\r\n                                onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n                                {t(\"ButtonAddMenuItem\")}\r\n                            </Button>\r\n                            <div style={{ marginRight: 16 }}>\r\n                                <FieldError\r\n                                    name=\"missingHomePage\"\r\n                                    errors={errors}\r\n                                />\r\n                            </div>\r\n                            <Menu\r\n                                anchorEl={anchorEl}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={(e) => setAnchorEl(null)}\r\n                                className={classes.menu}>\r\n                                {getMenuItemKeys().map(key =>\r\n                                    <MenuItem\r\n                                        key={MenuItemTypes.Label[key]}\r\n                                        onClick={(e) => addMenuItemHandler(key)}>\r\n                                        {MenuItemTypes.Label[key]}\r\n                                    </MenuItem>)}\r\n                            </Menu>\r\n                        </div>\r\n                        <DragDropContext onDragEnd={onDragEnd} >\r\n                            <Droppable isDropDisabled={disabled} droppableId=\"droppable\">\r\n                                {(provided, snapshot) => (\r\n                                    <div\r\n                                        {...provided.droppableProps}\r\n                                        ref={provided.innerRef}\r\n                                        style={getListStyle(snapshot.isDraggingOver)}\r\n                                        className={clsx(classes.itemsList, \"mnu-itms-list\")}>\r\n                                        {menuItems && menuItems.map((item, index) => (\r\n                                            <Draggable key={item.id} isDragDisabled={disabled} draggableId={item.id} index={index}>\r\n                                                {(provided, snapshot) => (\r\n                                                    <Badge\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}\r\n                                                        style={getItemStyle(\r\n                                                            snapshot.isDragging,\r\n                                                            provided.draggableProps.style,\r\n                                                            item.id === currentItemId\r\n                                                        )}\r\n                                                        anchorOrigin={{\r\n                                                            vertical: 'top',\r\n                                                            horizontal: 'right',\r\n                                                        }}\r\n                                                        badgeContent={<WarningIcon color=\"secondary\" />}\r\n                                                        invisible={errors.find(err => err.errorId.includes(`${item.id}`)) ? false : true}\r\n                                                        onClick={() => {\r\n                                                            setCurrentItemId(item.id)\r\n                                                        }}\r\n                                                    >\r\n                                                        <Grid\r\n                                                            container\r\n                                                            direction='row'\r\n                                                            alignItems='center'\r\n                                                            style={{\r\n                                                                backgroundImage: `url(${item.backgroundImage})`,\r\n                                                            }}>\r\n                                                            <Grid item xl={2} lg={2} md={2} sm={3} xs={3} style={{ padding: 16, fontSize: 36 }}>\r\n                                                                <i className={item.icon} />\r\n                                                            </Grid>\r\n                                                            <Grid item xl={10} lg={10} md={10} sm={9} xs={9} >\r\n                                                                <Grid container direction='row'>\r\n                                                                    <Grid item xs={12}>\r\n                                                                        <Typography variant=\"caption\">{item.type}</Typography>\r\n                                                                    </Grid>\r\n                                                                    <Grid item xs={12}>\r\n                                                                        <Typography variant=\"h6\">{item.title}</Typography>\r\n                                                                    </Grid>\r\n                                                                    {(item.type === MenuItemTypes.HomePage || item.type === MenuItemTypes.OpenURL || item.type === MenuItemTypes.OnLineWebView) &&\r\n                                                                        <Grid item xs={12}>\r\n                                                                            <Typography variant=\"caption\">{item.props.url}</Typography>\r\n                                                                        </Grid>\r\n                                                                    }\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </Badge>\r\n\r\n                                                )}\r\n\r\n                                            </Draggable>\r\n                                        ))}\r\n                                        {provided.placeholder}\r\n                                    </div>\r\n                                )}\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={6} xl={8} style={{ padding: 20 }}>\r\n                        {getCurrentMenuItemEditor(menuItems, currentItemId)}\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card >\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport QRCode from 'qrcode.react';\r\n\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport { PageContext } from '../../PageContext';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {}\r\n}));\r\n\r\nexport const LiveViewDialog = ({\r\n    open,\r\n    onClose,\r\n    ...props\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        qrLiveViewer\r\n    } = state;\r\n\r\n    return (\r\n        <Dialog\r\n            className={clsx(classes.root, props.className)}\r\n            open={open}\r\n            onClose={onClose}>\r\n            <DialogTitle>\r\n                MyLiveViewer\r\n            </DialogTitle>\r\n            <DialogContent style={{ textAlign: \"center\" }}>\r\n                {qrLiveViewer ?\r\n                    <>\r\n                        <QRCode\r\n                            size={250}\r\n                            value={JSON.stringify(qrLiveViewer)}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <DialogContentText>\r\n                            {t(\"LabelUserLivewViewer\")}\r\n                        </DialogContentText>\r\n                        <div>\r\n                            <a\r\n                                href=\"https://play.google.com/store/apps/details?id=com.teamonair.myFastAppLiveViewer&pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1\"\r\n                                target=\"_blank\">\r\n                                <img\r\n                                    style={{ width: \"240px\" }}\r\n                                    alt=\"Google Play Badge\"\r\n                                    src={t(\"UrlGooglePlayBadge\")}\r\n                                />\r\n                            </a>\r\n                        </div>\r\n                        <div>\r\n                            <a\r\n                                href=\"https://apps.apple.com/it/app/myliveviewer/id1539795908?itsct=apps_box_badge&amp;itscg=30200\"\r\n                                target=\"_blank\"\r\n                                style={{ display: \"inline-block\", overflow: \"hidden\", borderRadius: \"13px\", width: \"200px\", height: \"83px\" }}>\r\n                                <img\r\n                                    src={t(\"UrlAppStoreBadge\")}\r\n                                    alt=\"Download on the App Store\"\r\n                                    style={{ borderRadius: \"13px\", width: \"200px\", height: \"83px\" }}\r\n                                />\r\n                            </a>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <DialogContentText>\r\n                        {t(\"LabelLivewViewerQrError\")}\r\n                    </DialogContentText>\r\n                }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    autoFocus\r\n                    onClick={onClose}\r\n                    color=\"primary\">\r\n                    {t(\"ButtonClose\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport QRCode from 'qrcode.react';\r\n\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport { PageContext } from '../../PageContext';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {}\r\n}));\r\n\r\nexport const PublishConfigDialog = ({\r\n    open,\r\n    onConfirm,\r\n    onClose,\r\n    ...props\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    return (\r\n        <Dialog\r\n            className={clsx(classes.root, props.className)}\r\n            open={open}\r\n            onClose={onClose}>\r\n            <DialogTitle>\r\n                {t(\"DialogPublish\")}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {t(\"LabelConfirmPublishConfig\")}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    autoFocus\r\n                    onClick={onConfirm}\r\n                    color=\"primary\">\r\n                    {t(\"ButtonOk\")}\r\n                </Button>\r\n                <Button\r\n                    autoFocus\r\n                    onClick={onClose}\r\n                    color=\"primary\">\r\n                    {t(\"ButtonCancel\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport { PageContext } from '../../PageContext';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {}\r\n}));\r\n\r\nexport const ResetSettingsDialog = ({\r\n    open,\r\n    onConfirm,\r\n    onClose,\r\n    ...props\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    return (\r\n        <Dialog\r\n            className={clsx(classes.root, props.className)}\r\n            open={open}\r\n            onClose={onClose}>\r\n            <DialogTitle>\r\n                {t(\"DialogResetSettings\")}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {t(\"LabelConfirmSettingsReset\")}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    autoFocus\r\n                    onClick={onConfirm}\r\n                    color=\"primary\">\r\n                    {t(\"ButtonOk\")}\r\n                </Button>\r\n                <Button\r\n                    autoFocus\r\n                    onClick={onClose}\r\n                    color=\"primary\">\r\n                    {t(\"ButtonCancel\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Grid,\r\n    Typography,\r\n    Divider,\r\n    colors,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Alert\r\n} from '@material-ui/lab';\r\n\r\nimport {\r\n    FieldError\r\n} from '../../../common';\r\n\r\nimport {\r\n    ResetSettingsDialog\r\n} from './Dialogs';\r\n\r\nimport {\r\n    Form,\r\n    Formik,\r\n    Field\r\n} from 'formik';\r\n\r\nimport {\r\n    Switch,\r\n    TextField,\r\n    CheckboxWithLabel\r\n} from 'formik-material-ui';\r\n\r\nimport { PageContext } from '../PageContext';\r\n\r\nimport { getColoredBottonStyle } from '../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    title: {\r\n        fontSize: \"1.2em\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    field: {\r\n        width: \"100%\"\r\n    },\r\n    resetButton: {\r\n        ...getColoredBottonStyle(theme, colors.red)\r\n    },\r\n}));\r\n\r\nexport const SettingsForm = ({\r\n    formRef,\r\n    errors,\r\n    validationSchema,\r\n    reset,\r\n    disabled,\r\n    onBlur,\r\n    onSubmit,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const [openResetDialog, setOpenResetDialog] = useState(false);\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        settings\r\n    } = state;\r\n\r\n    const getInitialValues = () => {\r\n        return {};\r\n    }\r\n\r\n    const resetClickHandler = (e) => {\r\n        setOpenResetDialog(true);\r\n    }\r\n\r\n    const confirmResetHandler = () => {\r\n        setOpenResetDialog(false);\r\n        if (reset) reset();\r\n    }\r\n\r\n    const submitClickHandler = (values, actions) => {\r\n        if (onSubmit) onSubmit(values, () => actions.setSubmitting(false));\r\n    }\r\n\r\n    return (\r\n        <Card className={clsx(classes.root, props.className)}>\r\n            <CardContent>\r\n                <Container maxWidth=\"lg\" className={classes.content}>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        initialValues={getInitialValues()}\r\n                        onSubmit={submitClickHandler}\r\n                        innerRef={formRef}\r\n                        validationSchema={validationSchema}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={true}\r\n                        validate={(values) => {\r\n                            if (onBlur) onBlur(values);\r\n                        }}>\r\n                        {(props) => {\r\n                            const {\r\n                                values,\r\n                                isSubmitting,\r\n                                handleSubmit,\r\n                                setFieldValue\r\n                            } = props;\r\n                            return (\r\n                                <Form noValidate autoComplete=\"off\">\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant=\"h5\" component=\"h2\">\r\n                                                {t(\"LabelResetSettings\")}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography>\r\n                                                {t(\"LabelResetSettingsHelp\")}\r\n                                            </Typography>\r\n                                            <br />\r\n                                            <Button\r\n                                                className={classes.resetButton}\r\n                                                disabled={disabled}\r\n                                                onClick={resetClickHandler}>\r\n                                                {t(\"ButtonResetSettings\")}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Divider variant=\"fullWidth\" />\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <ResetSettingsDialog\r\n                                        open={openResetDialog}\r\n                                        onConfirm={(e) => confirmResetHandler()}\r\n                                        onClose={(e) => setOpenResetDialog(false)}\r\n                                    />\r\n\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </Container>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Alert\r\n} from '@material-ui/lab';\r\n\r\nimport { PageContext } from '../PageContext';\r\n\r\nimport { LicenseStatus } from '../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    alert: {\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport const ConfigStatus = ({ ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        license,\r\n        configStatus,\r\n        configHasChanges,\r\n        errors\r\n    } = state;\r\n\r\n    const buyLicenseClickHandler = (e) => {\r\n        const buyUrl = `https://eshop.teamonair.com/eshop`;\r\n        window.open(buyUrl, \"_blank\");\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(classes.root, props.className)}>\r\n\r\n            {license.status !== LicenseStatus.Active &&\r\n                <Alert\r\n                    className={classes.alert}\r\n                    variant=\"outlined\"\r\n                    severity=\"warning\"\r\n                    action={\r\n                        <Button\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={buyLicenseClickHandler}>\r\n                            {t(\"ButtonBuyLicense\")}\r\n                        </Button>\r\n                    }>\r\n                    {t(\"LabelLicenseNotFound\")}\r\n                </Alert>\r\n            }\r\n\r\n            {configHasChanges &&\r\n                <Alert className={classes.alert} variant=\"outlined\" severity=\"warning\">\r\n                    {t(\"LabelChangesAreMade\")}\r\n                </Alert>\r\n            }\r\n\r\n            {!configStatus.isLiveConfigUpdated &&\r\n                <Alert className={classes.alert} variant=\"outlined\" severity=\"info\">\r\n                    {t(\"LabelLiveConfigNotUpdated\")}\r\n                </Alert>\r\n            }\r\n\r\n            {!configStatus.isAppConfigUpdated &&\r\n                <Alert className={classes.alert} variant=\"outlined\" severity=\"info\">\r\n                    {t(\"LabelAppConfigNotUpdated\")}\r\n                </Alert>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useContext, useRef, useState } from 'react';\r\nimport { } from 'react-router'\r\n\r\nimport {\r\n    Grid\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    PageHeader,\r\n    PageLoader,\r\n    ErrorView\r\n} from '../../common';\r\n\r\nimport {\r\n    ConfigStatus,\r\n    TabContainer,\r\n    TabPanel,\r\n    InfoForm,\r\n    MediaForm,\r\n    ServicesForm,\r\n    IosForm,\r\n    AndroidForm,\r\n    MenuForm,\r\n    SettingsForm,\r\n    LiveViewDialog,\r\n    PublishConfigDialog\r\n} from './components';\r\n\r\nimport { PageProvider, PageContext } from './PageContext';\r\nimport { PluginContext, ToastContext } from '../../contexts';\r\n\r\nimport { FileType, ImageType, isDev } from '../../../helpers';\r\nimport { Aphorisms, LicenseStatus } from '../../../helpers';\r\n\r\nimport { RoutePaths, navigateTo } from '../../routing';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    tabs: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst PageContent = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        state,\r\n        pageIsReady,\r\n        pageHasError,\r\n        setPageIsReady,\r\n        isBusy,\r\n        setIsBusy,\r\n        checkLicenseAsync,\r\n        getConfigurationAsync,\r\n        checkConfigChangesAsync,\r\n        saveConfigurationAsync,\r\n        resetConfigurationAsync,\r\n        updateLiveConfigAsync,\r\n        updateAppConfigAsync,\r\n        getLiveViewerQrCodeAsync,\r\n        createAppleCertsAsync,\r\n        createGoogleCertsAsync,\r\n        getWordPressCategoriesAsync,\r\n        getWordPressPagesAsync,\r\n        getIconClassesAsync,\r\n        validateAllAsync,\r\n        mergeSettings,\r\n        mergeMenuItems\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        plugin\r\n    } = useContext(PluginContext);\r\n\r\n    const {\r\n        showSuccessMessage,\r\n        showErrorMessage\r\n    } = useContext(ToastContext);\r\n\r\n    const {\r\n        license,\r\n        settings,\r\n        menuItems,\r\n        isLegacy,\r\n        icons,\r\n        categories,\r\n        pages,\r\n        qrLiveViewer,\r\n        configStatus,\r\n        errors,\r\n    } = state;\r\n\r\n    const [aphorism, setAphorism] = useState(Aphorisms[Math.floor(Math.random() * Aphorisms.length)]);\r\n\r\n    const [openLVDialog, setOpenLVDialog] = useState(false);\r\n    const [openPubDialog, setOpenPubDialog] = useState(false);\r\n\r\n    const uploadAnyFileAsync = async (fileType, data, file, credentials) => {\r\n        setIsBusy({ uploading: true });\r\n        let storedFile = null;\r\n        switch (fileType) {\r\n            case ImageType.AppIcon:\r\n            case ImageType.AppSplash:\r\n            case ImageType.MenuHeader:\r\n            case ImageType.PhotoEditor:\r\n            case ImageType.LoginPage:\r\n            case ImageType.MenuItem:\r\n\r\n                // GIANKY\r\n                storedFile = { publicUrl: null };\r\n                let base64String1 = await readFileAsDataURL2(file);\r\n                storedFile.publicUrl = base64String1;\r\n                break;\r\n            case FileType.iOSP12Certificate:\r\n            case FileType.iOSP8Certificate:\r\n            case FileType.iOSMobileProvisioning:\r\n            case FileType.AndroidKeyStore:\r\n\r\n                // GIANKY\r\n\r\n                // credentials � solo per mandarle su Azure per controllo, si pu� fare in compilazione\r\n                // storedFile = await uploadFileAsync({ fileType, data, credentials });\r\n\r\n                storedFile = { publicUrl: null };\r\n                let base64String = await readFileAsDataURL(file);\r\n                storedFile.publicUrl = base64String; // In realt� non � un URL ma binario in Base64, devo tenerne conto in C#\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setIsBusy({ uploading: false });\r\n        return storedFile;\r\n    }\r\n\r\n   async function readFileAsDataURL(file)\r\n   {\r\n      let result_base64 = await new Promise((resolve) => {\r\n         let fileReader = new FileReader();\r\n         fileReader.onload = (e) => {\r\n            const base64String = fileReader.result.split(',')[1]; // Remove the data URL prefix\r\n            resolve(base64String);\r\n         }\r\n         fileReader.readAsDataURL(file);\r\n      });\r\n      return result_base64;\r\n   }\r\n\r\n   async function readFileAsDataURL2(file) {\r\n      let result_base64 = await new Promise((resolve) => {\r\n         let fileReader = new FileReader();\r\n         fileReader.onload = (e) => {\r\n            const base64String = fileReader.result;\r\n            resolve(base64String);\r\n         }\r\n         fileReader.readAsDataURL(file);\r\n      });\r\n      return result_base64;\r\n   }\r\n\r\n    const resetSettingsAsync = async () => {\r\n        setIsBusy({ reset: true });\r\n        await resetConfigurationAsync();\r\n        setIsBusy({ reset: false });\r\n    }\r\n\r\n    const requestAppleCertsAsync = async (keyId, teamId, email, bundleId) => {\r\n        setIsBusy({ creatingCerts: true });\r\n        const certsInfo = await createAppleCertsAsync({ keyId, teamId, email, bundleId });\r\n        setIsBusy({ creatingCerts: false });\r\n        return certsInfo;\r\n    }\r\n\r\n    const requestGoogleCertsAsync = async (keystoreAlias, email, bundleId) => {\r\n        setIsBusy({ creatingCerts: true });\r\n        const certsInfo = await createGoogleCertsAsync({ keystoreAlias, email, bundleId });\r\n        setIsBusy({ creatingCerts: false });\r\n        return certsInfo;\r\n    }\r\n\r\n    const formRef = useRef();\r\n    const saveAppConfigClickHandler = async (e) => {\r\n        if (formRef.current) {\r\n            formRef.current.handleSubmit();\r\n        } else {\r\n            setIsBusy({ saving: true });\r\n            const success = await validateAllAsync(settings, menuItems);\r\n            if (success) {\r\n                await saveConfigurationAsync(settings, menuItems);\r\n                await checkConfigChangesAsync();\r\n                showSuccessMessage(t(\"SuccessChangesSaved\"));\r\n            } else {\r\n                showErrorMessage(t(\"ErrorValuesNotValid\"));\r\n            }\r\n\r\n            setIsBusy({ saving: false });\r\n        }\r\n    }\r\n\r\n    const tutorialClickHandler = async (e) => {\r\n        //window.open(`https://www.myfastapp.com/tutorial?vplugin=${plugin.pluginVersion}`, \"_blank\");\r\n        window.open(\"https://myfastapp.com/app-building-getting-started-with-my-fastapp/\", \"_blank\");\r\n    }\r\n\r\n    const liveViewerClickHandler = async (e) => {\r\n        setIsBusy({ updatingLiveConfig: true });\r\n        const success = await updateLiveConfigAsync();\r\n        await checkConfigChangesAsync();\r\n        if (success) {\r\n            await getLiveViewerQrCodeAsync();\r\n            setOpenLVDialog(true);\r\n            showSuccessMessage(t(\"SuccessLiveConfigUpdate\"));\r\n        } else {\r\n            showErrorMessage(t(\"ErrorLiveConfigUpdate\"));\r\n        }\r\n        setIsBusy({ updatingLiveConfig: false });\r\n    }\r\n\r\n    const publishClickHandler = (e) => {\r\n        setOpenPubDialog(true);\r\n    }\r\n\r\n    const confirmPublishClickHandler = async () => {\r\n        setIsBusy({ updatingAppConfig: true });\r\n        setOpenPubDialog(false);\r\n        const success = await updateAppConfigAsync();\r\n        await checkConfigChangesAsync();\r\n        if (success) {\r\n            showSuccessMessage(t(\"SuccessAppConfigUpdate\"));\r\n        } else {\r\n            showErrorMessage(t(\"ErrorAppConfigUpdate\"));\r\n        }\r\n        setIsBusy({ updatingAppConfig: false });\r\n    }\r\n\r\n    const settingsBlurHandler = (values) => {\r\n        const newSettings = mergeSettings(values);\r\n    }\r\n\r\n    const settingsFormSubmitHandler = async (values, done) => {\r\n        setIsBusy({ saving: true });\r\n        const newSettings = mergeSettings(values);\r\n        const success = await validateAllAsync(newSettings, menuItems);\r\n        if (success) {\r\n            await saveConfigurationAsync(newSettings, menuItems);\r\n            await checkConfigChangesAsync();\r\n            showSuccessMessage(t(\"SuccessChangesSaved\"));\r\n        } else {\r\n            showErrorMessage(t(\"ErrorValuesNotValid\"));\r\n        }\r\n\r\n        done();\r\n        setIsBusy({ saving: false });\r\n    }\r\n\r\n    const menuItemFormSubmitHandler = async (values, done) => {\r\n        setIsBusy({ submit: true });\r\n        const newMenuItems = mergeMenuItems(values);\r\n        const success = await validateAllAsync(settings, newMenuItems);\r\n        if (success) {\r\n            await saveConfigurationAsync(settings, newMenuItems);\r\n            await checkConfigChangesAsync();\r\n            showSuccessMessage(t(\"SuccessChangesSaved\"));\r\n        } else {\r\n            showErrorMessage(t(\"ErrorValuesNotValid\"));\r\n        }\r\n\r\n        done();\r\n        setIsBusy({ submit: false });\r\n    }\r\n\r\n    const pageReadyDeps = [license, configStatus, settings, menuItems, categories, pages, icons];\r\n    useEffect(() => {\r\n        setPageIsReady([\r\n            () => checkLicenseAsync(),\r\n            () => checkConfigChangesAsync(),\r\n            () => getConfigurationAsync(),\r\n            () => getWordPressCategoriesAsync(),\r\n            () => getWordPressPagesAsync(),\r\n            () => getIconClassesAsync()\r\n        ], pageReadyDeps);\r\n    }, pageReadyDeps);\r\n\r\n    useEffect(() => {\r\n        if (isLegacy) {\r\n            navigateTo(RoutePaths.Migrate);\r\n        }\r\n    }, [isLegacy]);\r\n\r\n    return (\r\n        <>\r\n            {pageIsReady ?\r\n                pageHasError ?\r\n                    <ErrorView />\r\n                    :\r\n                    <Grid container spacing={3} className={classes.root}>\r\n                        <Grid item xs={12}>\r\n                            <PageHeader\r\n                                save\r\n                                add\r\n                                action1\r\n                                action2\r\n                                title={t(\"LabelSettings\")}\r\n                                subtitle={t(\"LabelConfigureApplication\")}\r\n                                saveButtonText={t(\"ButtonSaveChanges\")}\r\n                                addButtonText={t(\"ButtonTutorial\")}\r\n                                onAddClick={tutorialClickHandler}\r\n                                action1StartIcon={<PublishIcon />}\r\n                                action2StartIcon={<FlashOnIcon />}\r\n                                action1ButtonText={t(\"ButtonPublish\")}\r\n                                action2ButtonText={t(\"ButtonLiveView\")}\r\n                                action1Disabled={license.status !== LicenseStatus.Active}\r\n                                disabled={isBusy()}\r\n                                onSaveClick={saveAppConfigClickHandler}\r\n                                onAction1Click={publishClickHandler}\r\n                                onAction2Click={liveViewerClickHandler}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <ConfigStatus />\r\n                            {/* \r\n                                Formik validate property is used to save the changes for each field.\r\n                                Validation is enabled only on blur (performance reason), \r\n                                the values are updated on the PageContext.\r\n                            */}\r\n                            <TabContainer className={classes.tabs}>\r\n                                <TabPanel label={t(\"LabelInfo\")} name=\"info\" index={0}>\r\n                                    <InfoForm\r\n                                        formRef={formRef}\r\n                                        errors={errors}\r\n                                        disabled={isBusy()}\r\n                                        onBlur={settingsBlurHandler}\r\n                                        onSubmit={settingsFormSubmitHandler}\r\n                                    />\r\n                                </TabPanel>\r\n                                <TabPanel label={t(\"LabelAssets\")} name=\"assets\" index={1}>\r\n                                    <MediaForm\r\n                                        formRef={formRef}\r\n                                        errors={errors}\r\n                                        upload={uploadAnyFileAsync}\r\n                                        disabled={isBusy()}\r\n                                        onBlur={settingsBlurHandler}\r\n                                        onSubmit={settingsFormSubmitHandler}\r\n                                    />\r\n                                </TabPanel>\r\n                                <TabPanel label={t(\"LabelIos\")} name=\"ios\" index={2}>\r\n                                    <IosForm\r\n                                        formRef={formRef}\r\n                                        errors={errors}\r\n                                        disabled={isBusy()}\r\n                                        upload={uploadAnyFileAsync}\r\n                                        createCerts={requestAppleCertsAsync}\r\n                                        onBlur={settingsBlurHandler}\r\n                                        onSubmit={settingsFormSubmitHandler}\r\n                                    />\r\n                                </TabPanel>\r\n                                <TabPanel label={t(\"LabelAndroid\")} name=\"android\" index={3}>\r\n                                    <AndroidForm\r\n                                        formRef={formRef}\r\n                                        errors={errors}\r\n                                        disabled={isBusy()}\r\n                                        upload={uploadAnyFileAsync}\r\n                                        createCerts={requestGoogleCertsAsync}\r\n                                        onBlur={settingsBlurHandler}\r\n                                        onSubmit={settingsFormSubmitHandler}\r\n                                    />\r\n                                </TabPanel>\r\n                                <TabPanel label={t(\"LabelServices\")} name=\"services\" index={4}>\r\n                                    <ServicesForm\r\n                                        formRef={formRef}\r\n                                        errors={errors}\r\n                                        disabled={isBusy()}\r\n                                        onBlur={settingsBlurHandler}\r\n                                        onSubmit={settingsFormSubmitHandler}\r\n                                    />\r\n                                </TabPanel>\r\n                                <TabPanel label={t(\"LabelMenu\")} name=\"menu\" index={5}>\r\n                                    <MenuForm\r\n                                        formRef={formRef}\r\n                                        errors={errors}\r\n                                        upload={uploadAnyFileAsync}\r\n                                        disabled={isBusy()}\r\n                                        onSubmit={menuItemFormSubmitHandler}\r\n                                    />\r\n                                </TabPanel>\r\n                                <TabPanel label={t(\"LabelSettings\")} name=\"settings\" index={6}>\r\n                                    <SettingsForm\r\n                                        formRef={formRef}\r\n                                        errors={errors}\r\n                                        disabled={isBusy()}\r\n                                        reset={resetSettingsAsync}\r\n                                        onSubmit={settingsFormSubmitHandler}\r\n                                    />\r\n                                </TabPanel>\r\n                            </TabContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                :\r\n                <PageLoader aphorism={aphorism} enableAphorism />\r\n            }\r\n\r\n            <LiveViewDialog\r\n                open={openLVDialog}\r\n                onClose={(e) => setOpenLVDialog(false)}\r\n            />\r\n\r\n            <PublishConfigDialog\r\n                open={openPubDialog}\r\n                onConfirm={(e) => confirmPublishClickHandler()}\r\n                onClose={(e) => setOpenPubDialog(false)}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport const SettingsPage = () => {\r\n\r\n    return (\r\n        <PageProvider>\r\n            <PageContent />\r\n        </PageProvider>\r\n    );\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { cloneDeep } from 'lodash';\r\n\r\nimport { RestApiContext } from '../../contexts/RestApiContext';\r\nimport { PluginContext } from '../../contexts';\r\n\r\nimport {\r\n    FileType,\r\n    useAggregatedState,\r\n    usePageReadyState,\r\n    useBusyState,\r\n    updateBundleItem,\r\n    removeBundleItem\r\n} from '../../../helpers';\r\n\r\nexport const PageContext = React.createContext(null);\r\n\r\nconst { Provider } = PageContext;\r\nexport const PageProvider = ({ ...props }) => {\r\n    const [pageIsReady, pageHasError, setPageIsReady] = usePageReadyState({});\r\n    const [busy, isBusy, setIsBusy] = useBusyState({});\r\n    const [state, setState] = useAggregatedState({\r\n        license: null,\r\n        isLegacy: false,\r\n        settings: null,\r\n        appConfig: null,\r\n        builds: null,\r\n        buildStatus: null,\r\n        buildError: null\r\n    });\r\n\r\n    const {\r\n        plugin\r\n    } = useContext(PluginContext);\r\n\r\n    const apiClient = useContext(RestApiContext);\r\n\r\n    const checkLicenseAsync = async () => {\r\n        try {\r\n            const license = await apiClient.checkLicenseAsync();\r\n            setState({ license });\r\n        } catch (e) {\r\n            console.debug(e);\r\n        }\r\n    }\r\n\r\n    const getSettingsAsync = async () => {\r\n        try {\r\n            const settings = await apiClient.getSettingsAsync();\r\n            const areLegacySettings = settings[\"AppID\"] !== undefined;\r\n            setState({\r\n                settings: areLegacySettings ? {} : settings,\r\n                isLegacy: areLegacySettings\r\n            });\r\n        } catch (e) {\r\n            console.debug(e);\r\n        }\r\n    }\r\n\r\n    const getAppConfigAsync = async () => {\r\n        try {\r\n            const appConfig = await apiClient.getAppConfigAsync();\r\n            setState({ appConfig: appConfig ?? {} });\r\n        } catch (e) {\r\n            console.debug(e);\r\n        }\r\n    }\r\n\r\n    const getBuildsAsync = async () => {\r\n        try {\r\n            const buildList = await apiClient.getBuildsAsync();\r\n            setState({ builds: buildList });\r\n        } catch (e) {\r\n            console.debug(e);\r\n        }\r\n    }\r\n\r\n    const createBuildAsync = async () => {\r\n        try {\r\n            const { settings } = state;\r\n            const buildConfig = {\r\n                Version: 1,\r\n                iOSBuildEnabled     : settings.enableiOSBuild,\r\n                AndroidBuildEnabled : settings.enableAndroidBuild,\r\n                iOS: {\r\n                    p12DownloadUrl: settings.iOSP12CertificateFile,\r\n                    p12FileName: `${FileType.iOSP12Certificate}.p12`,\r\n                    p12Password: settings.iOSCertificatePassword,\r\n                    provisionDownloadUrl: settings.iOSMobileProvisionFile,\r\n                    provisionFileName: `${FileType.iOSMobileProvisioning}.mobileprovision`\r\n                },\r\n                android: {\r\n                    keyStoreDownloadUrl: settings.androidKeyStoreFile,\r\n                    keyStoreFileName: `${FileType.AndroidKeyStore}.keystore`,\r\n                    keyAlias: settings.androidKeyStoreAlias,\r\n                    keyPassword: settings.androidKeyStorePassword\r\n                },\r\n                title : settings.appTitle,\r\n                bundleID: settings.bundleId,\r\n                versionName: settings.versionNumber,\r\n                appIconDownloadUrl: settings.appIcon,\r\n            }\r\n            setState({ buildStatus: null, buildError: null });\r\n            const buildStatus = await apiClient.createBuildAsync(buildConfig);\r\n            if (buildStatus) {\r\n                setState({ buildStatus });\r\n                return buildStatus;\r\n            }\r\n        } catch (e) {\r\n            console.debug(e);\r\n            setState({ buildStatus: null, buildError: e.message });\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Provider value={{\r\n            state,\r\n            pageIsReady,\r\n            pageHasError,\r\n            setPageIsReady,\r\n            isBusy,\r\n            setIsBusy,\r\n            checkLicenseAsync,\r\n            getSettingsAsync,\r\n            getAppConfigAsync,\r\n            getBuildsAsync,\r\n            createBuildAsync\r\n        }}>\r\n            {props.children}\r\n        </Provider>\r\n    );\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    Chip,\r\n    Link,\r\n    Button,\r\n    Table,\r\n    TablePagination,\r\n    TableHead,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    Typography,\r\n    Tooltip,\r\n    IconButton,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    DateTime\r\n} from '../../../common';\r\n\r\nimport { PageContext } from '../PageContext';\r\nimport { PluginContext } from '../../../contexts';\r\n\r\nimport { ProcessStatus, getColoredBottonStyle } from '../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport AppleIcon from '@material-ui/icons/Apple';\r\nimport AndroidIcon from '@material-ui/icons/Android';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport AccessTimeOutlinedIcon from '@material-ui/icons/AccessTimeOutlined';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        overflow: \"hidden\"\r\n    },\r\n    tableHead: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: \"#fff\",\r\n    },\r\n    tableCellHeader: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: \"#fff\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n    },\r\n    tableLoader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: theme.spacing(4),\r\n    },\r\n    overlayContainer: {\r\n        position: \"relative\"\r\n    },\r\n    overlay: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: \"white\",\r\n        opacity: \".4\"\r\n    },\r\n    deleteButton: {\r\n        ...getColoredBottonStyle(theme, colors.red)\r\n    }\r\n}));\r\n\r\nexport const BuildsList = ({\r\n    itemsPerPage,\r\n    loading,\r\n    disabled,\r\n    onLoadMore,\r\n    onAction,\r\n    ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        getAssetUrl\r\n    } = useContext(PluginContext);\r\n\r\n    const {\r\n        state,\r\n        isBusy,\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        builds,\r\n    } = state;\r\n\r\n    const [pageIndex, setPageIndex] = useState(-1);\r\n    const pageIndexChangeHandler = (e, index) => {\r\n        setPageIndex(index);\r\n    }\r\n\r\n    const [pageSize, setPageSize] = useState(itemsPerPage);\r\n    const pageSizeChangeHandler = (e) => {\r\n        setPageSize(e.target.value)\r\n        if (pageIndex < 0)\r\n            setPageIndex(0);\r\n    }\r\n\r\n\r\n    const getDeviceBuildTypeIcon = (buildDeviceType) => {\r\n        switch (buildDeviceType) {\r\n            case \"Android\":\r\n                return (\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        <AndroidIcon />\r\n                        <Typography variant=\"body2\" style={{ paddingLeft: 10 }}>\r\n                            {buildDeviceType}\r\n                        </Typography>\r\n                    </div>\r\n                );\r\n            case \"iOS\":\r\n                return (\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        <AppleIcon />\r\n                        <Typography variant=\"body2\" style={{ paddingLeft: 10 }}>\r\n                            {buildDeviceType}\r\n                        </Typography>\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                        <HelpOutlineIcon />\r\n                        <Typography variant=\"body2\" style={{ paddingLeft: 10 }}>\r\n                            {buildDeviceType}\r\n                        </Typography>\r\n                    </div>\r\n                );\r\n        }\r\n    }\r\n\r\n    const getBuildDeviceTypes = (build) => {\r\n        if (build.deviceBuilds) {\r\n            const deviceTypes = [];\r\n            build.deviceBuilds.forEach(x => {\r\n                deviceTypes.push(\r\n                   <div key={'dummy'} style={{ margin: 8 }}>\r\n                        {getDeviceBuildTypeIcon(x.deviceType)}\r\n                    </div>\r\n                );\r\n            });\r\n            return deviceTypes;\r\n        } else {\r\n            switch (build.status) {\r\n                case ProcessStatus.Enqueued:\r\n                    return (\r\n                        <div style={{ margin: 8 }}>\r\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                <AccessTimeIcon />\r\n                                <Typography variant=\"body2\" style={{ paddingLeft: 10 }}>\r\n                                    {t(\"LabelBuildNotStarted\")}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                case ProcessStatus.Processing:\r\n                    return (\r\n                        <div style={{ margin: 8 }}>\r\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                <SyncIcon />\r\n                                <Typography variant=\"body2\" style={{ paddingLeft: 10 }}>\r\n                                    {t(\"LabelBuildInProgress\")}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                case ProcessStatus.Canceled:\r\n                    return (\r\n                        <div style={{ margin: 8 }}>\r\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                <RemoveCircleIcon />\r\n                                <Typography variant=\"body2\" style={{ paddingLeft: 10 }}>\r\n                                    {t(\"LabelBuildCanceled\")}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                case ProcessStatus.Faulty:\r\n                    return (\r\n                        <div style={{ margin: 8 }}>\r\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                <ErrorIcon />\r\n                                <Typography variant=\"body2\" style={{ paddingLeft: 10 }}>\r\n                                    {t(\"LabelBuildFailed\")}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const getDeviceBuildStatusIcon = (buildStatus, buildResult) => {\r\n        switch (buildStatus) {\r\n            case \"notStarted\":\r\n                return (\r\n                    <div>\r\n                        <Chip\r\n                            color=\"primary\"\r\n                            label={t(\"LabelBuildNotStarted\")}\r\n                            icon={<HourglassFullIcon />}\r\n                        />\r\n                    </div>\r\n                );\r\n            case \"inProgress\":\r\n                return (\r\n                    <div>\r\n                        <Chip\r\n                            color=\"primary\"\r\n                            label={t(\"LabelBuildInProgress\")}\r\n                            icon={<SyncIcon />}\r\n                        />\r\n                    </div>\r\n                );\r\n            case \"cancelling\":\r\n                return (\r\n                    <div>\r\n                        <Chip\r\n                            color=\"primary\"\r\n                            label={t(\"LabelBuildCancelling\")}\r\n                            icon={<RemoveCircleIcon />}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n            case \"completed\":\r\n                if (buildResult === \"failed\") {\r\n                    return (\r\n                        <div>\r\n                            <Chip\r\n                                color=\"primary\"\r\n                                label={t(\"LabelBuildFailed\")}\r\n                                icon={<ErrorOutlineIcon color=\"error\" />}\r\n                            />\r\n                        </div>\r\n                    );\r\n                } else if (buildResult === \"canceled\") {\r\n                    return (\r\n                        <div>\r\n                            <Chip\r\n                                color=\"primary\"\r\n                                label={t(\"LabelBuildCanceled\")}\r\n                                icon={<RemoveCircleIcon />}\r\n                            />\r\n                        </div>\r\n                    );\r\n                } else if (buildResult === \"succeeded\") {\r\n                    return (\r\n                        <div>\r\n                            <Chip\r\n                                color=\"primary\"\r\n                                label={t(\"LabelBuildCompleted\")}\r\n                                icon={<DoneIcon />}\r\n                            />\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div>\r\n                            <Chip\r\n                                color=\"primary\"\r\n                                label={t(\"LabelBuildUnknown\")}\r\n                                icon={<HelpIcon />}\r\n                            />\r\n                        </div>\r\n                    );\r\n                }\r\n            default:\r\n                return (\r\n                    <div>\r\n                        <Chip\r\n                            color=\"primary\"\r\n                            label={t(\"LabelBuildUnknown\")}\r\n                            icon={<HelpIcon />}\r\n                        />\r\n                    </div>\r\n                );\r\n        }\r\n    }\r\n\r\n    const getBuildStatusIcons = (build) => {\r\n        if (build.deviceBuilds) {\r\n            const statusIcons = [];\r\n            build.deviceBuilds.forEach(x => {\r\n                statusIcons.push(\r\n                   <div key={'dummy'} style={{ margin: 8 }}>\r\n                        {getDeviceBuildStatusIcon(x.buildStatus, x.buildResult)}\r\n                    </div>\r\n                );\r\n            });\r\n            return statusIcons;\r\n        } else {\r\n            switch (build.status) {\r\n                case ProcessStatus.Enqueued:\r\n                    return (\r\n                        <div style={{ margin: 8 }}>\r\n                            <Chip\r\n                                color=\"primary\"\r\n                                label={t(\"LabelBuildNotStarted\")}\r\n                                icon={<HourglassFullIcon />}\r\n                            />\r\n                        </div>\r\n                    );\r\n                case ProcessStatus.Processing:\r\n                    return (\r\n                        <div style={{ margin: 8 }}>\r\n                            <Chip\r\n                                color=\"primary\"\r\n                                label={t(\"LabelBuildInProgress\")}\r\n                                icon={<SyncIcon />}\r\n                            />\r\n                        </div>\r\n                    );\r\n                case ProcessStatus.Canceled:\r\n                    return (\r\n                        <div style={{ margin: 8 }}>\r\n                            <Chip\r\n                                color=\"primary\"\r\n                                label={t(\"LabelBuildCanceled\")}\r\n                                icon={<RemoveCircleIcon color=\"error\" />}\r\n                            />\r\n                        </div>\r\n                    );\r\n                case ProcessStatus.Faulty:\r\n                    return (\r\n                        <div style={{ margin: 8 }}>\r\n                            <Chip\r\n                                color=\"primary\"\r\n                                label={t(\"LabelBuildFailed\")}\r\n                                icon={<ErrorOutlineIcon color=\"error\" />}\r\n                            />\r\n                        </div>\r\n                    );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBuildActions = (build) => {\r\n        const actions = [];\r\n        switch (build.status) {\r\n            case ProcessStatus.Enqueued:\r\n            case ProcessStatus.Processing:\r\n                if (build.deviceBuilds) {\r\n                    build.deviceBuilds\r\n                        .filter(x => x.buildStatus === \"completed\" && x.buildResult === \"succeeded\")\r\n                        .forEach(deviceBuild => {\r\n                            if (build.deviceBuilds) {\r\n                               build.deviceBuilds.forEach(bundle => {\r\n                                    actions.push(\r\n                                        <div key={bundle.name} style={{ margin: 8 }}>\r\n                                            {getDownloadAction(build, bundle)}\r\n                                        </div>\r\n                                    );\r\n                                });\r\n                            } else {\r\n                                actions.push(\r\n                                   <div key={'dummy'} style={{ margin: 8 }}>\r\n                                        {getPreDownloadAction(deviceBuild)}\r\n                                    </div>\r\n                                );\r\n                            }\r\n                        });\r\n                }\r\n                //actions.push(\r\n                //    <div key=\"cancel\" style={{ margin: 8 }}>\r\n                //        <Tooltip title={t(\"LabelBuildCancel\")}>\r\n                //            <span>\r\n                //                <Button\r\n                //                    size=\"small\"\r\n                //                    color=\"secondary\"\r\n                //                    variant=\"outlined\"\r\n                //                    onClick={() => cancelClickHandler(build)}\r\n                //                    disabled={isBusy()}>\r\n                //                    {t(\"LabelBuildCancel\")}\r\n                //                </Button>\r\n                //            </span>\r\n                //        </Tooltip>\r\n                //    </div>\r\n                //);\r\n                return actions;\r\n            case ProcessStatus.Completed:\r\n                build.deviceBuilds.forEach(bundle => {\r\n                    actions.push(\r\n                        <div key={bundle.name} style={{ margin: 8 }}>\r\n                            {getDownloadAction(build, bundle)}\r\n                        </div>\r\n                    );\r\n                });\r\n                //actions.push([\r\n                //    <div key=\"delete\" style={{ margin: 8 }}>\r\n                //        {getDeleteAction(build)}\r\n                //    </div>\r\n                //]);\r\n                return actions;\r\n            case ProcessStatus.Canceled:\r\n            case ProcessStatus.Faulty:\r\n                //actions.push([\r\n                //    <div key=\"delete\" style={{ margin: 8 }}>\r\n                //        {getDeleteAction(build)}\r\n                //    </div>\r\n                //]);\r\n                return actions;\r\n        }\r\n    }\r\n\r\n    const getPreDownloadAction = (deviceBuild) => {\r\n        return (\r\n            <Tooltip\r\n                title={`${t(\"LabelBuildDownload\")} ${deviceBuild.deviceType}`}>\r\n                <Typography variant=\"caption\" color=\"primary\">\r\n                    {t(\"LabelPreparingBuildDownload\")}<br />\r\n                    <Typography variant=\"button\" color=\"secondary\">\r\n                        {deviceBuild.deviceType}\r\n                    </Typography>\r\n                </Typography>\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    const getDownloadAction = (build, bundle) => {\r\n        return (\r\n            <Tooltip\r\n                title={`${t(\"LabelBuildDownload\")} ${bundle.name}`}>\r\n                <Typography variant=\"caption\" color=\"primary\">\r\n                    {t(\"LabelBuildDownload\")}<br />\r\n                    <Link\r\n                        href=\"#\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            downloadClickHandler(build, bundle)\r\n                        }}\r\n                        disabled={isBusy()}>\r\n                        <Typography variant=\"button\" color=\"secondary\">\r\n                            {bundle.name}\r\n                        </Typography>\r\n                    </Link>\r\n                </Typography>\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    const getDeleteAction = (build) => {\r\n        return (\r\n            <Tooltip title={t(\"LabelBuildDelete\")}>\r\n                <span>\r\n                    <Button\r\n                        size=\"small\"\r\n                        className={classes.deleteButton}\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => deleteClickHandler(build)}\r\n                        disabled={isBusy()}>\r\n                        {t(\"LabelBuildDelete\")}\r\n                    </Button>\r\n                </span>\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    const downloadClickHandler = (build, bundle) => {\r\n        if (onAction) {\r\n            onAction(\"download\", build, bundle);\r\n        }\r\n    }\r\n\r\n    const cancelClickHandler = (build) => {\r\n        if (onAction) {\r\n            onAction(\"cancel\", build);\r\n        }\r\n    }\r\n\r\n    const deleteClickHandler = (build) => {\r\n        if (onAction) {\r\n            onAction(\"delete\", build);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (pageIndex !== -1 && onLoadMore) {\r\n            onLoadMore(Math.max(0, pageIndex), pageSize);\r\n        }\r\n    }, [pageIndex, pageSize]);\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <div className={classes.overlayContainer}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead className={classes.tableHead}>\r\n                        <TableRow >\r\n                            <TableCell\r\n                                className={classes.tableCellHeader}\r\n                                style={{ width: \"30%\" }}>\r\n                                {t(\"LabelBuildName\")}\r\n                            </TableCell>\r\n                            <TableCell\r\n                                className={classes.tableCellHeader}\r\n                                style={{ width: \"20%\" }}>\r\n                                {t(\"LabelBuildDate\")}\r\n                            </TableCell>\r\n                            <TableCell\r\n                                className={classes.tableCellHeader}\r\n                                style={{ width: \"15%\" }}>\r\n                                {t(\"LabelBuildDeviceType\")}\r\n                            </TableCell>\r\n                            <TableCell\r\n                                className={classes.tableCellHeader}\r\n                                style={{ width: \"15%\" }}>\r\n                                {t(\"LabelBuildStatus\")}\r\n                            </TableCell>\r\n                            <TableCell\r\n                                align=\"center\"\r\n                                className={classes.tableCellHeader}>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {builds && builds.map((build, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {build.buildName}\r\n                                    <Grid container>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"caption\" color=\"secondary\">\r\n                                                {build.processMessage}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        {build.processException &&\r\n                                            <Grid item>\r\n                                                &nbsp;\r\n                                                <Tooltip title={build.processException}>\r\n                                                    <ErrorIcon fontSize=\"small\" color=\"error\" />\r\n                                                </Tooltip>\r\n                                            </Grid>\r\n                                        }\r\n                                    </Grid>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {build.queueDate ?\r\n                                        <DateTime date time value={new Date(build.queueDate)} />\r\n                                        :\r\n                                        \"-\"\r\n                                    }\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {getBuildDeviceTypes(build)}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {getBuildStatusIcons(build)}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {getBuildActions(build)}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                {loading && <div className={classes.overlay} />}\r\n            </div>\r\n        </Paper>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { isEmpty } from 'lodash';\r\n\r\nimport {\r\n    Button,\r\n    CircularProgress\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Alert\r\n} from '@material-ui/lab';\r\n\r\nimport { PageContext } from '../PageContext';\r\n\r\nimport { LicenseStatus } from '../../../../helpers';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    alert: {\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport const BuildStatus = ({ ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const {\r\n        state,\r\n        isBusy\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        license,\r\n        settings,\r\n        appConfig,\r\n        buildStatus,\r\n        buildError\r\n    } = state;\r\n\r\n    const buyLicenseClickHandler = (e) => {\r\n        const buyUrl = `https://eshop.teamonair.com/eshop`;\r\n        window.open(buyUrl, \"_blank\");\r\n    }\r\n\r\n    const [canBuildiOS, setCanBuildiOS] = useState(false);\r\n    const [canBuildAndroid, setCanBuildAndroid] = useState(false);\r\n    useEffect(() => {\r\n        setCanBuildiOS(\r\n            settings.iOSP12CertificateFile !== \"\"\r\n            && settings.iOSMobileProvisionFile !== \"\"\r\n            && settings.iOSCertificatePassword !== \"\"\r\n        );\r\n        setCanBuildAndroid(\r\n            settings.androidKeyStoreFile !== \"\"\r\n        //  && settings.androidKeyStoreAlias !== \"\"\r\n            && settings.androidKeyStorePassword !== \"\"\r\n        );\r\n    }, [settings]);\r\n\r\n    const [buildAlerts, setBuildAlerts] = useState({ message: null, error: null });\r\n    useEffect(() => {\r\n        setBuildAlerts({\r\n            message: buildStatus !== null ? buildStatus.message : null,\r\n            error: buildError\r\n        });\r\n    }, [buildStatus, buildError]);\r\n\r\n    return (\r\n        <div className={clsx(classes.root, props.className)}>\r\n\r\n            {isBusy(\"enqueuing\") &&\r\n                <Alert className={classes.alert} icon={<CircularProgress size={20} />} variant=\"outlined\" severity=\"info\">\r\n                    {t(\"LabelBuildIsInProgress\")}\r\n                </Alert>\r\n            }\r\n\r\n            {isBusy(\"download\") &&\r\n                <Alert className={classes.alert} icon={<CircularProgress size={20} />} variant=\"outlined\" severity=\"info\">\r\n                    {t(\"LabelDownloadIsInProgress\")}\r\n                </Alert>\r\n            }\r\n\r\n\r\n            {license.status !== LicenseStatus.Active &&\r\n                <Alert\r\n                    className={classes.alert}\r\n                    variant=\"outlined\"\r\n                    severity=\"warning\"\r\n                    action={\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={buyLicenseClickHandler}>\r\n                            {t(\"ButtonBuyLicense\")}\r\n                        </Button>\r\n                    }>\r\n                    {t(\"LabelLicenseNotFound\")}\r\n                </Alert>\r\n            }\r\n\r\n            {settings.enableiOSBuild &&\r\n                (canBuildiOS ?\r\n                    <Alert className={classes.alert} variant=\"outlined\" severity=\"success\">\r\n                        {t(\"LabelCanBuildiOS\")}\r\n                    </Alert>\r\n                    :\r\n                    <Alert variant=\"outlined\" severity=\"warning\">\r\n                        {t(\"LabelCantBuildiOS\")}\r\n                    </Alert>\r\n                )\r\n            }\r\n\r\n            {settings.enableAndroidBuild &&\r\n                (canBuildAndroid ?\r\n                    <Alert className={classes.alert} variant=\"outlined\" severity=\"success\">\r\n                        {t(\"LabelCanBuildAndroid\")}\r\n                    </Alert>\r\n                    :\r\n                    <Alert className={classes.alert} variant=\"outlined\" severity=\"warning\">\r\n                        {t(\"LabelCantBuildAndroid\")}\r\n                    </Alert>\r\n                )\r\n            }\r\n\r\n            {isEmpty(appConfig) &&\r\n                <Alert className={classes.alert} variant=\"outlined\" severity=\"warning\">\r\n                    {t(\"LabelNoAppConfigToBuild\")}\r\n                </Alert>\r\n            }\r\n\r\n            {!settings.enableiOSBuild && !settings.enableAndroidBuild &&\r\n                <Alert className={classes.alert} variant=\"outlined\" severity=\"info\">\r\n                    {t(\"LabelCantBuildAnyPlatform\")}\r\n                </Alert>\r\n            }\r\n\r\n            {buildAlerts.message &&\r\n                <Alert\r\n                    className={classes.alert}\r\n                    variant=\"outlined\"\r\n                    severity=\"success\"\r\n                    onClose={() => setBuildAlerts({ ...buildAlerts, message: null })}>\r\n                    {buildAlerts.message}\r\n                </Alert>\r\n            }\r\n\r\n            {buildAlerts.error &&\r\n                <Alert\r\n                    className={classes.alert}\r\n                    variant=\"outlined\"\r\n                    severity=\"error\"\r\n                    onClose={() => setBuildAlerts({ ...buildAlerts, error: null })}>\r\n                    {buildAlerts.error}\r\n                </Alert>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport { isEmpty } from 'lodash';\r\n\r\nimport {\r\n    Grid,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    PageHeader,\r\n    PageLoader,\r\n    ErrorView\r\n} from '../../common';\r\n\r\nimport {\r\n    BuildStatus,\r\n    BuildsList,\r\n    BuildAppDialog\r\n} from './components';\r\n\r\nimport { PageProvider, PageContext } from './PageContext';\r\nimport { ToastContext } from '../../contexts';\r\n\r\nimport { LicenseStatus, Aphorisms, ProcessStatus } from '../../../helpers';\r\n\r\nimport { RoutePaths, navigateTo } from '../../routing';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    progress: {\r\n        color: \"black\"\r\n    }\r\n}));\r\n\r\nconst PageContent = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        state,\r\n        pageIsReady,\r\n        pageHasError,\r\n        setPageIsReady,\r\n        isBusy,\r\n        setIsBusy,\r\n        checkLicenseAsync,\r\n        getSettingsAsync,\r\n        getAppConfigAsync,\r\n        getBuildsAsync,\r\n        createBuildAsync,\r\n    } = useContext(PageContext);\r\n\r\n    const {\r\n        showSuccessMessage,\r\n        showErrorMessage\r\n    } = useContext(ToastContext);\r\n\r\n    const {\r\n        license,\r\n        settings,\r\n        appConfig,\r\n        builds,\r\n        isLegacy\r\n    } = state;\r\n\r\n    const [aphorism, setAphorism] = useState(Aphorisms[Math.floor(Math.random() * Aphorisms.length)])\r\n\r\n    const enqueueBuildClickHandler = async (e) => {\r\n        setIsBusy({ enqueuing: true });\r\n        const buildStatus = await createBuildAsync();\r\n        if (buildStatus !== null) {\r\n            await getBuildsAsync();\r\n            showSuccessMessage(buildStatus.message);\r\n        }\r\n        setIsBusy({ enqueuing: false });\r\n    }\r\n\r\n    const refreshListClickHandler = async (e) => {\r\n        setIsBusy({ reload: true });\r\n        await getBuildsAsync();\r\n        setIsBusy({ reload: false });\r\n    }\r\n\r\n    const actionHandler = async (action, build, bundle) => {\r\n        switch (action) {\r\n\r\n            case \"download\":\r\n                setIsBusy({ download: true });\r\n                const href = bundle.downloadUrl;\r\n                var anchor = document.createElement('a');\r\n                anchor.href = href;\r\n                anchor.download = href;\r\n                document.body.appendChild(anchor);\r\n                anchor.click();\r\n                setIsBusy({ download: false });\r\n                break;\r\n        }\r\n    }\r\n\r\n    const pageReadyDeps = [license, settings, appConfig, builds];\r\n    useEffect(() => {\r\n        setPageIsReady([\r\n            () => checkLicenseAsync(),\r\n            () => getSettingsAsync(),\r\n            () => getAppConfigAsync(),\r\n            () => getBuildsAsync()\r\n        ], pageReadyDeps);\r\n    }, pageReadyDeps);\r\n\r\n    useEffect(() => {\r\n        if (isLegacy) {\r\n            navigateTo(RoutePaths.Migrate);\r\n        }\r\n    }, [isLegacy]);\r\n\r\n    useEffect(() => {\r\n        if (builds && builds.length > 0) {\r\n            const timeoutIds = [];\r\n            builds.forEach(build => {\r\n                if (build.status == ProcessStatus.Enqueued\r\n                    || build.status == ProcessStatus.Processing) {\r\n                    const intervalId = setTimeout(async () => {\r\n                        await getBuildsAsync();\r\n                    }, 180 * 1000);\r\n                    timeoutIds.push(intervalId);\r\n                }\r\n            });\r\n            return () => {\r\n                timeoutIds.forEach(id => {\r\n                    console.debug(`Clearing timeout with id ${id}`);\r\n                    clearTimeout(id);\r\n                });\r\n            }\r\n        }\r\n    }, [builds]);\r\n\r\n    return (\r\n        <>\r\n            {pageIsReady ?\r\n                pageHasError ?\r\n                    <ErrorView />\r\n                    :\r\n                    <Grid container spacing={3} className={classes.root}>\r\n                        <Grid item xs={12}>\r\n                            <PageHeader\r\n                                action1\r\n                                action2\r\n                                title={t(\"LabelBuilds\")}\r\n                                subtitle={t(\"LabelDownloadYourBuilds\")}\r\n                                action1ButtonText={t(\"ButtonCreateBuild\")}\r\n                                action2ButtonText={t(\"ButtonRefresh\")}\r\n                                onAction1Click={enqueueBuildClickHandler}\r\n                                onAction2Click={refreshListClickHandler}\r\n                                action1Disabled={license.status !== LicenseStatus.Active\r\n                                    || (!settings.enableiOSBuild && !settings.enableAndroidBuild)\r\n                                    || isEmpty(appConfig)\r\n                                }\r\n                                disabled={isBusy()}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <BuildStatus />\r\n                            <BuildsList\r\n                                itemsPerPage={10}\r\n                                onAction={actionHandler}\r\n                                loading={isBusy()}\r\n                            />\r\n                            <br />\r\n                        </Grid>\r\n                    </Grid>\r\n                :\r\n                <PageLoader aphorism={aphorism} enableAphorism />\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport const BuildsPage = () => {\r\n\r\n    return (\r\n        < PageProvider >\r\n            <PageContent />\r\n        </PageProvider >\r\n    );\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport QRCode from 'qrcode.react';\r\n\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport { PageContext } from '../../PageContext';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {}\r\n}));\r\n\r\nexport const BuildAppDialog = ({\r\n    open,\r\n    onConfirm,\r\n    onClose,\r\n    ...props\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const {\r\n        state\r\n    } = useContext(PageContext);\r\n\r\n    return (\r\n        <Dialog\r\n            className={clsx(classes.root, props.className)}\r\n            open={open}\r\n            onClose={onClose}>\r\n            <DialogTitle>\r\n                {t(\"DialogBuildApp\")}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {t(\"LabelConfirmBuildApp\")}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    autoFocus\r\n                    onClick={onConfirm}\r\n                    color=\"primary\">\r\n                    {t(\"ButtonOk\")}\r\n                </Button>\r\n                <Button\r\n                    autoFocus\r\n                    onClick={onClose}\r\n                    color=\"primary\">\r\n                    {t(\"ButtonCancel\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeopleOutlined'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 150,\r\n        padding: theme.spacing(3),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    image: {\r\n        display: 'inline-block',\r\n        marginTop: 50,\r\n        width: '200px',\r\n        height: '200px'\r\n    }\r\n}));\r\n\r\nexport const NotFoundPage = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography align=\"center\" variant=\"h2\">\r\n                {t(\"LabelPageNotFound\")}\r\n            </Typography>\r\n            <br />\r\n            <Typography align=\"center\" variant=\"body1\">\r\n                {t(\"LabelShadyPath\")}\r\n            </Typography>\r\n            <br />\r\n            <EmojiPeopleIcon className={classes.image} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport BugReportIcon from '@material-ui/icons/BugReport'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 150,\r\n        padding: theme.spacing(3),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    image: {\r\n        display: 'inline-block',\r\n        marginTop: 50,\r\n        width: '200px',\r\n        height: '200px'\r\n    }\r\n}));\r\n\r\nexport const ErrorPage = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography align=\"center\" variant=\"h2\">\r\n                {t(\"LabelGenericError\")}\r\n            </Typography>\r\n            <br />\r\n            <Typography align=\"center\" variant=\"body1\">\r\n                {t(\"LabelGenericErrorMessage\")}\r\n            </Typography>\r\n            <br />\r\n            <BugReportIcon className={classes.image} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport CloudOffIcon from '@material-ui/icons/CloudOff'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 150,\r\n        padding: theme.spacing(3),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    image: {\r\n        display: 'inline-block',\r\n        marginTop: 50,\r\n        width: '200px',\r\n        height: '200px'\r\n    }\r\n}));\r\n\r\nexport const NoLocalErrorPage = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography align=\"center\" variant=\"h2\">\r\n                {t(\"LabelNoLocalError\")}\r\n            </Typography>\r\n            <br />\r\n            <Typography align=\"center\" variant=\"body1\">\r\n                {t(\"LabelNoLocalErrorMessage\")}\r\n            </Typography>\r\n            <br />\r\n            <CloudOffIcon className={classes.image} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport HttpsIcon from '@material-ui/icons/Https'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 150,\r\n        padding: theme.spacing(3),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    image: {\r\n        display: 'inline-block',\r\n        marginTop: 50,\r\n        width: '200px',\r\n        height: '200px'\r\n    }\r\n}));\r\n\r\nexport const NoHttpErrorPage = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography align=\"center\" variant=\"h2\">\r\n                {t(\"LabelNoHttpError\")}\r\n            </Typography>\r\n            <br />\r\n            <Typography align=\"center\" variant=\"body1\">\r\n                {t(\"LabelNoHttpErrorMessage\")}\r\n            </Typography>\r\n            <br />\r\n            <HttpsIcon className={classes.image} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n   SettingsPage,\r\n   BuildsPage,\r\n   NotFoundPage,\r\n   ErrorPage,\r\n   NoHttpErrorPage,\r\n   NoLocalErrorPage\r\n} from '../pages';\r\n\r\nexport const RoutePaths = {\r\n   Settings: \"/settings\",\r\n   Builds: \"/builds\",\r\n   Migrate: \"/migrate\",\r\n   Error: \"/error\",\r\n   ErrorNoLocal: \"/error/nolocal\",\r\n   ErrorNoHttp: \"/error/nohttp\",\r\n}\r\n\r\nexport const navigateTo = (path) => {\r\n   window.location = `/wp-admin/admin.php?page=my-fastapp#${path}`;\r\n}\r\n\r\nconst checkValidSiteDomain = () => {\r\n   return true;\r\n   const url = window.location.href;\r\n   if (url.includes(\"http://\")) {\r\n      // Only https is supported\r\n      navigateTo(RoutePaths.ErrorNoHttp);\r\n      return false;\r\n   } else if (url.includes(\"localhost\")\r\n      || url.includes(\"127.0.0.1\")) {\r\n      // Only online sites are supported\r\n      navigateTo(RoutePaths.ErrorNoLocal);\r\n      return false;\r\n   } else {\r\n      return true;\r\n   }\r\n}\r\n\r\nconst CheckedRoute = ({ ...props }) => {\r\n   if (checkValidSiteDomain()) {\r\n      return <Route {...props} />;\r\n   } else return null;\r\n}\r\n\r\nexport const Routes = ({ ...props }) => {\r\n\r\n   return (\r\n      <Switch>\r\n\r\n         <CheckedRoute exact path={RoutePaths.Settings} component={SettingsPage} />\r\n         <CheckedRoute exact path={RoutePaths.Builds} component={BuildsPage} />\r\n\r\n         <Route exact path={RoutePaths.ErrorNoHttp} component={NoHttpErrorPage} />\r\n         <Route exact path={RoutePaths.ErrorNoLocal} component={NoLocalErrorPage} />\r\n         <Route exact path={RoutePaths.Error} component={ErrorPage} />\r\n\r\n         <Route component={NotFoundPage} />\r\n\r\n      </Switch>\r\n   );\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\n\r\nimport {\r\n    CssBaseline,\r\n    TextField\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    PageFooter\r\n} from '../common';\r\n\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nexport const Layout = ({ ...props }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* <CssBaseline /> */}\r\n            <main className={classes.content}>\r\n                {props.children}\r\n                <PageFooter />\r\n            </main>\r\n        </div>\r\n    );\r\n}","import * as Baseline from './components/contexts/Baseline'\r\n\r\nimport React from 'react';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { create } from 'jss';\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\nimport increaseSpecificity from 'jss-increase-specificity';\r\n\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nimport {\r\n\t PluginProvider,\r\n\t FetchProvider,\r\n\t ToastProvider,\r\n\t RestApiProvider,\r\n} from './components/contexts';\r\n\r\nimport { Routes } from './components/routing';\r\n\r\nimport { Layout } from './components/layout';\r\n\r\nimport './components/localization/i18n';\r\n\r\nconst theme = createMuiTheme({\r\n\t palette: {\r\n\t\t  primary: {\r\n\t\t\t\tmain: \"#7957d5\"\r\n\t\t  },\r\n\t\t  secondary: {\r\n\t\t\t\tmain: \"#F38F1A\"\r\n\t\t  },\r\n\t\t  text: {\r\n\t\t\t\tsecondary: \"#515151\"\r\n\t\t  }\r\n\t },\r\n\t overrides: {\r\n\t\t  MuiInputBase: {\r\n\t\t\t\tinput: {\r\n\t\t\t\t\t minHeight: \"0\",\r\n\t\t\t\t\t \"&:focus\": {\r\n\t\t\t\t\t\t  outline: \"none !important\",\r\n\t\t\t\t\t\t  boxShadow: \"none !important\"\r\n\t\t\t\t\t }\r\n\t\t\t\t},\r\n\t\t  },\r\n\t\t  MuiStepIcon: {\r\n\t\t\t\troot: {\r\n\t\t\t\t\t '&$active': {\r\n\t\t\t\t\t\t  color: \"#7957d5\",\r\n\t\t\t\t\t },\r\n\t\t\t\t\t '&$completed': {\r\n\t\t\t\t\t\t  color: \"#d1d1d1\",\r\n\t\t\t\t\t },\r\n\t\t\t\t},\r\n\t\t  },\r\n\t\t  MuiSwitch: {\r\n\t\t  },\r\n\t\t  MuiCheckbox: {\r\n\t\t\t\tcolorSecondary: {\r\n\t\t\t\t\t color: '#7957d5',\r\n\t\t\t\t\t '&$checked': {\r\n\t\t\t\t\t\t  color: '#7957d5',\r\n\t\t\t\t\t },\r\n\t\t\t\t},\r\n\t\t  },\r\n\t\t  MuiTabs: {\r\n\t\t\t\tindicator: {\r\n\t\t\t\t\t backgroundColor: \"#F38F1A\"\r\n\t\t\t\t}\r\n\t\t  }\r\n\t },\r\n\t breakpoints: {\r\n\t\t  keys: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"],\r\n\t\t  up: (key) => `@media (min-width:${{\r\n\t\t\t\txs: 0,\r\n\t\t\t\tsm: 600,\r\n\t\t\t\tmd: 960,\r\n\t\t\t\tlg: 1150,\r\n\t\t\t\txl: 1600,\r\n\t\t  }[key]}px)`\r\n\r\n\t },\r\n\t zIndex: {\r\n\t\t  snackbar: 999999\r\n\t }\r\n});\r\n\r\nconst jss = create({\r\n\t plugins: [...jssPreset().plugins, increaseSpecificity({ repeat: 1 })],\r\n});\r\n\r\n// jQuery is included by WP\r\n// To allow webpack to build and not giving error we are\r\n// creating a local reference only if it exists \r\n// (basically when the javascript is executed inside the WordPress context)\r\nlet _jQuery = null;\r\nif (typeof variable !== 'jQuery') {\r\n\t _jQuery = window['jQuery'];\r\n}\r\n\r\n// wpApAdminSettings is a global variable defined in WP\r\n// To allow webpack to build and not giving error we are\r\n// creating a local reference only if it exists \r\n// (basically when the javascript is executed inside the WordPress context)\r\nlet _wpApAdminSettings = {};\r\nif (typeof variable !== 'wpApAdminSettings') {\r\n\t_wpApAdminSettings = window['wpApAdminSettings'];\r\n}\r\n\r\nlet registered = false;\r\nif (!registered) { \r\n\r\n\tfunction makeSyncPostRequest(url, data)\r\n\t{\r\n\t\ttry {\r\n\t\t\tvar xhr = new XMLHttpRequest();\r\n\t\t\txhr.open(\"POST\", url, false); // `false` makes the request synchronous\r\n\r\n\t\t\t// Set the request headers if needed\r\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n\t\t\txhr.setRequestHeader(\"MyFastAppToken1\", Baseline.GetApiKeyInternal());\r\n\r\n\t\t\t// Send the request with the data\r\n\t\t\txhr.send(JSON.stringify(data));\r\n\r\n\t\t\t// Check if the request was successful\r\n\t\t\tif (xhr.status === 200) {\r\n\t\t\t\treturn xhr.responseText;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Request failed with status ' + xhr.status);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch { }\r\n\t}\r\n\r\n\tlet data = {\r\n\t\temail\t\t\t\t\t: _wpApAdminSettings.adminEmail,\r\n\t\tpluginVersion\t\t: _wpApAdminSettings.pluginVersion,\r\n\t\tplatformVersion\t: _wpApAdminSettings.platformVersion\r\n\t};\r\n\tmakeSyncPostRequest(_wpApAdminSettings.externalAPIUrl + \"PLG_NotifyStarting\", data);\r\n\r\n\tregistered = true;\r\n}\r\n\r\n\r\nconst App = ({ ...props }) => {\r\n\r\n\t if (_jQuery)\r\n\t\t  _jQuery('body').removeClass('wp-core-ui wp-admin');\r\n\r\n\t return (\r\n\t\t  <StylesProvider jss={jss}>\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t <SnackbarProvider maxSnack={5}>\r\n\t\t\t\t\t\t  <ToastProvider>\r\n\t\t\t\t\t\t\t\t<PluginProvider>\r\n\t\t\t\t\t\t\t\t\t <FetchProvider>\r\n\t\t\t\t\t\t\t\t\t\t  <RestApiProvider>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Layout>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t <Routes />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Layout>\r\n\t\t\t\t\t\t\t\t\t\t  </RestApiProvider>\r\n\t\t\t\t\t\t\t\t\t </FetchProvider>\r\n\t\t\t\t\t\t\t\t</PluginProvider>\r\n\t\t\t\t\t\t  </ToastProvider>\r\n\t\t\t\t\t </SnackbarProvider>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t  </StylesProvider>\r\n\t );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst rootDiv = document.getElementById(\"mfa-root\");\r\nif (rootDiv) {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </React.StrictMode>,\r\n        rootDiv\r\n    );\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}